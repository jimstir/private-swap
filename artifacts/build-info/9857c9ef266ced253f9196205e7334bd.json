{"id":"9857c9ef266ced253f9196205e7334bd","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"contracts/interfaces/ISwapManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface ISwapManager {\n    struct SwapOrder {\n        address initiator;\n        address resolver;\n        uint256 amountIn;\n        uint256 amountOutMin;\n        address tokenIn;\n        address tokenOut;\n        uint256 deadline;\n        bytes32 secretHash;\n        bool isFulfilled;\n        bool isRefunded;\n    }\n\n    event OrderCreated(\n        bytes32 indexed orderId,\n        address indexed initiator,\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        bytes32 secretHash\n    );\n\n    event OrderFulfilled(\n        bytes32 indexed orderId,\n        address indexed resolver,\n        bytes32 secret\n    );\n\n    event OrderRefunded(bytes32 indexed orderId);\n\n    function createOrder(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        uint256 deadline,\n        bytes32 secretHash\n    ) external payable returns (bytes32);\n\n    function fulfillOrder(\n        bytes32 orderId,\n        uint256 amountOut,\n        bytes32 secret\n    ) external payable;\n\n    function refundOrder(bytes32 orderId) external;\n\n    function registerWorkerWallet(address workerWallet) external;\n    \n    function getOrder(bytes32 orderId) external view returns (\n        address initiator,\n        address resolver,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address tokenIn,\n        address tokenOut,\n        uint256 deadline,\n        bytes32 secretHash,\n        bool isFulfilled,\n        bool isRefunded\n    );\n    \n    /**\n     * @notice Register a worker wallet that can be used to fulfill orders\n     * @param workerWallet The address of the worker wallet to register\n     */\n}\n"},"contracts/interfaces/IWorkerWallet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface IWorkerWallet {\n    event Executed(address indexed target, uint256 value, bytes data, bool success);\n    event Withdrawn(address token, uint256 amount, address to);\n    \n    function execute(\n        address target,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bool success, bytes memory result);\n    \n    function withdraw(address token, uint256 amount, address to) external;\n    \n    function owner() external view returns (address);\n    \n    function swapManager() external view returns (address);\n}\n"},"contracts/mock/MockRelayer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../interfaces/ISwapManager.sol\";\n\ncontract MockRelayer {\n    ISwapManager public swapManager;\n    \n    // Events to track relayer actions\n    event OrderReceived(\n        bytes32 indexed orderId,\n        address indexed initiator,\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        bytes32 secretHash\n    );\n    \n    event OrderFulfilled(\n        bytes32 indexed orderId,\n        address indexed resolver,\n        uint256 amountOut,\n        bytes32 secret\n    );\n\n    constructor(address _swapManager) {\n        swapManager = ISwapManager(_swapManager);\n    }\n\n    // Simulate receiving an order from a user\n    function receiveOrder(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        uint256 deadline,\n        bytes32 secretHash\n    ) external payable returns (bytes32) {\n        // Transfer tokens from the user to this contract first\n        if (tokenIn != address(0)) {\n            IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn);\n            // Approve the swap manager to spend the tokens\n            IERC20(tokenIn).approve(address(swapManager), amountIn);\n        }\n        \n        // Create the order in the swap manager\n        bytes32 orderId = swapManager.createOrder{\n            value: tokenIn == address(0) ? amountIn : 0\n        }(\n            tokenIn,\n            tokenOut,\n            amountIn,\n            amountOutMin,\n            deadline,\n            secretHash\n        );\n        \n        emit OrderReceived(\n            orderId,\n            msg.sender,\n            tokenIn,\n            tokenOut,\n            amountIn,\n            amountOutMin,\n            secretHash\n        );\n        \n        return orderId;\n    }\n    \n    // Simulate a resolver fulfilling an order\n    function fulfillOrder(\n        bytes32 orderId,\n        uint256 amountOut,\n        bytes32 secret\n    ) external payable {\n        // Forward any ETH sent with the transaction to the swap manager\n        (bool success, ) = address(swapManager).call{value: msg.value}(\n            abi.encodeWithSignature(\n                \"fulfillOrder(bytes32,uint256,bytes32)\",\n                orderId,\n                amountOut,\n                secret\n            )\n        );\n        require(success, \"Fulfill order failed\");\n        emit OrderFulfilled(orderId, msg.sender, amountOut, secret);\n    }\n}\n"},"contracts/SwapManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./interfaces/ISwapManager.sol\";\nimport \"./interfaces/IWorkerWallet.sol\";\n\ncontract SwapManager is ISwapManager, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    mapping(bytes32 => SwapOrder) public orders;\n    mapping(bytes32 => bool) public usedSecrets;\n    mapping(address => bool) public isWorkerWallet;\n    \n    address public immutable WETH;\n    \n    constructor(address weth) {\n        WETH = weth;\n    }\n\n    receive() external payable {}\n\n    function createOrder(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        uint256 deadline,\n        bytes32 secretHash\n    ) external payable nonReentrant returns (bytes32) {\n        require(amountIn > 0, \"Zero amount\");\n        require(deadline > block.timestamp, \"Invalid deadline\");\n        require(secretHash != bytes32(0), \"Invalid secret hash\");\n\n        bytes32 orderId = keccak256(\n            abi.encodePacked(\n                msg.sender,\n                block.timestamp,\n                amountIn,\n                tokenIn,\n                tokenOut,\n                secretHash\n            )\n        );\n\n        require(orders[orderId].initiator == address(0), \"Order exists\");\n\n        if (tokenIn == address(0)) {\n            require(msg.value == amountIn, \"Incorrect ETH amount\");\n        } else {\n            IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn);\n        }\n\n        orders[orderId] = SwapOrder({\n            initiator: msg.sender,\n            resolver: address(0),\n            amountIn: amountIn,\n            amountOutMin: amountOutMin,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            deadline: deadline,\n            secretHash: secretHash,\n            isFulfilled: false,\n            isRefunded: false\n        });\n\n        emit OrderCreated(\n            orderId,\n            msg.sender,\n            tokenIn,\n            tokenOut,\n            amountIn,\n            amountOutMin,\n            secretHash\n        );\n\n        return orderId;\n    }\n\n    function registerWorkerWallet(address workerWallet) external {\n        require(!isWorkerWallet[workerWallet], \"Already registered\");\n        require(IWorkerWallet(workerWallet).owner() == msg.sender, \"Not owner\");\n        isWorkerWallet[workerWallet] = true;\n    }\n    \n    function getOrder(bytes32 orderId) external view returns (\n        address initiator,\n        address resolver,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address tokenIn,\n        address tokenOut,\n        uint256 deadline,\n        bytes32 secretHash,\n        bool isFulfilled,\n        bool isRefunded\n    ) {\n        SwapOrder storage order = orders[orderId];\n        return (\n            order.initiator,\n            order.resolver,\n            order.amountIn,\n            order.amountOutMin,\n            order.tokenIn,\n            order.tokenOut,\n            order.deadline,\n            order.secretHash,\n            order.isFulfilled,\n            order.isRefunded\n        );\n    }\n\n    function fulfillOrder(\n        bytes32 orderId,\n        uint256 amountOut,\n        bytes32 secret\n    ) external payable nonReentrant {\n        SwapOrder storage order = orders[orderId];\n        require(order.initiator != address(0), \"Order not found\");\n        require(!order.isFulfilled, \"Order already fulfilled\");\n        require(!order.isRefunded, \"Order was refunded\");\n        require(block.timestamp <= order.deadline, \"Order expired\");\n        require(keccak256(abi.encodePacked(secret)) == order.secretHash, \"Invalid secret\");\n        require(!usedSecrets[secret], \"Secret already used\");\n        require(amountOut >= order.amountOutMin, \"Insufficient output amount\");\n        \n        // If called by a worker wallet, verify it's the owner of the wallet\n        if (isWorkerWallet[msg.sender]) {\n            IWorkerWallet workerWallet = IWorkerWallet(msg.sender);\n            require(workerWallet.owner() == tx.origin, \"Not worker wallet owner\");\n        }\n\n        order.isFulfilled = true;\n        order.resolver = msg.sender;\n        usedSecrets[secret] = true;\n\n        // Transfer tokens to resolver\n        if (order.tokenIn == address(0)) {\n            // For native ETH, the amount should be in the contract\n            require(address(this).balance >= order.amountIn, \"Insufficient ETH balance\");\n            (bool success, ) = msg.sender.call{value: order.amountIn}(\"\");\n            require(success, \"ETH transfer failed\");\n        } else {\n            IERC20(order.tokenIn).safeTransfer(msg.sender, order.amountIn);\n        }\n\n        // Transfer output tokens from resolver to initiator\n        if (order.tokenOut == address(0)) {\n            require(msg.value >= amountOut, \"Insufficient ETH sent\");\n            if (msg.value > amountOut) {\n                payable(msg.sender).transfer(msg.value - amountOut);\n            }\n            payable(order.initiator).transfer(amountOut);\n        } else {\n            IERC20(order.tokenOut).safeTransferFrom(\n                msg.sender,\n                order.initiator,\n                amountOut\n            );\n        }\n\n        emit OrderFulfilled(orderId, msg.sender, secret);\n    }\n\n    function refundOrder(bytes32 orderId) external nonReentrant {\n        SwapOrder storage order = orders[orderId];\n        require(order.initiator != address(0), \"Order not found\");\n        require(!order.isFulfilled, \"Order already fulfilled\");\n        require(!order.isRefunded, \"Already refunded\");\n        require(block.timestamp > order.deadline, \"Deadline not reached\");\n        require(msg.sender == order.initiator, \"Not order initiator\");\n\n        order.isRefunded = true;\n\n        if (order.tokenIn == address(0)) {\n            payable(order.initiator).transfer(order.amountIn);\n        } else {\n            IERC20(order.tokenIn).safeTransfer(order.initiator, order.amountIn);\n        }\n\n        emit OrderRefunded(orderId);\n    }\n\n    \n}\n"},"contracts/WorkerWallet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./interfaces/IWorkerWallet.sol\";\nimport \"./interfaces/ISwapManager.sol\";\n\ncontract WorkerWallet is IWorkerWallet {\n    using SafeERC20 for IERC20;\n\n    address public override owner;\n    address public override swapManager;\n    bool private initialized;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"WorkerWallet: caller is not the owner\");\n        _;\n    }\n\n    modifier onlySwapManager() {\n        require(msg.sender == swapManager, \"WorkerWallet: caller is not the swap manager\");\n        _;\n    }\n\n    constructor(address _owner, address _swapManager) {\n        require(_owner != address(0), \"WorkerWallet: owner is zero address\");\n        require(_swapManager != address(0), \"WorkerWallet: swap manager is zero address\");\n        \n        owner = _owner;\n        swapManager = _swapManager;\n    }\n\n    receive() external payable {}\n\n    function execute(\n        address target,\n        uint256 value,\n        bytes calldata data\n    ) external override onlyOwner returns (bool success, bytes memory result) {\n        (success, result) = target.call{value: value}(data);\n        emit Executed(target, value, data, success);\n    }\n\n    function withdraw(address token, uint256 amount, address to) external override onlyOwner {\n        require(to != address(0), \"WorkerWallet: cannot withdraw to zero address\");\n        \n        if (token == address(0)) {\n            (bool success, ) = to.call{value: amount}(\"\");\n            require(success, \"WorkerWallet: ETH transfer failed\");\n        } else {\n            IERC20(token).safeTransfer(to, amount);\n        }\n        \n        emit Withdrawn(token, amount, to);\n    }\n}\n"},"contracts/WorkerWalletFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./WorkerWallet.sol\";\nimport \"./interfaces/ISwapManager.sol\";\n\ncontract WorkerWalletFactory {\n    event WorkerWalletCreated(address indexed owner, address wallet);\n    \n    mapping(address => address) public getWorkerWallet;\n    mapping(address => bool) public isWorkerWallet;\n    \n    function createWorkerWallet(address _owner, address _swapManager) external returns (address workerWallet) {\n        require(getWorkerWallet[_owner] == address(0), \"WorkerWalletFactory: wallet already exists\");\n        \n        // Get the creation code of WorkerWallet\n        bytes memory bytecode = type(WorkerWallet).creationCode;\n        \n        // Encode constructor arguments\n        bytes memory constructorArgs = abi.encode(_owner, _swapManager);\n        \n        // Create the init code with constructor arguments\n        bytes memory initCode = abi.encodePacked(bytecode, constructorArgs);\n        \n        bytes32 salt = keccak256(abi.encodePacked(_owner, _swapManager, block.timestamp));\n        \n        assembly {\n            workerWallet := create2(0, add(initCode, 0x20), mload(initCode), salt)\n            if iszero(extcodesize(workerWallet)) {\n                revert(0, 0)\n            }\n        }\n        \n        // Register the worker wallet\n        getWorkerWallet[_owner] = workerWallet;\n        isWorkerWallet[workerWallet] = true;\n        \n        // Register the worker wallet with the swap manager\n        ISwapManager(_swapManager).registerWorkerWallet(workerWallet);\n        \n        emit WorkerWalletCreated(_owner, workerWallet);\n    }\n    \n    function computeWorkerWalletAddress(address _owner, address _swapManager) public view returns (address) {\n        bytes32 hash = keccak256(\n            abi.encodePacked(\n                bytes1(0xff),\n                address(this),\n                keccak256(abi.encodePacked(_owner, _swapManager, block.timestamp)),\n                keccak256(type(WorkerWallet).creationCode)\n            )\n        );\n        return address(uint160(uint256(hash)));\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[64]},"id":65,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"137:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":64,"linearizedBaseContracts":[64],"name":"ReentrancyGuard","nameLocation":"906:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:0","nodeType":"VariableDeclaration","scope":64,"src":"1676:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:0","nodeType":"VariableDeclaration","scope":64,"src":"1723:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1783:7:0","nodeType":"VariableDeclaration","scope":64,"src":"1767:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":17,"nodeType":"Block","src":"1811:39:0","statements":[{"expression":{"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":13,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":14,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1831:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"nodeType":"ExpressionStatement","src":"1821:22:0"}]},"id":18,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1808:2:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1811:0:0"},"scope":64,"src":"1797:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":28,"nodeType":"Block","src":"2251:79:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":21,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2261:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":23,"nodeType":"ExpressionStatement","src":"2261:21:0"},{"id":24,"nodeType":"PlaceholderStatement","src":"2292:1:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":25,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2303:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"2303:20:0"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1856:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":29,"name":"nonReentrant","nameLocation":"2236:12:0","nodeType":"ModifierDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"2248:2:0"},"src":"2227:103:0","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"2375:248:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":33,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":34,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2479:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":32,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2460:63:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2608:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42,"nodeType":"ExpressionStatement","src":"2598:18:0"}]},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2364:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"2375:0:0"},"scope":64,"src":"2336:287:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":51,"nodeType":"Block","src":"2667:171:0","statements":[{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2809:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":48,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2819:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"2809:22:0"}]},"id":52,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2656:2:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2667:0:0"},"scope":64,"src":"2629:209:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":62,"nodeType":"Block","src":"3081:43:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"3098:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":59,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3109:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":57,"id":61,"nodeType":"Return","src":"3091:26:0"}]},"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2844:168:0","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":63,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"3049:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"3075:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:0"},"scope":64,"src":"3017:107:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":65,"src":"888:2238:0","usedErrors":[],"usedEvents":[]}],"src":"112:3015:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[142]},"id":143,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":66,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":142,"linearizedBaseContracts":[142],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":76,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":76,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":76,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":76,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":77,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":85,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":85,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":81,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":85,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":83,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":85,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":86,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":91,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":142,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":99,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":99,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":99,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":142,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":100,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":109,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":109,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":109,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":109,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":142,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":119,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":119,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":119,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":119,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":142,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":129,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":129,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":126,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":142,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":141,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"from","nameLocation":"2676:4:1","nodeType":"VariableDeclaration","scope":141,"src":"2668:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"to","nameLocation":"2690:2:1","nodeType":"VariableDeclaration","scope":141,"src":"2682:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"amount","nameLocation":"2702:6:1","nodeType":"VariableDeclaration","scope":141,"src":"2694:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:1"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"2728:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":138,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:1"},"scope":142,"src":"2646:88:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":143,"src":"202:2534:1","usedErrors":[],"usedEvents":[76,85]}],"src":"106:2631:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[178]},"id":179,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":144,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"148:1963:2","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":178,"linearizedBaseContracts":[178],"name":"IERC20Permit","nameLocation":"2122:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"2141:850:2","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":163,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:2","nodeType":"FunctionDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"owner","nameLocation":"3029:5:2","nodeType":"VariableDeclaration","scope":163,"src":"3021:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"spender","nameLocation":"3052:7:2","nodeType":"VariableDeclaration","scope":163,"src":"3044:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"value","nameLocation":"3077:5:2","nodeType":"VariableDeclaration","scope":163,"src":"3069:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:2","nodeType":"VariableDeclaration","scope":163,"src":"3092:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"v","nameLocation":"3124:1:2","nodeType":"VariableDeclaration","scope":163,"src":"3118:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":155,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"r","nameLocation":"3143:1:2","nodeType":"VariableDeclaration","scope":163,"src":"3135:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"s","nameLocation":"3162:1:2","nodeType":"VariableDeclaration","scope":163,"src":"3154:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:2"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"3178:0:2"},"scope":178,"src":"2996:183:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"3185:294:2","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:2","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"owner","nameLocation":"3508:5:2","nodeType":"VariableDeclaration","scope":171,"src":"3500:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:2"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"3538:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:2"},"scope":178,"src":"3484:63:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"3553:128:2","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:2","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"3764:2:2"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"3790:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:2"},"scope":178,"src":"3739:60:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":179,"src":"2112:1689:2","usedErrors":[],"usedEvents":[]}],"src":"123:3679:2"},"id":2},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[884],"IERC20":[142],"IERC20Permit":[178],"SafeERC20":[554]},"id":555,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":180,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":555,"sourceUnit":143,"src":"140:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":555,"sourceUnit":179,"src":"164:40:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":555,"sourceUnit":885,"src":"205:36:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"243:457:3","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":554,"linearizedBaseContracts":[554],"name":"SafeERC20","nameLocation":"709:9:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":187,"libraryName":{"id":185,"name":"Address","nameLocations":["731:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":884,"src":"731:7:3"},"nodeType":"UsingForDirective","src":"725:26:3","typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":210,"nodeType":"Block","src":"1013:103:3","statements":[{"expression":{"arguments":[{"id":199,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"1043:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":202,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"1073:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:3","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":109,"src":"1073:14:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:3","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":205,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"1098:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"1102:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":200,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":198,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1023:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":209,"nodeType":"ExpressionStatement","src":"1023:86:3"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"757:179:3","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":211,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:3","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"token","nameLocation":"970:5:3","nodeType":"VariableDeclaration","scope":211,"src":"963:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},"typeName":{"id":190,"nodeType":"UserDefinedTypeName","pathNode":{"id":189,"name":"IERC20","nameLocations":["963:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"963:6:3"},"referencedDeclaration":142,"src":"963:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"to","nameLocation":"985:2:3","nodeType":"VariableDeclaration","scope":211,"src":"977:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"value","nameLocation":"997:5:3","nodeType":"VariableDeclaration","scope":211,"src":"989:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:3"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"1013:0:3"},"scope":554,"src":"941:175:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":237,"nodeType":"Block","src":"1445:113:3","statements":[{"expression":{"arguments":[{"id":225,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1475:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":228,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1505:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:3","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":141,"src":"1505:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:3","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":231,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"1534:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":232,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1540:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1544:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":226,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":224,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1455:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"ExpressionStatement","src":"1455:96:3"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"1122:228:3","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":238,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:3","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"token","nameLocation":"1388:5:3","nodeType":"VariableDeclaration","scope":238,"src":"1381:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},"typeName":{"id":214,"nodeType":"UserDefinedTypeName","pathNode":{"id":213,"name":"IERC20","nameLocations":["1381:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"1381:6:3"},"referencedDeclaration":142,"src":"1381:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"from","nameLocation":"1403:4:3","nodeType":"VariableDeclaration","scope":238,"src":"1395:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"to","nameLocation":"1417:2:3","nodeType":"VariableDeclaration","scope":238,"src":"1409:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"1429:5:3","nodeType":"VariableDeclaration","scope":238,"src":"1421:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:3"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"1445:0:3"},"scope":554,"src":"1355:203:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":281,"nodeType":"Block","src":"1894:497:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2143:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":258,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$554","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$554","typeString":"library SafeERC20"}],"id":257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:3","typeDescriptions":{}}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":260,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"2190:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":254,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2159:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:3","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"2159:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":268,"nodeType":"ExpressionStatement","src":"2121:163:3"},{"expression":{"arguments":[{"id":270,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2314:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":273,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2344:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":129,"src":"2344:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:3","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":276,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"2368:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2377:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":271,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":269,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2294:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":280,"nodeType":"ExpressionStatement","src":"2294:90:3"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"1564:249:3","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":282,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:3","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"token","nameLocation":"1846:5:3","nodeType":"VariableDeclaration","scope":282,"src":"1839:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"IERC20","nameLocations":["1839:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"1839:6:3"},"referencedDeclaration":142,"src":"1839:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"spender","nameLocation":"1861:7:3","nodeType":"VariableDeclaration","scope":282,"src":"1853:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"value","nameLocation":"1878:5:3","nodeType":"VariableDeclaration","scope":282,"src":"1870:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:3"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"1894:0:3"},"scope":554,"src":"1818:573:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":318,"nodeType":"Block","src":"2668:194:3","statements":[{"assignments":[294],"declarations":[{"constant":false,"id":294,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:3","nodeType":"VariableDeclaration","scope":318,"src":"2678:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":303,"initialValue":{"arguments":[{"arguments":[{"id":299,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$554","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$554","typeString":"library SafeERC20"}],"id":298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:3","typeDescriptions":{}}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":301,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2732:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":295,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"2701:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:3","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"2701:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:3"},{"expression":{"arguments":[{"id":305,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"2770:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":308,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"2800:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":129,"src":"2800:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:3","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":311,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2824:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2833:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2848:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":306,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":304,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2750:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":317,"nodeType":"ExpressionStatement","src":"2750:105:3"}]},"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"2397:180:3","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":319,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:3","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"token","nameLocation":"2620:5:3","nodeType":"VariableDeclaration","scope":319,"src":"2613:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},"typeName":{"id":285,"nodeType":"UserDefinedTypeName","pathNode":{"id":284,"name":"IERC20","nameLocations":["2613:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"2613:6:3"},"referencedDeclaration":142,"src":"2613:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"spender","nameLocation":"2635:7:3","nodeType":"VariableDeclaration","scope":319,"src":"2627:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"value","nameLocation":"2652:5:3","nodeType":"VariableDeclaration","scope":319,"src":"2644:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:3"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"2668:0:3"},"scope":554,"src":"2582:280:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":363,"nodeType":"Block","src":"3139:321:3","statements":[{"id":362,"nodeType":"UncheckedBlock","src":"3149:305:3","statements":[{"assignments":[331],"declarations":[{"constant":false,"id":331,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:3","nodeType":"VariableDeclaration","scope":362,"src":"3173:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":340,"initialValue":{"arguments":[{"arguments":[{"id":336,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$554","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$554","typeString":"library SafeERC20"}],"id":335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:3","typeDescriptions":{}}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":338,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"3227:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":332,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"3196:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:3","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"3196:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":342,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3257:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3273:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"3249:75:3"},{"expression":{"arguments":[{"id":349,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"3358:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":352,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"3388:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":129,"src":"3388:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:3","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":355,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"3412:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3421:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3436:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":350,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":348,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3338:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":361,"nodeType":"ExpressionStatement","src":"3338:105:3"}]}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"2868:180:3","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":364,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:3","nodeType":"FunctionDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"token","nameLocation":"3091:5:3","nodeType":"VariableDeclaration","scope":364,"src":"3084:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},"typeName":{"id":322,"nodeType":"UserDefinedTypeName","pathNode":{"id":321,"name":"IERC20","nameLocations":["3084:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"3084:6:3"},"referencedDeclaration":142,"src":"3084:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":325,"mutability":"mutable","name":"spender","nameLocation":"3106:7:3","nodeType":"VariableDeclaration","scope":364,"src":"3098:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"value","nameLocation":"3123:5:3","nodeType":"VariableDeclaration","scope":364,"src":"3115:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:3"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[],"src":"3139:0:3"},"scope":554,"src":"3053:407:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":410,"nodeType":"Block","src":"3856:333:3","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:3","nodeType":"VariableDeclaration","scope":410,"src":"3866:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":375,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":385,"initialValue":{"arguments":[{"expression":{"expression":{"id":379,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"3917:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":129,"src":"3917:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:3","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":382,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3941:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"3950:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":377,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:3"},{"condition":{"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:3","subExpression":{"arguments":[{"id":387,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"3996:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},{"id":388,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4003:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":386,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"3972:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":409,"nodeType":"IfStatement","src":"3967:216:3","trueBody":{"id":408,"nodeType":"Block","src":"4018:165:3","statements":[{"expression":{"arguments":[{"id":392,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4052:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":395,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4082:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":129,"src":"4082:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:3","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":398,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4106:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":393,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":391,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"4032:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":402,"nodeType":"ExpressionStatement","src":"4032:86:3"},{"expression":{"arguments":[{"id":404,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4152:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},{"id":405,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4159:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":403,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"4132:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"4132:40:3"}]}}]},"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"3466:308:3","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":411,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:3","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"token","nameLocation":"3808:5:3","nodeType":"VariableDeclaration","scope":411,"src":"3801:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},"typeName":{"id":367,"nodeType":"UserDefinedTypeName","pathNode":{"id":366,"name":"IERC20","nameLocations":["3801:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"3801:6:3"},"referencedDeclaration":142,"src":"3801:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"spender","nameLocation":"3823:7:3","nodeType":"VariableDeclaration","scope":411,"src":"3815:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"value","nameLocation":"3840:5:3","nodeType":"VariableDeclaration","scope":411,"src":"3832:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:3"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"3856:0:3"},"scope":554,"src":"3779:410:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":467,"nodeType":"Block","src":"4556:257:3","statements":[{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:3","nodeType":"VariableDeclaration","scope":467,"src":"4566:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":438,"initialValue":{"arguments":[{"id":436,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"4601:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":434,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"4588:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$178","typeString":"contract IERC20Permit"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:3","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":171,"src":"4588:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:3"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"4630:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"4637:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"4646:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":445,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"4653:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":446,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"4663:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":447,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"4666:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":448,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4669:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":439,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"4617:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$178","typeString":"contract IERC20Permit"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:3","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":163,"src":"4617:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"4617:54:3"},{"assignments":[452],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:3","nodeType":"VariableDeclaration","scope":467,"src":"4681:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":457,"initialValue":{"arguments":[{"id":455,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"4715:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":453,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"4702:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$178","typeString":"contract IERC20Permit"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:3","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":171,"src":"4702:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":459,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"4739:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":460,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"4753:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"4731:75:3"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"4195:141:3","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":468,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:3","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"token","nameLocation":"4383:5:3","nodeType":"VariableDeclaration","scope":468,"src":"4370:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$178","typeString":"contract IERC20Permit"},"typeName":{"id":414,"nodeType":"UserDefinedTypeName","pathNode":{"id":413,"name":"IERC20Permit","nameLocations":["4370:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":178,"src":"4370:12:3"},"referencedDeclaration":178,"src":"4370:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$178","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"owner","nameLocation":"4406:5:3","nodeType":"VariableDeclaration","scope":468,"src":"4398:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"spender","nameLocation":"4429:7:3","nodeType":"VariableDeclaration","scope":468,"src":"4421:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"value","nameLocation":"4454:5:3","nodeType":"VariableDeclaration","scope":468,"src":"4446:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:3","nodeType":"VariableDeclaration","scope":468,"src":"4469:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"v","nameLocation":"4501:1:3","nodeType":"VariableDeclaration","scope":468,"src":"4495:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":424,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"r","nameLocation":"4520:1:3","nodeType":"VariableDeclaration","scope":468,"src":"4512:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"s","nameLocation":"4539:1:3","nodeType":"VariableDeclaration","scope":468,"src":"4531:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:3"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"4556:0:3"},"scope":554,"src":"4341:472:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":504,"nodeType":"Block","src":"5266:572:3","statements":[{"assignments":[478],"declarations":[{"constant":false,"id":478,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:3","nodeType":"VariableDeclaration","scope":504,"src":"5615:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":477,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":487,"initialValue":{"arguments":[{"id":484,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"5669:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":481,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"5649:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}],"id":480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:3","typeDescriptions":{}}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:3","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":644,"src":"5641:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":489,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5728:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:3","memberName":"length","nodeType":"MemberAccess","src":"5728:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":495,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5765:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":496,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:3","typeDescriptions":{}}}],"id":498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":493,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:3","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":488,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"5720:111:3"}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"4819:372:3","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":505,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:3","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"token","nameLocation":"5232:5:3","nodeType":"VariableDeclaration","scope":505,"src":"5225:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},"typeName":{"id":471,"nodeType":"UserDefinedTypeName","pathNode":{"id":470,"name":"IERC20","nameLocations":["5225:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"5225:6:3"},"referencedDeclaration":142,"src":"5225:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"data","nameLocation":"5252:4:3","nodeType":"VariableDeclaration","scope":505,"src":"5239:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:3"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"5266:0:3"},"scope":554,"src":"5196:642:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":552,"nodeType":"Block","src":"6428:505:3","statements":[{"assignments":[517,519],"declarations":[{"constant":false,"id":517,"mutability":"mutable","name":"success","nameLocation":"6729:7:3","nodeType":"VariableDeclaration","scope":552,"src":"6724:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":516,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:3","nodeType":"VariableDeclaration","scope":552,"src":"6738:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":518,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":527,"initialValue":{"arguments":[{"id":525,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6785:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":522,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6773:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}],"id":521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:3","typeDescriptions":{}}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:3","memberName":"call","nodeType":"MemberAccess","src":"6765:19:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:3"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":528,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"6819:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":529,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6831:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:3","memberName":"length","nodeType":"MemberAccess","src":"6831:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":535,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6868:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":536,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:3","typeDescriptions":{}}}],"id":538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":533,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:3","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":547,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6919:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}],"id":546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:3","typeDescriptions":{}}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":543,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"6892:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$884_$","typeString":"type(library Address)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":572,"src":"6892:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":515,"id":551,"nodeType":"Return","src":"6800:126:3"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"5844:490:3","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":553,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:3","nodeType":"FunctionDefinition","parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"token","nameLocation":"6379:5:3","nodeType":"VariableDeclaration","scope":553,"src":"6372:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"},"typeName":{"id":508,"nodeType":"UserDefinedTypeName","pathNode":{"id":507,"name":"IERC20","nameLocations":["6372:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"6372:6:3"},"referencedDeclaration":142,"src":"6372:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"data","nameLocation":"6399:4:3","nodeType":"VariableDeclaration","scope":553,"src":"6386:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":510,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:3"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":553,"src":"6422:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":513,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:3"},"scope":554,"src":"6339:594:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":555,"src":"701:6234:3","usedErrors":[],"usedEvents":[]}],"src":"115:6821:3"},"id":3},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[884]},"id":885,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":556,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":884,"linearizedBaseContracts":[884],"name":"Address","nameLocation":"202:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":571,"nodeType":"Block","src":"1478:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":565,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"1702:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:4","memberName":"code","nodeType":"MemberAccess","src":"1702:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:4","memberName":"length","nodeType":"MemberAccess","src":"1702:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":564,"id":570,"nodeType":"Return","src":"1695:30:4"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"216:1191:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":572,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:4","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"account","nameLocation":"1440:7:4","nodeType":"VariableDeclaration","scope":572,"src":"1432:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:4"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"1472:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":562,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:4"},"scope":884,"src":"1412:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"2718:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":583,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$884","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$884","typeString":"library Address"}],"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:4","typeDescriptions":{}}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:4","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":586,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"2761:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"2728:73:4"},{"assignments":[592,null],"declarations":[{"constant":false,"id":592,"mutability":"mutable","name":"success","nameLocation":"2818:7:4","nodeType":"VariableDeclaration","scope":605,"src":"2813:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":591,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":599,"initialValue":{"arguments":[{"hexValue":"","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":593,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2831:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:4","memberName":"call","nodeType":"MemberAccess","src":"2831:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":595,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"2853:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:4"},{"expression":{"arguments":[{"id":601,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"2882:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"ExpressionStatement","src":"2874:78:4"}]},"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"1738:904:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:4","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:4","nodeType":"VariableDeclaration","scope":606,"src":"2666:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"amount","nameLocation":"2701:6:4","nodeType":"VariableDeclaration","scope":606,"src":"2693:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:4"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[],"src":"2718:0:4"},"scope":884,"src":"2647:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":623,"nodeType":"Block","src":"3790:96:4","statements":[{"expression":{"arguments":[{"id":617,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"3829:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"3837:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":616,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[664,708],"referencedDeclaration":708,"src":"3807:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":615,"id":622,"nodeType":"Return","src":"3800:79:4"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"2965:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":624,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:4","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"target","nameLocation":"3731:6:4","nodeType":"VariableDeclaration","scope":624,"src":"3723:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"data","nameLocation":"3752:4:4","nodeType":"VariableDeclaration","scope":624,"src":"3739:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":610,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:4"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":624,"src":"3776:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":613,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:4"},"scope":884,"src":"3701:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":643,"nodeType":"Block","src":"4255:76:4","statements":[{"expression":{"arguments":[{"id":637,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"4294:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4302:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":640,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"4311:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":636,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[664,708],"referencedDeclaration":708,"src":"4272:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":635,"id":642,"nodeType":"Return","src":"4265:59:4"}]},"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"3892:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:4","nodeType":"FunctionDefinition","parameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"target","nameLocation":"4147:6:4","nodeType":"VariableDeclaration","scope":644,"src":"4139:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":629,"mutability":"mutable","name":"data","nameLocation":"4176:4:4","nodeType":"VariableDeclaration","scope":644,"src":"4163:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":628,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:4","nodeType":"VariableDeclaration","scope":644,"src":"4190:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":630,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:4"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"4241:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":633,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:4"},"scope":884,"src":"4108:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"4806:111:4","statements":[{"expression":{"arguments":[{"id":657,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"4845:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":658,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"4853:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"4859:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":656,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[664,708],"referencedDeclaration":708,"src":"4823:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":655,"id":662,"nodeType":"Return","src":"4816:94:4"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"4337:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:4","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"target","nameLocation":"4732:6:4","nodeType":"VariableDeclaration","scope":664,"src":"4724:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"data","nameLocation":"4753:4:4","nodeType":"VariableDeclaration","scope":664,"src":"4740:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":648,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"value","nameLocation":"4767:5:4","nodeType":"VariableDeclaration","scope":664,"src":"4759:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:4"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":664,"src":"4792:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":653,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:4"},"scope":884,"src":"4693:224:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":707,"nodeType":"Block","src":"5344:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":681,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$884","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$884","typeString":"library Address"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:4","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:4","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"5387:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"5354:81:4"},{"assignments":[690,692],"declarations":[{"constant":false,"id":690,"mutability":"mutable","name":"success","nameLocation":"5451:7:4","nodeType":"VariableDeclaration","scope":707,"src":"5446:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":689,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:4","nodeType":"VariableDeclaration","scope":707,"src":"5460:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":691,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":699,"initialValue":{"arguments":[{"id":697,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"5513:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":693,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"5487:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:4","memberName":"call","nodeType":"MemberAccess","src":"5487:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"5506:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:4"},{"expression":{"arguments":[{"id":701,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"5562:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":702,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"5570:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":703,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"5579:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":704,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"5591:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":700,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5535:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":677,"id":706,"nodeType":"Return","src":"5528:76:4"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"4923:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":708,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:4","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"target","nameLocation":"5213:6:4","nodeType":"VariableDeclaration","scope":708,"src":"5205:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"data","nameLocation":"5242:4:4","nodeType":"VariableDeclaration","scope":708,"src":"5229:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":668,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":671,"mutability":"mutable","name":"value","nameLocation":"5264:5:4","nodeType":"VariableDeclaration","scope":708,"src":"5256:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:4","nodeType":"VariableDeclaration","scope":708,"src":"5279:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":672,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:4"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"5330:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":675,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:4"},"scope":884,"src":"5165:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":724,"nodeType":"Block","src":"5888:97:4","statements":[{"expression":{"arguments":[{"id":719,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"5924:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"5932:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":718,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[725,754],"referencedDeclaration":754,"src":"5905:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":717,"id":723,"nodeType":"Return","src":"5898:80:4"}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"5617:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":725,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:4","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"target","nameLocation":"5824:6:4","nodeType":"VariableDeclaration","scope":725,"src":"5816:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"data","nameLocation":"5845:4:4","nodeType":"VariableDeclaration","scope":725,"src":"5832:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":712,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:4"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":725,"src":"5874:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":715,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:4"},"scope":884,"src":"5788:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":753,"nodeType":"Block","src":"6327:168:4","statements":[{"assignments":[738,740],"declarations":[{"constant":false,"id":738,"mutability":"mutable","name":"success","nameLocation":"6343:7:4","nodeType":"VariableDeclaration","scope":753,"src":"6338:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":737,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:4","nodeType":"VariableDeclaration","scope":753,"src":"6352:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":739,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":745,"initialValue":{"arguments":[{"id":743,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6397:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":741,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6379:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:4","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:4"},{"expression":{"arguments":[{"id":747,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6446:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"6454:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":749,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6463:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":750,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"6475:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":746,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"6419:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":736,"id":752,"nodeType":"Return","src":"6412:76:4"}]},"documentation":{"id":726,"nodeType":"StructuredDocumentation","src":"5991:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:4","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"target","nameLocation":"6214:6:4","nodeType":"VariableDeclaration","scope":754,"src":"6206:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"data","nameLocation":"6243:4:4","nodeType":"VariableDeclaration","scope":754,"src":"6230:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":729,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":732,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:4","nodeType":"VariableDeclaration","scope":754,"src":"6257:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":731,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:4"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"6313:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":734,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:4"},"scope":884,"src":"6169:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":770,"nodeType":"Block","src":"6771:101:4","statements":[{"expression":{"arguments":[{"id":765,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6809:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":766,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"6817:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":764,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[771,800],"referencedDeclaration":800,"src":"6788:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":763,"id":769,"nodeType":"Return","src":"6781:84:4"}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"6501:168:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":771,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:4","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"target","nameLocation":"6712:6:4","nodeType":"VariableDeclaration","scope":771,"src":"6704:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"data","nameLocation":"6733:4:4","nodeType":"VariableDeclaration","scope":771,"src":"6720:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":758,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:4"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":771,"src":"6757:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":761,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:4"},"scope":884,"src":"6674:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":799,"nodeType":"Block","src":"7213:170:4","statements":[{"assignments":[784,786],"declarations":[{"constant":false,"id":784,"mutability":"mutable","name":"success","nameLocation":"7229:7:4","nodeType":"VariableDeclaration","scope":799,"src":"7224:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":783,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:4","nodeType":"VariableDeclaration","scope":799,"src":"7238:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":785,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":789,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7285:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":787,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7265:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:4","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:4"},{"expression":{"arguments":[{"id":793,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7334:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":794,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"7342:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":795,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"7351:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":796,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7363:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":792,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"7307:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":782,"id":798,"nodeType":"Return","src":"7300:76:4"}]},"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"6878:175:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:4","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"target","nameLocation":"7105:6:4","nodeType":"VariableDeclaration","scope":800,"src":"7097:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"data","nameLocation":"7134:4:4","nodeType":"VariableDeclaration","scope":800,"src":"7121:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":775,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:4","nodeType":"VariableDeclaration","scope":800,"src":"7148:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":777,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:4"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":800,"src":"7199:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":780,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:4"},"scope":884,"src":"7058:325:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":838,"nodeType":"Block","src":"7865:434:4","statements":[{"condition":{"id":814,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"7879:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":836,"nodeType":"Block","src":"8235:58:4","statements":[{"expression":{"arguments":[{"id":832,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"8257:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":833,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"8269:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":831,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"8249:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":835,"nodeType":"ExpressionStatement","src":"8249:33:4"}]},"id":837,"nodeType":"IfStatement","src":"7875:418:4","trueBody":{"id":830,"nodeType":"Block","src":"7888:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":815,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"7906:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:4","memberName":"length","nodeType":"MemberAccess","src":"7906:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":827,"nodeType":"IfStatement","src":"7902:286:4","trueBody":{"id":826,"nodeType":"Block","src":"7930:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":821,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8132:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":820,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"8121:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"8113:60:4"}]}},{"expression":{"id":828,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"8208:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":813,"id":829,"nodeType":"Return","src":"8201:17:4"}]}}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"7389:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":839,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:4","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"target","nameLocation":"7724:6:4","nodeType":"VariableDeclaration","scope":839,"src":"7716:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"success","nameLocation":"7745:7:4","nodeType":"VariableDeclaration","scope":839,"src":"7740:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":804,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":807,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:4","nodeType":"VariableDeclaration","scope":839,"src":"7762:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":806,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":809,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:4","nodeType":"VariableDeclaration","scope":839,"src":"7795:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":808,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:4"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":839,"src":"7851:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":811,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:4"},"scope":884,"src":"7671:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":862,"nodeType":"Block","src":"8680:135:4","statements":[{"condition":{"id":851,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"8694:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":860,"nodeType":"Block","src":"8751:58:4","statements":[{"expression":{"arguments":[{"id":856,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"8773:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":857,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"8785:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":855,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"8765:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":859,"nodeType":"ExpressionStatement","src":"8765:33:4"}]},"id":861,"nodeType":"IfStatement","src":"8690:119:4","trueBody":{"id":854,"nodeType":"Block","src":"8703:42:4","statements":[{"expression":{"id":852,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"8724:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":850,"id":853,"nodeType":"Return","src":"8717:17:4"}]}}]},"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"8305:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":863,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"success","nameLocation":"8560:7:4","nodeType":"VariableDeclaration","scope":863,"src":"8555:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:4","nodeType":"VariableDeclaration","scope":863,"src":"8577:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":843,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:4","nodeType":"VariableDeclaration","scope":863,"src":"8610:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":845,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":863,"src":"8666:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":848,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:4"},"scope":884,"src":"8520:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":882,"nodeType":"Block","src":"8904:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":870,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8980:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:4","memberName":"length","nodeType":"MemberAccess","src":"8980:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":880,"nodeType":"Block","src":"9310:45:4","statements":[{"expression":{"arguments":[{"id":877,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"9331:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":876,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"ExpressionStatement","src":"9324:20:4"}]},"id":881,"nodeType":"IfStatement","src":"8976:379:4","trueBody":{"id":875,"nodeType":"Block","src":"9003:301:4","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:4","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:4"},"nodeType":"YulFunctionCall","src":"9202:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:4"},"nodeType":"YulFunctionCall","src":"9243:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:4"},"nodeType":"YulFunctionCall","src":"9236:44:4"},"nodeType":"YulExpressionStatement","src":"9236:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":865,"isOffset":false,"isSlot":false,"src":"9208:10:4","valueSize":1},{"declaration":865,"isOffset":false,"isSlot":false,"src":"9251:10:4","valueSize":1}],"id":874,"nodeType":"InlineAssembly","src":"9152:142:4"}]}}]},"id":883,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:4","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:4","nodeType":"VariableDeclaration","scope":883,"src":"8838:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":864,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:4","nodeType":"VariableDeclaration","scope":883,"src":"8863:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":866,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:4"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"8904:0:4"},"scope":884,"src":"8821:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":885,"src":"194:9169:4","usedErrors":[],"usedEvents":[]}],"src":"101:9263:4"},"id":4},"contracts/SwapManager.sol":{"ast":{"absolutePath":"contracts/SwapManager.sol","exportedSymbols":{"Address":[884],"IERC20":[142],"IERC20Permit":[178],"ISwapManager":[1937],"IWorkerWallet":[1990],"ReentrancyGuard":[64],"SafeERC20":[554],"SwapManager":[1491]},"id":1492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":886,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":887,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1492,"sourceUnit":143,"src":"58:56:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":888,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1492,"sourceUnit":555,"src":"115:65:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":889,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1492,"sourceUnit":65,"src":"181:62:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISwapManager.sol","file":"./interfaces/ISwapManager.sol","id":890,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1492,"sourceUnit":1938,"src":"244:39:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IWorkerWallet.sol","file":"./interfaces/IWorkerWallet.sol","id":891,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1492,"sourceUnit":1991,"src":"284:40:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":892,"name":"ISwapManager","nameLocations":["350:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1937,"src":"350:12:5"},"id":893,"nodeType":"InheritanceSpecifier","src":"350:12:5"},{"baseName":{"id":894,"name":"ReentrancyGuard","nameLocations":["364:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":64,"src":"364:15:5"},"id":895,"nodeType":"InheritanceSpecifier","src":"364:15:5"}],"canonicalName":"SwapManager","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1491,"linearizedBaseContracts":[1491,64,1937],"name":"SwapManager","nameLocation":"335:11:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":899,"libraryName":{"id":896,"name":"SafeERC20","nameLocations":["392:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":554,"src":"392:9:5"},"nodeType":"UsingForDirective","src":"386:27:5","typeName":{"id":898,"nodeType":"UserDefinedTypeName","pathNode":{"id":897,"name":"IERC20","nameLocations":["406:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"406:6:5"},"referencedDeclaration":142,"src":"406:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"9c3f1e90","id":904,"mutability":"mutable","name":"orders","nameLocation":"456:6:5","nodeType":"VariableDeclaration","scope":1491,"src":"419:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$1847_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder)"},"typeName":{"id":903,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"427:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"419:29:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$1847_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":902,"nodeType":"UserDefinedTypeName","pathNode":{"id":901,"name":"SwapOrder","nameLocations":["438:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":1847,"src":"438:9:5"},"referencedDeclaration":1847,"src":"438:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder"}}},"visibility":"public"},{"constant":false,"functionSelector":"a4516c48","id":908,"mutability":"mutable","name":"usedSecrets","nameLocation":"500:11:5","nodeType":"VariableDeclaration","scope":1491,"src":"468:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":907,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"476:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"468:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":906,"name":"bool","nodeType":"ElementaryTypeName","src":"487:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"1f6d2eac","id":912,"mutability":"mutable","name":"isWorkerWallet","nameLocation":"549:14:5","nodeType":"VariableDeclaration","scope":1491,"src":"517:46:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":911,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"517:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":910,"name":"bool","nodeType":"ElementaryTypeName","src":"536:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"ad5c4648","id":914,"mutability":"immutable","name":"WETH","nameLocation":"599:4:5","nodeType":"VariableDeclaration","scope":1491,"src":"574:29:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"574:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":923,"nodeType":"Block","src":"640:28:5","statements":[{"expression":{"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":919,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"650:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":920,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"657:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"650:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":922,"nodeType":"ExpressionStatement","src":"650:11:5"}]},"id":924,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"weth","nameLocation":"634:4:5","nodeType":"VariableDeclaration","scope":924,"src":"626:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"626:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"625:14:5"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"640:0:5"},"scope":1491,"src":"614:54:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":927,"nodeType":"Block","src":"701:2:5","statements":[]},"id":928,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"681:2:5"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"701:0:5"},"scope":1491,"src":"674:29:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1892],"body":{"id":1065,"nodeType":"Block","src":"945:1340:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":948,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"963:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"974:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"963:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f20616d6f756e74","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"977:13:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4","typeString":"literal_string \"Zero amount\""},"value":"Zero amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4","typeString":"literal_string \"Zero amount\""}],"id":947,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"955:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":953,"nodeType":"ExpressionStatement","src":"955:36:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":955,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1009:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":956,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"1020:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1009:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420646561646c696e65","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1037:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77","typeString":"literal_string \"Invalid deadline\""},"value":"Invalid deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77","typeString":"literal_string \"Invalid deadline\""}],"id":954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1001:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1001:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"ExpressionStatement","src":"1001:55:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":963,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1074:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1096:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1088:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1088:7:5","typeDescriptions":{}}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1088:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1074:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207365637265742068617368","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1100:21:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_29a9499b24c7c1c30de658e39e1b3b85bfcb2ce57b413521c2a3cb2388c5d10e","typeString":"literal_string \"Invalid secret hash\""},"value":"Invalid secret hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_29a9499b24c7c1c30de658e39e1b3b85bfcb2ce57b413521c2a3cb2388c5d10e","typeString":"literal_string \"Invalid secret hash\""}],"id":962,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1066:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1066:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"ExpressionStatement","src":"1066:56:5"},{"assignments":[973],"declarations":[{"constant":false,"id":973,"mutability":"mutable","name":"orderId","nameLocation":"1141:7:5","nodeType":"VariableDeclaration","scope":1065,"src":"1133:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1133:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":987,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1208:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1212:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1208:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":979,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1236:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1242:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"1236:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":981,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1269:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":982,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"1295:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":983,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"1320:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":984,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1346:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":975,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1174:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1178:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"1174:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1174:196:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":974,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1151:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:229:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1133:247:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":989,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"1399:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$1847_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder storage ref)"}},"id":991,"indexExpression":{"id":990,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"1406:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1399:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"id":992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1415:9:5","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1828,"src":"1399:25:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1436:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1428:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"1428:7:5","typeDescriptions":{}}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1399:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657220657869737473","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1440:14:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1d924f126c3222497ebba66a9b4321d9b6a8b8b39b3938bb6a4a6dbe0bdc4e0","typeString":"literal_string \"Order exists\""},"value":"Order exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c1d924f126c3222497ebba66a9b4321d9b6a8b8b39b3938bb6a4a6dbe0bdc4e0","typeString":"literal_string \"Order exists\""}],"id":988,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1391:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1391:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1000,"nodeType":"ExpressionStatement","src":"1391:64:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"1470:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1489:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1481:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"1481:7:5","typeDescriptions":{}}},"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1481:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1470:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1029,"nodeType":"Block","src":"1578:94:5","statements":[{"expression":{"arguments":[{"expression":{"id":1020,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1625:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1629:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1625:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1024,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1645:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SwapManager_$1491","typeString":"contract SwapManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SwapManager_$1491","typeString":"contract SwapManager"}],"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1637:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"1637:7:5","typeDescriptions":{}}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1637:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1026,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1652:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1017,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"1599:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1016,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"1592:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$142_$","typeString":"type(contract IERC20)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1592:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1608:16:5","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":238,"src":"1592:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1592:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"1592:69:5"}]},"id":1030,"nodeType":"IfStatement","src":"1466:206:5","trueBody":{"id":1015,"nodeType":"Block","src":"1493:79:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1008,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1515:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1519:5:5","memberName":"value","nodeType":"MemberAccess","src":"1515:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1010,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1528:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1515:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f72726563742045544820616d6f756e74","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1538:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""},"value":"Incorrect ETH amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""}],"id":1007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1507:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"ExpressionStatement","src":"1507:54:5"}]}},{"expression":{"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1031,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"1682:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$1847_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder storage ref)"}},"id":1033,"indexExpression":{"id":1032,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"1689:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1682:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1035,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1769:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:5","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1803:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1042,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"1839:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1043,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"1874:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"1905:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1045,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1937:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1046,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1971:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2008:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2039:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1034,"name":"SwapOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"1700:9:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SwapOrder_$1847_storage_ptr_$","typeString":"type(struct ISwapManager.SwapOrder storage pointer)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1724:9:5","1759:8:5","1793:8:5","1825:12:5","1865:7:5","1895:8:5","1927:8:5","1959:10:5","1995:11:5","2027:10:5"],"names":["initiator","resolver","amountIn","amountOutMin","tokenIn","tokenOut","deadline","secretHash","isFulfilled","isRefunded"],"nodeType":"FunctionCall","src":"1700:355:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_memory_ptr","typeString":"struct ISwapManager.SwapOrder memory"}},"src":"1682:373:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"id":1051,"nodeType":"ExpressionStatement","src":"1682:373:5"},{"eventCall":{"arguments":[{"id":1053,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"2097:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1054,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2118:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2122:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2118:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1056,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"2142:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1057,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"2163:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1058,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"2185:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1059,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"2207:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1060,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2233:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1052,"name":"OrderCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"2071:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,address,address,uint256,uint256,bytes32)"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:182:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1062,"nodeType":"EmitStatement","src":"2066:187:5"},{"expression":{"id":1063,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"2271:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":946,"id":1064,"nodeType":"Return","src":"2264:14:5"}]},"functionSelector":"7535f2df","id":1066,"implemented":true,"kind":"function","modifiers":[{"id":943,"kind":"modifierInvocation","modifierName":{"id":942,"name":"nonReentrant","nameLocations":["914:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"914:12:5"},"nodeType":"ModifierInvocation","src":"914:12:5"}],"name":"createOrder","nameLocation":"718:11:5","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"tokenIn","nameLocation":"747:7:5","nodeType":"VariableDeclaration","scope":1066,"src":"739:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"739:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"tokenOut","nameLocation":"772:8:5","nodeType":"VariableDeclaration","scope":1066,"src":"764:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"764:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"amountIn","nameLocation":"798:8:5","nodeType":"VariableDeclaration","scope":1066,"src":"790:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"amountOutMin","nameLocation":"824:12:5","nodeType":"VariableDeclaration","scope":1066,"src":"816:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"816:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"deadline","nameLocation":"854:8:5","nodeType":"VariableDeclaration","scope":1066,"src":"846:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"846:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"secretHash","nameLocation":"880:10:5","nodeType":"VariableDeclaration","scope":1066,"src":"872:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"872:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"729:167:5"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1066,"src":"936:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"936:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"935:9:5"},"scope":1491,"src":"709:1576:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1911],"body":{"id":1097,"nodeType":"Block","src":"2352:203:5","statements":[{"expression":{"arguments":[{"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2370:29:5","subExpression":{"baseExpression":{"id":1072,"name":"isWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"2371:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1074,"indexExpression":{"id":1073,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2386:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2371:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792072656769737465726564","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2401:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""},"value":"Already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""}],"id":1071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2362:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"2362:60:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1081,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2454:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1080,"name":"IWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2440:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWorkerWallet_$1990_$","typeString":"type(contract IWorkerWallet)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2440:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWorkerWallet_$1990","typeString":"contract IWorkerWallet"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2468:5:5","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"2440:33:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2440:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2479:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2483:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2479:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2440:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f776e6572","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2491:11:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682","typeString":"literal_string \"Not owner\""},"value":"Not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682","typeString":"literal_string \"Not owner\""}],"id":1079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2432:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2432:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1090,"nodeType":"ExpressionStatement","src":"2432:71:5"},{"expression":{"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1091,"name":"isWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"2513:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1093,"indexExpression":{"id":1092,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2528:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2513:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2544:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2513:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1096,"nodeType":"ExpressionStatement","src":"2513:35:5"}]},"functionSelector":"6808d587","id":1098,"implemented":true,"kind":"function","modifiers":[],"name":"registerWorkerWallet","nameLocation":"2300:20:5","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"workerWallet","nameLocation":"2329:12:5","nodeType":"VariableDeclaration","scope":1098,"src":"2321:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"2321:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2320:22:5"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[],"src":"2352:0:5"},"scope":1491,"src":"2291:264:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1936],"body":{"id":1152,"nodeType":"Block","src":"2894:376:5","statements":[{"assignments":[1125],"declarations":[{"constant":false,"id":1125,"mutability":"mutable","name":"order","nameLocation":"2922:5:5","nodeType":"VariableDeclaration","scope":1152,"src":"2904:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder"},"typeName":{"id":1124,"nodeType":"UserDefinedTypeName","pathNode":{"id":1123,"name":"SwapOrder","nameLocations":["2904:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":1847,"src":"2904:9:5"},"referencedDeclaration":1847,"src":"2904:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder"}},"visibility":"internal"}],"id":1129,"initialValue":{"baseExpression":{"id":1126,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2930:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$1847_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder storage ref)"}},"id":1128,"indexExpression":{"id":1127,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"2937:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2904:41:5"},{"expression":{"components":[{"expression":{"id":1130,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"2976:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2982:9:5","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1828,"src":"2976:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1132,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3005:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3011:8:5","memberName":"resolver","nodeType":"MemberAccess","referencedDeclaration":1830,"src":"3005:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1134,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3033:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3039:8:5","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"3033:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1136,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3061:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3067:12:5","memberName":"amountOutMin","nodeType":"MemberAccess","referencedDeclaration":1834,"src":"3061:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1138,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3093:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3099:7:5","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":1836,"src":"3093:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1140,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3120:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3126:8:5","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":1838,"src":"3120:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1142,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3148:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3154:8:5","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1840,"src":"3148:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1144,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3176:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3182:10:5","memberName":"secretHash","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"3176:16:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1146,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3206:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3212:11:5","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":1844,"src":"3206:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1148,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3237:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3243:10:5","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":1846,"src":"3237:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2962:301:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$_t_bool_$_t_bool_$","typeString":"tuple(address,address,uint256,uint256,address,address,uint256,bytes32,bool,bool)"}},"functionReturnParameters":1122,"id":1151,"nodeType":"Return","src":"2955:308:5"}]},"functionSelector":"5778472a","id":1153,"implemented":true,"kind":"function","modifiers":[],"name":"getOrder","nameLocation":"2574:8:5","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"orderId","nameLocation":"2591:7:5","nodeType":"VariableDeclaration","scope":1153,"src":"2583:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2583:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2582:17:5"},"returnParameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"initiator","nameLocation":"2640:9:5","nodeType":"VariableDeclaration","scope":1153,"src":"2632:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"resolver","nameLocation":"2667:8:5","nodeType":"VariableDeclaration","scope":1153,"src":"2659:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"2659:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"amountIn","nameLocation":"2693:8:5","nodeType":"VariableDeclaration","scope":1153,"src":"2685:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"amountOutMin","nameLocation":"2719:12:5","nodeType":"VariableDeclaration","scope":1153,"src":"2711:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2711:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"tokenIn","nameLocation":"2749:7:5","nodeType":"VariableDeclaration","scope":1153,"src":"2741:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"2741:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"tokenOut","nameLocation":"2774:8:5","nodeType":"VariableDeclaration","scope":1153,"src":"2766:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"2766:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"deadline","nameLocation":"2800:8:5","nodeType":"VariableDeclaration","scope":1153,"src":"2792:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"2792:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"secretHash","nameLocation":"2826:10:5","nodeType":"VariableDeclaration","scope":1153,"src":"2818:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2818:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"isFulfilled","nameLocation":"2851:11:5","nodeType":"VariableDeclaration","scope":1153,"src":"2846:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1118,"name":"bool","nodeType":"ElementaryTypeName","src":"2846:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"isRefunded","nameLocation":"2877:10:5","nodeType":"VariableDeclaration","scope":1153,"src":"2872:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1120,"name":"bool","nodeType":"ElementaryTypeName","src":"2872:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2622:271:5"},"scope":1491,"src":"2565:705:5","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1901],"body":{"id":1390,"nodeType":"Block","src":"3410:2018:5","statements":[{"assignments":[1166],"declarations":[{"constant":false,"id":1166,"mutability":"mutable","name":"order","nameLocation":"3438:5:5","nodeType":"VariableDeclaration","scope":1390,"src":"3420:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder"},"typeName":{"id":1165,"nodeType":"UserDefinedTypeName","pathNode":{"id":1164,"name":"SwapOrder","nameLocations":["3420:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":1847,"src":"3420:9:5"},"referencedDeclaration":1847,"src":"3420:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder"}},"visibility":"internal"}],"id":1170,"initialValue":{"baseExpression":{"id":1167,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"3446:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$1847_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder storage ref)"}},"id":1169,"indexExpression":{"id":1168,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3453:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3446:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3420:41:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1172,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3479:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3485:9:5","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1828,"src":"3479:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3506:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3498:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"3498:7:5","typeDescriptions":{}}},"id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3498:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3479:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f72646572206e6f7420666f756e64","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3510:17:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc","typeString":"literal_string \"Order not found\""},"value":"Order not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc","typeString":"literal_string \"Order not found\""}],"id":1171,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3471:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"ExpressionStatement","src":"3471:57:5"},{"expression":{"arguments":[{"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3546:18:5","subExpression":{"expression":{"id":1183,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3547:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3553:11:5","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":1844,"src":"3547:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657220616c72656164792066756c66696c6c6564","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3566:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970","typeString":"literal_string \"Order already fulfilled\""},"value":"Order already fulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970","typeString":"literal_string \"Order already fulfilled\""}],"id":1182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3538:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"ExpressionStatement","src":"3538:54:5"},{"expression":{"arguments":[{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3610:17:5","subExpression":{"expression":{"id":1190,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3611:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3617:10:5","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":1846,"src":"3611:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465722077617320726566756e646564","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3629:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_890a6771b112b68c8156f7e98f853dfb4045cf1cc9f5289e3c6a09bc0e92fbd6","typeString":"literal_string \"Order was refunded\""},"value":"Order was refunded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_890a6771b112b68c8156f7e98f853dfb4045cf1cc9f5289e3c6a09bc0e92fbd6","typeString":"literal_string \"Order was refunded\""}],"id":1189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3602:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1195,"nodeType":"ExpressionStatement","src":"3602:48:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1197,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3668:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3674:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"3668:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1199,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3687:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3693:8:5","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1840,"src":"3687:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3668:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465722065787069726564","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3703:15:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2f4bfb2dcf7e06902cf8f2c0c97f84cc4c3e789bd0a5ba2698f8afbe21430ae","typeString":"literal_string \"Order expired\""},"value":"Order expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2f4bfb2dcf7e06902cf8f2c0c97f84cc4c3e789bd0a5ba2698f8afbe21430ae","typeString":"literal_string \"Order expired\""}],"id":1196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3660:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3660:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"ExpressionStatement","src":"3660:59:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1209,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3764:6:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3747:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3751:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"3747:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3747:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1206,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3737:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1212,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3776:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3782:10:5","memberName":"secretHash","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"3776:16:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3737:55:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736563726574","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3794:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_22a9a99eda58e74c6eba1e99e395e307fd14f51f225afd0fed99c1a0493e28e5","typeString":"literal_string \"Invalid secret\""},"value":"Invalid secret"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22a9a99eda58e74c6eba1e99e395e307fd14f51f225afd0fed99c1a0493e28e5","typeString":"literal_string \"Invalid secret\""}],"id":1205,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3729:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:82:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"ExpressionStatement","src":"3729:82:5"},{"expression":{"arguments":[{"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3829:20:5","subExpression":{"baseExpression":{"id":1219,"name":"usedSecrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"3830:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1221,"indexExpression":{"id":1220,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3842:6:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3830:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656372657420616c72656164792075736564","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3851:21:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaa3ec15dceb626e10a70b0d9e8ba2711073f6106230fded9f2d7cf060f5b71d","typeString":"literal_string \"Secret already used\""},"value":"Secret already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eaa3ec15dceb626e10a70b0d9e8ba2711073f6106230fded9f2d7cf060f5b71d","typeString":"literal_string \"Secret already used\""}],"id":1218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3821:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1225,"nodeType":"ExpressionStatement","src":"3821:52:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1227,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3891:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1228,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"3904:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3910:12:5","memberName":"amountOutMin","nodeType":"MemberAccess","referencedDeclaration":1834,"src":"3904:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3891:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206f757470757420616d6f756e74","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3924:28:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90","typeString":"literal_string \"Insufficient output amount\""},"value":"Insufficient output amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90","typeString":"literal_string \"Insufficient output amount\""}],"id":1226,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3883:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3883:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1233,"nodeType":"ExpressionStatement","src":"3883:70:5"},{"condition":{"baseExpression":{"id":1234,"name":"isWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"4053:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1237,"indexExpression":{"expression":{"id":1235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4068:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4068:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4053:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1257,"nodeType":"IfStatement","src":"4049:194:5","trueBody":{"id":1256,"nodeType":"Block","src":"4081:162:5","statements":[{"assignments":[1240],"declarations":[{"constant":false,"id":1240,"mutability":"mutable","name":"workerWallet","nameLocation":"4109:12:5","nodeType":"VariableDeclaration","scope":1256,"src":"4095:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWorkerWallet_$1990","typeString":"contract IWorkerWallet"},"typeName":{"id":1239,"nodeType":"UserDefinedTypeName","pathNode":{"id":1238,"name":"IWorkerWallet","nameLocations":["4095:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1990,"src":"4095:13:5"},"referencedDeclaration":1990,"src":"4095:13:5","typeDescriptions":{"typeIdentifier":"t_contract$_IWorkerWallet_$1990","typeString":"contract IWorkerWallet"}},"visibility":"internal"}],"id":1245,"initialValue":{"arguments":[{"expression":{"id":1242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4138:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4142:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4138:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1241,"name":"IWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"4124:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWorkerWallet_$1990_$","typeString":"type(contract IWorkerWallet)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4124:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWorkerWallet_$1990","typeString":"contract IWorkerWallet"}},"nodeType":"VariableDeclarationStatement","src":"4095:54:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1247,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"4171:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IWorkerWallet_$1990","typeString":"contract IWorkerWallet"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4184:5:5","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"4171:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4171:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1250,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"4195:2:5","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4198:6:5","memberName":"origin","nodeType":"MemberAccess","src":"4195:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4171:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420776f726b65722077616c6c6574206f776e6572","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4206:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9235c93776d67cf588408e5134192cf89ff8ca3094db508a3dc1361854cb73d4","typeString":"literal_string \"Not worker wallet owner\""},"value":"Not worker wallet owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9235c93776d67cf588408e5134192cf89ff8ca3094db508a3dc1361854cb73d4","typeString":"literal_string \"Not worker wallet owner\""}],"id":1246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4163:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4163:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1255,"nodeType":"ExpressionStatement","src":"4163:69:5"}]}},{"expression":{"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1258,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"4253:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4259:11:5","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":1844,"src":"4253:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4273:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4253:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1263,"nodeType":"ExpressionStatement","src":"4253:24:5"},{"expression":{"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1264,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"4287:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4293:8:5","memberName":"resolver","nodeType":"MemberAccess","referencedDeclaration":1830,"src":"4287:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1267,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4304:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4308:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4304:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4287:27:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1270,"nodeType":"ExpressionStatement","src":"4287:27:5"},{"expression":{"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1271,"name":"usedSecrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"4324:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1273,"indexExpression":{"id":1272,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4336:6:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4324:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4346:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4324:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1276,"nodeType":"ExpressionStatement","src":"4324:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1277,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"4404:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4410:7:5","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":1836,"src":"4404:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4429:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4421:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:5","typeDescriptions":{}}},"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4421:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4404:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1324,"nodeType":"Block","src":"4736:87:5","statements":[{"expression":{"arguments":[{"expression":{"id":1318,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4785:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4789:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4785:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1320,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"4797:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4803:8:5","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"4797:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1314,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"4757:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4763:7:5","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":1836,"src":"4757:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1313,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"4750:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$142_$","typeString":"type(contract IERC20)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4750:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4772:12:5","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":211,"src":"4750:34:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4750:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1323,"nodeType":"ExpressionStatement","src":"4750:62:5"}]},"id":1325,"nodeType":"IfStatement","src":"4400:423:5","trueBody":{"id":1312,"nodeType":"Block","src":"4433:297:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1287,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4531:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SwapManager_$1491","typeString":"contract SwapManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SwapManager_$1491","typeString":"contract SwapManager"}],"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4523:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"4523:7:5","typeDescriptions":{}}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4523:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4537:7:5","memberName":"balance","nodeType":"MemberAccess","src":"4523:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1290,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"4548:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4554:8:5","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"4548:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4523:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204554482062616c616e6365","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4564:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e","typeString":"literal_string \"Insufficient ETH balance\""},"value":"Insufficient ETH balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e","typeString":"literal_string \"Insufficient ETH balance\""}],"id":1284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4515:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:76:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"ExpressionStatement","src":"4515:76:5"},{"assignments":[1297,null],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"success","nameLocation":"4611:7:5","nodeType":"VariableDeclaration","scope":1312,"src":"4606:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1296,"name":"bool","nodeType":"ElementaryTypeName","src":"4606:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1306,"initialValue":{"arguments":[{"hexValue":"","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4663:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4624:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4628:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4624:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4635:4:5","memberName":"call","nodeType":"MemberAccess","src":"4624:15:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1301,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"4647:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4653:8:5","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"4647:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4624:38:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4624:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4605:61:5"},{"expression":{"arguments":[{"id":1308,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"4688:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4697:21:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":1307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4680:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"ExpressionStatement","src":"4680:39:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1326,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"4898:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4904:8:5","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":1838,"src":"4898:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4916:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"4916:7:5","typeDescriptions":{}}},"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4898:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1381,"nodeType":"Block","src":"5197:166:5","statements":[{"expression":{"arguments":[{"expression":{"id":1374,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5268:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5272:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5268:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1376,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5296:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5302:9:5","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1828,"src":"5296:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1378,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"5329:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1370,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5218:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5224:8:5","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":1838,"src":"5218:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1369,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"5211:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$142_$","typeString":"type(contract IERC20)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5211:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5234:16:5","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":238,"src":"5211:39:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5211:141:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"ExpressionStatement","src":"5211:141:5"}]},"id":1382,"nodeType":"IfStatement","src":"4894:469:5","trueBody":{"id":1368,"nodeType":"Block","src":"4928:263:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4950:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4954:5:5","memberName":"value","nodeType":"MemberAccess","src":"4950:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1336,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4963:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4950:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204554482073656e74","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4974:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","typeString":"literal_string \"Insufficient ETH sent\""},"value":"Insufficient ETH sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","typeString":"literal_string \"Insufficient ETH sent\""}],"id":1333,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4942:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4942:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1340,"nodeType":"ExpressionStatement","src":"4942:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1341,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5016:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:5","memberName":"value","nodeType":"MemberAccess","src":"5016:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1343,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"5028:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5016:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"5012:111:5","trueBody":{"id":1357,"nodeType":"Block","src":"5039:84:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5086:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5090:5:5","memberName":"value","nodeType":"MemberAccess","src":"5086:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1353,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"5098:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5086:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1347,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5065:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5069:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5065:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5057:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"5057:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5057:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5077:8:5","memberName":"transfer","nodeType":"MemberAccess","src":"5057:28:5","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5057:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"ExpressionStatement","src":"5057:51:5"}]}},{"expression":{"arguments":[{"id":1365,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"5170:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1361,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5144:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5150:9:5","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1828,"src":"5144:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5136:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"5136:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5136:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5161:8:5","memberName":"transfer","nodeType":"MemberAccess","src":"5136:33:5","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5136:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1367,"nodeType":"ExpressionStatement","src":"5136:44:5"}]}},{"eventCall":{"arguments":[{"id":1384,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"5393:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1385,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5402:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5406:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5402:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"5414:6:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1383,"name":"OrderFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"5378:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,bytes32)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5378:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1389,"nodeType":"EmitStatement","src":"5373:48:5"}]},"functionSelector":"f6dccf2e","id":1391,"implemented":true,"kind":"function","modifiers":[{"id":1162,"kind":"modifierInvocation","modifierName":{"id":1161,"name":"nonReentrant","nameLocations":["3397:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"3397:12:5"},"nodeType":"ModifierInvocation","src":"3397:12:5"}],"name":"fulfillOrder","nameLocation":"3285:12:5","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"orderId","nameLocation":"3315:7:5","nodeType":"VariableDeclaration","scope":1391,"src":"3307:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3307:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"amountOut","nameLocation":"3340:9:5","nodeType":"VariableDeclaration","scope":1391,"src":"3332:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3332:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"secret","nameLocation":"3367:6:5","nodeType":"VariableDeclaration","scope":1391,"src":"3359:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3359:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3297:82:5"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[],"src":"3410:0:5"},"scope":1491,"src":"3276:2152:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1906],"body":{"id":1489,"nodeType":"Block","src":"5494:678:5","statements":[{"assignments":[1400],"declarations":[{"constant":false,"id":1400,"mutability":"mutable","name":"order","nameLocation":"5522:5:5","nodeType":"VariableDeclaration","scope":1489,"src":"5504:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder"},"typeName":{"id":1399,"nodeType":"UserDefinedTypeName","pathNode":{"id":1398,"name":"SwapOrder","nameLocations":["5504:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":1847,"src":"5504:9:5"},"referencedDeclaration":1847,"src":"5504:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder"}},"visibility":"internal"}],"id":1404,"initialValue":{"baseExpression":{"id":1401,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"5530:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$1847_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder storage ref)"}},"id":1403,"indexExpression":{"id":1402,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"5537:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5530:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5504:41:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1406,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"5563:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5569:9:5","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1828,"src":"5563:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5590:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5582:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"5582:7:5","typeDescriptions":{}}},"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5582:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5563:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f72646572206e6f7420666f756e64","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5594:17:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc","typeString":"literal_string \"Order not found\""},"value":"Order not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc","typeString":"literal_string \"Order not found\""}],"id":1405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5555:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5555:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1415,"nodeType":"ExpressionStatement","src":"5555:57:5"},{"expression":{"arguments":[{"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5630:18:5","subExpression":{"expression":{"id":1417,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"5631:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5637:11:5","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":1844,"src":"5631:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657220616c72656164792066756c66696c6c6564","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5650:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970","typeString":"literal_string \"Order already fulfilled\""},"value":"Order already fulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970","typeString":"literal_string \"Order already fulfilled\""}],"id":1416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5622:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5622:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"ExpressionStatement","src":"5622:54:5"},{"expression":{"arguments":[{"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5694:17:5","subExpression":{"expression":{"id":1424,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"5695:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5701:10:5","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":1846,"src":"5695:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920726566756e646564","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5713:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f","typeString":"literal_string \"Already refunded\""},"value":"Already refunded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f","typeString":"literal_string \"Already refunded\""}],"id":1423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5686:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5686:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1429,"nodeType":"ExpressionStatement","src":"5686:46:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1431,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5750:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5756:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"5750:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1433,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"5768:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5774:8:5","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1840,"src":"5768:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5750:32:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e65206e6f742072656163686564","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5784:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""},"value":"Deadline not reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""}],"id":1430,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5742:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5742:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1438,"nodeType":"ExpressionStatement","src":"5742:65:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1440,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5825:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5829:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5825:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1442,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"5839:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5845:9:5","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1828,"src":"5839:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5825:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f7264657220696e69746961746f72","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5856:21:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_101deeb84a7b30c3ba1b40b0f7f4c505ac09a1a50e6d9ef928905ad230187381","typeString":"literal_string \"Not order initiator\""},"value":"Not order initiator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_101deeb84a7b30c3ba1b40b0f7f4c505ac09a1a50e6d9ef928905ad230187381","typeString":"literal_string \"Not order initiator\""}],"id":1439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5817:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1447,"nodeType":"ExpressionStatement","src":"5817:61:5"},{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1448,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"5889:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5895:10:5","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":1846,"src":"5889:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5908:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5889:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1453,"nodeType":"ExpressionStatement","src":"5889:23:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1454,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"5927:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5933:7:5","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":1836,"src":"5927:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5944:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"5944:7:5","typeDescriptions":{}}},"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5944:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5927:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1483,"nodeType":"Block","src":"6036:92:5","statements":[{"expression":{"arguments":[{"expression":{"id":1477,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"6085:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6091:9:5","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1828,"src":"6085:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1479,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"6102:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6108:8:5","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"6102:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1473,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"6057:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6063:7:5","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":1836,"src":"6057:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"6050:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$142_$","typeString":"type(contract IERC20)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6050:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6072:12:5","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":211,"src":"6050:34:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6050:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1482,"nodeType":"ExpressionStatement","src":"6050:67:5"}]},"id":1484,"nodeType":"IfStatement","src":"5923:205:5","trueBody":{"id":1471,"nodeType":"Block","src":"5956:74:5","statements":[{"expression":{"arguments":[{"expression":{"id":1467,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"6004:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6010:8:5","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"6004:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1463,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"5978:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$1847_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5984:9:5","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":1828,"src":"5978:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5970:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"5970:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5970:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5995:8:5","memberName":"transfer","nodeType":"MemberAccess","src":"5970:33:5","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5970:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"5970:49:5"}]}},{"eventCall":{"arguments":[{"id":1486,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"6157:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1485,"name":"OrderRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"6143:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6143:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"EmitStatement","src":"6138:27:5"}]},"functionSelector":"116a1d9a","id":1490,"implemented":true,"kind":"function","modifiers":[{"id":1396,"kind":"modifierInvocation","modifierName":{"id":1395,"name":"nonReentrant","nameLocations":["5481:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"5481:12:5"},"nodeType":"ModifierInvocation","src":"5481:12:5"}],"name":"refundOrder","nameLocation":"5443:11:5","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"orderId","nameLocation":"5463:7:5","nodeType":"VariableDeclaration","scope":1490,"src":"5455:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5455:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5454:17:5"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[],"src":"5494:0:5"},"scope":1491,"src":"5434:738:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1492,"src":"326:5854:5","usedErrors":[],"usedEvents":[1863,1871,1875]}],"src":"32:6149:5"},"id":5},"contracts/WorkerWallet.sol":{"ast":{"absolutePath":"contracts/WorkerWallet.sol","exportedSymbols":{"Address":[884],"IERC20":[142],"IERC20Permit":[178],"ISwapManager":[1937],"IWorkerWallet":[1990],"SafeERC20":[554],"WorkerWallet":[1671]},"id":1672,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1493,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1672,"sourceUnit":143,"src":"58:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1672,"sourceUnit":555,"src":"115:65:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IWorkerWallet.sol","file":"./interfaces/IWorkerWallet.sol","id":1496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1672,"sourceUnit":1991,"src":"181:40:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISwapManager.sol","file":"./interfaces/ISwapManager.sol","id":1497,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1672,"sourceUnit":1938,"src":"222:39:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1498,"name":"IWorkerWallet","nameLocations":["288:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1990,"src":"288:13:6"},"id":1499,"nodeType":"InheritanceSpecifier","src":"288:13:6"}],"canonicalName":"WorkerWallet","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1671,"linearizedBaseContracts":[1671,1990],"name":"WorkerWallet","nameLocation":"272:12:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1503,"libraryName":{"id":1500,"name":"SafeERC20","nameLocations":["314:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":554,"src":"314:9:6"},"nodeType":"UsingForDirective","src":"308:27:6","typeName":{"id":1502,"nodeType":"UserDefinedTypeName","pathNode":{"id":1501,"name":"IERC20","nameLocations":["328:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"328:6:6"},"referencedDeclaration":142,"src":"328:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}}},{"baseFunctions":[1984],"constant":false,"functionSelector":"8da5cb5b","id":1506,"mutability":"mutable","name":"owner","nameLocation":"365:5:6","nodeType":"VariableDeclaration","overrides":{"id":1505,"nodeType":"OverrideSpecifier","overrides":[],"src":"356:8:6"},"scope":1671,"src":"341:29:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"341:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[1989],"constant":false,"functionSelector":"709d039d","id":1509,"mutability":"mutable","name":"swapManager","nameLocation":"400:11:6","nodeType":"VariableDeclaration","overrides":{"id":1508,"nodeType":"OverrideSpecifier","overrides":[],"src":"391:8:6"},"scope":1671,"src":"376:35:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1507,"name":"address","nodeType":"ElementaryTypeName","src":"376:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":1511,"mutability":"mutable","name":"initialized","nameLocation":"430:11:6","nodeType":"VariableDeclaration","scope":1671,"src":"417:24:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1510,"name":"bool","nodeType":"ElementaryTypeName","src":"417:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":1522,"nodeType":"Block","src":"469:97:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"487:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"491:6:6","memberName":"sender","nodeType":"MemberAccess","src":"487:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1516,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"501:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"487:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a2063616c6c6572206973206e6f7420746865206f776e6572","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"508:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_506443333bcaabf6bbdd18bc57ac25e5a604386cc920f2333665e0320024f142","typeString":"literal_string \"WorkerWallet: caller is not the owner\""},"value":"WorkerWallet: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_506443333bcaabf6bbdd18bc57ac25e5a604386cc920f2333665e0320024f142","typeString":"literal_string \"WorkerWallet: caller is not the owner\""}],"id":1513,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"479:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"479:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1520,"nodeType":"ExpressionStatement","src":"479:69:6"},{"id":1521,"nodeType":"PlaceholderStatement","src":"558:1:6"}]},"id":1523,"name":"onlyOwner","nameLocation":"457:9:6","nodeType":"ModifierDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[],"src":"466:2:6"},"src":"448:118:6","virtual":false,"visibility":"internal"},{"body":{"id":1534,"nodeType":"Block","src":"599:110:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1526,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"617:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"621:6:6","memberName":"sender","nodeType":"MemberAccess","src":"617:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1528,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"631:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"617:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a2063616c6c6572206973206e6f74207468652073776170206d616e61676572","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"644:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_567c7e766e1bebc5df072187512e864a0ecb532ec137042df7eb54afc40a7e6d","typeString":"literal_string \"WorkerWallet: caller is not the swap manager\""},"value":"WorkerWallet: caller is not the swap manager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_567c7e766e1bebc5df072187512e864a0ecb532ec137042df7eb54afc40a7e6d","typeString":"literal_string \"WorkerWallet: caller is not the swap manager\""}],"id":1525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"609:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"609:82:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1532,"nodeType":"ExpressionStatement","src":"609:82:6"},{"id":1533,"nodeType":"PlaceholderStatement","src":"701:1:6"}]},"id":1535,"name":"onlySwapManager","nameLocation":"581:15:6","nodeType":"ModifierDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[],"src":"596:2:6"},"src":"572:137:6","virtual":false,"visibility":"internal"},{"body":{"id":1570,"nodeType":"Block","src":"765:245:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1543,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"783:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"801:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"793:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:6","typeDescriptions":{}}},"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"793:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"783:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a206f776e6572206973207a65726f2061646472657373","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"805:37:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_388b26b8752cb9bc2935bdbdaaff189c636297a6151c254979ebb6679c000647","typeString":"literal_string \"WorkerWallet: owner is zero address\""},"value":"WorkerWallet: owner is zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_388b26b8752cb9bc2935bdbdaaff189c636297a6151c254979ebb6679c000647","typeString":"literal_string \"WorkerWallet: owner is zero address\""}],"id":1542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"775:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"775:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1551,"nodeType":"ExpressionStatement","src":"775:68:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"861:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"885:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"877:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:6","typeDescriptions":{}}},"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"861:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a2073776170206d616e61676572206973207a65726f2061646472657373","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"889:44:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ccdfc9ccc81f068aea89db7f9732f839acfc5c72bb0c0b89415226633ad9254","typeString":"literal_string \"WorkerWallet: swap manager is zero address\""},"value":"WorkerWallet: swap manager is zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ccdfc9ccc81f068aea89db7f9732f839acfc5c72bb0c0b89415226633ad9254","typeString":"literal_string \"WorkerWallet: swap manager is zero address\""}],"id":1552,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"853:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"853:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1561,"nodeType":"ExpressionStatement","src":"853:81:6"},{"expression":{"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1562,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"953:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1563,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"961:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"953:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1565,"nodeType":"ExpressionStatement","src":"953:14:6"},{"expression":{"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1566,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"977:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1567,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"991:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"977:26:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1569,"nodeType":"ExpressionStatement","src":"977:26:6"}]},"id":1571,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"_owner","nameLocation":"735:6:6","nodeType":"VariableDeclaration","scope":1571,"src":"727:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1536,"name":"address","nodeType":"ElementaryTypeName","src":"727:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1539,"mutability":"mutable","name":"_swapManager","nameLocation":"751:12:6","nodeType":"VariableDeclaration","scope":1571,"src":"743:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"726:38:6"},"returnParameters":{"id":1541,"nodeType":"ParameterList","parameters":[],"src":"765:0:6"},"scope":1671,"src":"715:295:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1574,"nodeType":"Block","src":"1043:2:6","statements":[]},"id":1575,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[],"src":"1023:2:6"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[],"src":"1043:0:6"},"scope":1671,"src":"1016:29:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1970],"body":{"id":1609,"nodeType":"Block","src":"1222:121:6","statements":[{"expression":{"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1591,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1233:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"1242:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1593,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1232:17:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1598,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"1278:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1594,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"1252:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1259:4:6","memberName":"call","nodeType":"MemberAccess","src":"1252:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"1271:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1252:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1252:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"1232:51:6","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1601,"nodeType":"ExpressionStatement","src":"1232:51:6"},{"eventCall":{"arguments":[{"id":1603,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"1307:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"1315:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1605,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"1322:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1606,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1328:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1602,"name":"Executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"1298:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,uint256,bytes memory,bool)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1298:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1608,"nodeType":"EmitStatement","src":"1293:43:6"}]},"functionSelector":"b61d27f6","id":1610,"implemented":true,"kind":"function","modifiers":[{"id":1585,"kind":"modifierInvocation","modifierName":{"id":1584,"name":"onlyOwner","nameLocations":["1168:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1523,"src":"1168:9:6"},"nodeType":"ModifierInvocation","src":"1168:9:6"}],"name":"execute","nameLocation":"1060:7:6","nodeType":"FunctionDefinition","overrides":{"id":1583,"nodeType":"OverrideSpecifier","overrides":[],"src":"1159:8:6"},"parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"target","nameLocation":"1085:6:6","nodeType":"VariableDeclaration","scope":1610,"src":"1077:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"value","nameLocation":"1109:5:6","nodeType":"VariableDeclaration","scope":1610,"src":"1101:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1581,"mutability":"mutable","name":"data","nameLocation":"1139:4:6","nodeType":"VariableDeclaration","scope":1610,"src":"1124:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1580,"name":"bytes","nodeType":"ElementaryTypeName","src":"1124:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1067:82:6"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"success","nameLocation":"1192:7:6","nodeType":"VariableDeclaration","scope":1610,"src":"1187:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1586,"name":"bool","nodeType":"ElementaryTypeName","src":"1187:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"result","nameLocation":"1214:6:6","nodeType":"VariableDeclaration","scope":1610,"src":"1201:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1588,"name":"bytes","nodeType":"ElementaryTypeName","src":"1201:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1186:35:6"},"scope":1671,"src":"1051:292:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1979],"body":{"id":1669,"nodeType":"Block","src":"1438:392:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1623,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1456:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1470:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:6","typeDescriptions":{}}},"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1456:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f207a65726f2061646472657373","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1474:47:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_32dd410984bef2bdfdef125880368ec1269daa3858f98485cbe6ef6fe38878fb","typeString":"literal_string \"WorkerWallet: cannot withdraw to zero address\""},"value":"WorkerWallet: cannot withdraw to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32dd410984bef2bdfdef125880368ec1269daa3858f98485cbe6ef6fe38878fb","typeString":"literal_string \"WorkerWallet: cannot withdraw to zero address\""}],"id":1622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1448:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1448:74:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1631,"nodeType":"ExpressionStatement","src":"1448:74:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1632,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"1545:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1562:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1554:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"1554:7:6","typeDescriptions":{}}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1545:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1661,"nodeType":"Block","src":"1709:63:6","statements":[{"expression":{"arguments":[{"id":1657,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1750:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1658,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1754:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1654,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"1730:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1653,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"1723:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$142_$","typeString":"type(contract IERC20)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1723:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1737:12:6","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":211,"src":"1723:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1723:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"1723:38:6"}]},"id":1662,"nodeType":"IfStatement","src":"1541:231:6","trueBody":{"id":1652,"nodeType":"Block","src":"1566:137:6","statements":[{"assignments":[1639,null],"declarations":[{"constant":false,"id":1639,"mutability":"mutable","name":"success","nameLocation":"1586:7:6","nodeType":"VariableDeclaration","scope":1652,"src":"1581:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1638,"name":"bool","nodeType":"ElementaryTypeName","src":"1581:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1646,"initialValue":{"arguments":[{"hexValue":"","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1640,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1599:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1602:4:6","memberName":"call","nodeType":"MemberAccess","src":"1599:7:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1642,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1614:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1599:22:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1599:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1580:45:6"},{"expression":{"arguments":[{"id":1648,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"1647:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a20455448207472616e73666572206661696c6564","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1656:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ad542fc758949f2eac41186c24b6c7c9118aa12ce89931fcbcd70c2a1bcf2ed","typeString":"literal_string \"WorkerWallet: ETH transfer failed\""},"value":"WorkerWallet: ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ad542fc758949f2eac41186c24b6c7c9118aa12ce89931fcbcd70c2a1bcf2ed","typeString":"literal_string \"WorkerWallet: ETH transfer failed\""}],"id":1647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1639:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"ExpressionStatement","src":"1639:53:6"}]}},{"eventCall":{"arguments":[{"id":1664,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"1805:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1665,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1812:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1666,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1820:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1663,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"1795:9:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1795:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1668,"nodeType":"EmitStatement","src":"1790:33:6"}]},"functionSelector":"69328dec","id":1670,"implemented":true,"kind":"function","modifiers":[{"id":1620,"kind":"modifierInvocation","modifierName":{"id":1619,"name":"onlyOwner","nameLocations":["1428:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1523,"src":"1428:9:6"},"nodeType":"ModifierInvocation","src":"1428:9:6"}],"name":"withdraw","nameLocation":"1358:8:6","nodeType":"FunctionDefinition","overrides":{"id":1618,"nodeType":"OverrideSpecifier","overrides":[],"src":"1419:8:6"},"parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"token","nameLocation":"1375:5:6","nodeType":"VariableDeclaration","scope":1670,"src":"1367:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"1367:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1614,"mutability":"mutable","name":"amount","nameLocation":"1390:6:6","nodeType":"VariableDeclaration","scope":1670,"src":"1382:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"1382:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"to","nameLocation":"1406:2:6","nodeType":"VariableDeclaration","scope":1670,"src":"1398:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"1398:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1366:43:6"},"returnParameters":{"id":1621,"nodeType":"ParameterList","parameters":[],"src":"1438:0:6"},"scope":1671,"src":"1349:481:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1672,"src":"263:1569:6","usedErrors":[],"usedEvents":[1949,1957]}],"src":"32:1801:6"},"id":6},"contracts/WorkerWalletFactory.sol":{"ast":{"absolutePath":"contracts/WorkerWalletFactory.sol","exportedSymbols":{"Address":[884],"IERC20":[142],"IERC20Permit":[178],"ISwapManager":[1937],"IWorkerWallet":[1990],"SafeERC20":[554],"WorkerWallet":[1671],"WorkerWalletFactory":[1824]},"id":1825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1673,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:7"},{"absolutePath":"contracts/WorkerWallet.sol","file":"./WorkerWallet.sol","id":1674,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1825,"sourceUnit":1672,"src":"58:28:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISwapManager.sol","file":"./interfaces/ISwapManager.sol","id":1675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1825,"sourceUnit":1938,"src":"87:39:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"WorkerWalletFactory","contractDependencies":[1671],"contractKind":"contract","fullyImplemented":true,"id":1824,"linearizedBaseContracts":[1824],"name":"WorkerWalletFactory","nameLocation":"137:19:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2c91a2feb7f5c7e0c5681eb540d51f84de98235a2e0b6104fd4356684bd96f72","id":1681,"name":"WorkerWalletCreated","nameLocation":"169:19:7","nodeType":"EventDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"205:5:7","nodeType":"VariableDeclaration","scope":1681,"src":"189:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1676,"name":"address","nodeType":"ElementaryTypeName","src":"189:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1679,"indexed":false,"mutability":"mutable","name":"wallet","nameLocation":"220:6:7","nodeType":"VariableDeclaration","scope":1681,"src":"212:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"212:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"188:39:7"},"src":"163:65:7"},{"constant":false,"functionSelector":"aa2dead7","id":1685,"mutability":"mutable","name":"getWorkerWallet","nameLocation":"273:15:7","nodeType":"VariableDeclaration","scope":1824,"src":"238:50:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1684,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"246:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"238:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"257:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"1f6d2eac","id":1689,"mutability":"mutable","name":"isWorkerWallet","nameLocation":"326:14:7","nodeType":"VariableDeclaration","scope":1824,"src":"294:46:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1688,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"302:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"294:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1687,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":1770,"nodeType":"Block","src":"457:1159:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1699,"name":"getWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"475:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1701,"indexExpression":{"id":1700,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"491:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"475:23:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"510:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"502:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"502:7:7","typeDescriptions":{}}},"id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"502:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"475:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c6574466163746f72793a2077616c6c657420616c726561647920657869737473","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"514:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_47df72e5deea8fdd3f5a86012c19a19aa8df1f9e3c75af6b7d82410051da9c1e","typeString":"literal_string \"WorkerWalletFactory: wallet already exists\""},"value":"WorkerWalletFactory: wallet already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47df72e5deea8fdd3f5a86012c19a19aa8df1f9e3c75af6b7d82410051da9c1e","typeString":"literal_string \"WorkerWalletFactory: wallet already exists\""}],"id":1698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"467:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"467:92:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"467:92:7"},{"assignments":[1711],"declarations":[{"constant":false,"id":1711,"mutability":"mutable","name":"bytecode","nameLocation":"640:8:7","nodeType":"VariableDeclaration","scope":1770,"src":"627:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1710,"name":"bytes","nodeType":"ElementaryTypeName","src":"627:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1716,"initialValue":{"expression":{"arguments":[{"id":1713,"name":"WorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"656:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkerWallet_$1671_$","typeString":"type(contract WorkerWallet)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_WorkerWallet_$1671_$","typeString":"type(contract WorkerWallet)"}],"id":1712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"651:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"651:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_WorkerWallet_$1671","typeString":"type(contract WorkerWallet)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"670:12:7","memberName":"creationCode","nodeType":"MemberAccess","src":"651:31:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"627:55:7"},{"assignments":[1718],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"constructorArgs","nameLocation":"754:15:7","nodeType":"VariableDeclaration","scope":1770,"src":"741:28:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1717,"name":"bytes","nodeType":"ElementaryTypeName","src":"741:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1724,"initialValue":{"arguments":[{"id":1721,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"783:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1722,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"791:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1719,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"772:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"776:6:7","memberName":"encode","nodeType":"MemberAccess","src":"772:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"772:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"741:63:7"},{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"initCode","nameLocation":"895:8:7","nodeType":"VariableDeclaration","scope":1770,"src":"882:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1725,"name":"bytes","nodeType":"ElementaryTypeName","src":"882:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1732,"initialValue":{"arguments":[{"id":1729,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"923:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1730,"name":"constructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"933:15:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1727,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"906:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"910:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"906:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"906:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"882:67:7"},{"assignments":[1734],"declarations":[{"constant":false,"id":1734,"mutability":"mutable","name":"salt","nameLocation":"976:4:7","nodeType":"VariableDeclaration","scope":1770,"src":"968:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"968:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1744,"initialValue":{"arguments":[{"arguments":[{"id":1738,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"1010:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1739,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"1018:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1740,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1032:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1038:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"1032:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1736,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"993:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"997:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"993:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"993:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1735,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"983:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"983:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"968:81:7"},{"AST":{"nodeType":"YulBlock","src":"1077:188:7","statements":[{"nodeType":"YulAssignment","src":"1091:70:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1115:1:7","type":"","value":"0"},{"arguments":[{"name":"initCode","nodeType":"YulIdentifier","src":"1122:8:7"},{"kind":"number","nodeType":"YulLiteral","src":"1132:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1118:3:7"},"nodeType":"YulFunctionCall","src":"1118:19:7"},{"arguments":[{"name":"initCode","nodeType":"YulIdentifier","src":"1145:8:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1139:5:7"},"nodeType":"YulFunctionCall","src":"1139:15:7"},{"name":"salt","nodeType":"YulIdentifier","src":"1156:4:7"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1107:7:7"},"nodeType":"YulFunctionCall","src":"1107:54:7"},"variableNames":[{"name":"workerWallet","nodeType":"YulIdentifier","src":"1091:12:7"}]},{"body":{"nodeType":"YulBlock","src":"1211:44:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1236:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1239:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1229:6:7"},"nodeType":"YulFunctionCall","src":"1229:12:7"},"nodeType":"YulExpressionStatement","src":"1229:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"workerWallet","nodeType":"YulIdentifier","src":"1196:12:7"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1184:11:7"},"nodeType":"YulFunctionCall","src":"1184:25:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1177:6:7"},"nodeType":"YulFunctionCall","src":"1177:33:7"},"nodeType":"YulIf","src":"1174:81:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1726,"isOffset":false,"isSlot":false,"src":"1122:8:7","valueSize":1},{"declaration":1726,"isOffset":false,"isSlot":false,"src":"1145:8:7","valueSize":1},{"declaration":1734,"isOffset":false,"isSlot":false,"src":"1156:4:7","valueSize":1},{"declaration":1696,"isOffset":false,"isSlot":false,"src":"1091:12:7","valueSize":1},{"declaration":1696,"isOffset":false,"isSlot":false,"src":"1196:12:7","valueSize":1}],"id":1745,"nodeType":"InlineAssembly","src":"1068:197:7"},{"expression":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1746,"name":"getWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"1321:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1748,"indexExpression":{"id":1747,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"1337:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1321:23:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1749,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1347:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1321:38:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1751,"nodeType":"ExpressionStatement","src":"1321:38:7"},{"expression":{"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1752,"name":"isWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"1369:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1754,"indexExpression":{"id":1753,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1384:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1369:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1400:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1369:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1757,"nodeType":"ExpressionStatement","src":"1369:35:7"},{"expression":{"arguments":[{"id":1762,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1531:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1759,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"1496:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1758,"name":"ISwapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"1483:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapManager_$1937_$","typeString":"type(contract ISwapManager)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1483:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$1937","typeString":"contract ISwapManager"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1510:20:7","memberName":"registerWorkerWallet","nodeType":"MemberAccess","referencedDeclaration":1911,"src":"1483:47:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1483:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1764,"nodeType":"ExpressionStatement","src":"1483:61:7"},{"eventCall":{"arguments":[{"id":1766,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"1588:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1767,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1596:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1765,"name":"WorkerWalletCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1568:19:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1568:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1769,"nodeType":"EmitStatement","src":"1563:46:7"}]},"functionSelector":"af295f35","id":1771,"implemented":true,"kind":"function","modifiers":[],"name":"createWorkerWallet","nameLocation":"360:18:7","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"_owner","nameLocation":"387:6:7","nodeType":"VariableDeclaration","scope":1771,"src":"379:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"379:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"_swapManager","nameLocation":"403:12:7","nodeType":"VariableDeclaration","scope":1771,"src":"395:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"378:38:7"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"workerWallet","nameLocation":"443:12:7","nodeType":"VariableDeclaration","scope":1771,"src":"435:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"434:22:7"},"scope":1824,"src":"351:1265:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1822,"nodeType":"Block","src":"1730:348:7","statements":[{"assignments":[1781],"declarations":[{"constant":false,"id":1781,"mutability":"mutable","name":"hash","nameLocation":"1748:4:7","nodeType":"VariableDeclaration","scope":1822,"src":"1740:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1740:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1810,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30786666","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1819:4:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}],"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1785,"name":"bytes1","nodeType":"ElementaryTypeName","src":"1812:6:7","typeDescriptions":{}}},"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"arguments":[{"id":1791,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1850:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_WorkerWalletFactory_$1824","typeString":"contract WorkerWalletFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WorkerWalletFactory_$1824","typeString":"contract WorkerWalletFactory"}],"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1842:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"1842:7:7","typeDescriptions":{}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1796,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"1900:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1797,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1908:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1798,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1922:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"1922:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1794,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1883:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1887:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"1883:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1883:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1793,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1873:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"arguments":[{"id":1804,"name":"WorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"1972:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkerWallet_$1671_$","typeString":"type(contract WorkerWallet)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_WorkerWallet_$1671_$","typeString":"type(contract WorkerWallet)"}],"id":1803,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1967:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1967:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_WorkerWallet_$1671","typeString":"type(contract WorkerWallet)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1986:12:7","memberName":"creationCode","nodeType":"MemberAccess","src":"1967:31:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1802,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1957:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1783,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1778:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1782:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"1778:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:235:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1782,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1755:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1755:268:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1740:283:7"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1817,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"2064:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2056:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:7","typeDescriptions":{}}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2048:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1813,"name":"uint160","nodeType":"ElementaryTypeName","src":"2048:7:7","typeDescriptions":{}}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2040:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1811,"name":"address","nodeType":"ElementaryTypeName","src":"2040:7:7","typeDescriptions":{}}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1779,"id":1821,"nodeType":"Return","src":"2033:38:7"}]},"functionSelector":"1ac38190","id":1823,"implemented":true,"kind":"function","modifiers":[],"name":"computeWorkerWalletAddress","nameLocation":"1635:26:7","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"_owner","nameLocation":"1670:6:7","nodeType":"VariableDeclaration","scope":1823,"src":"1662:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"1662:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"_swapManager","nameLocation":"1686:12:7","nodeType":"VariableDeclaration","scope":1823,"src":"1678:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"1678:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1661:38:7"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1823,"src":"1721:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"1721:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1720:9:7"},"scope":1824,"src":"1626:452:7","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1825,"src":"128:1952:7","usedErrors":[],"usedEvents":[1681]}],"src":"32:2049:7"},"id":7},"contracts/interfaces/ISwapManager.sol":{"ast":{"absolutePath":"contracts/interfaces/ISwapManager.sol","exportedSymbols":{"ISwapManager":[1937]},"id":1938,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"ISwapManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1937,"linearizedBaseContracts":[1937],"name":"ISwapManager","nameLocation":"68:12:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapManager.SwapOrder","id":1847,"members":[{"constant":false,"id":1828,"mutability":"mutable","name":"initiator","nameLocation":"122:9:8","nodeType":"VariableDeclaration","scope":1847,"src":"114:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"114:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"resolver","nameLocation":"149:8:8","nodeType":"VariableDeclaration","scope":1847,"src":"141:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"141:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"amountIn","nameLocation":"175:8:8","nodeType":"VariableDeclaration","scope":1847,"src":"167:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"167:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"amountOutMin","nameLocation":"201:12:8","nodeType":"VariableDeclaration","scope":1847,"src":"193:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint256","nodeType":"ElementaryTypeName","src":"193:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"tokenIn","nameLocation":"231:7:8","nodeType":"VariableDeclaration","scope":1847,"src":"223:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"tokenOut","nameLocation":"256:8:8","nodeType":"VariableDeclaration","scope":1847,"src":"248:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"248:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"deadline","nameLocation":"282:8:8","nodeType":"VariableDeclaration","scope":1847,"src":"274:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"274:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"secretHash","nameLocation":"308:10:8","nodeType":"VariableDeclaration","scope":1847,"src":"300:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"300:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"isFulfilled","nameLocation":"333:11:8","nodeType":"VariableDeclaration","scope":1847,"src":"328:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1843,"name":"bool","nodeType":"ElementaryTypeName","src":"328:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"isRefunded","nameLocation":"359:10:8","nodeType":"VariableDeclaration","scope":1847,"src":"354:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1845,"name":"bool","nodeType":"ElementaryTypeName","src":"354:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SwapOrder","nameLocation":"94:9:8","nodeType":"StructDefinition","scope":1937,"src":"87:289:8","visibility":"public"},{"anonymous":false,"eventSelector":"958da44420b864737ad53ea0aa959279a3e21574047c9737df230d1f350577a0","id":1863,"name":"OrderCreated","nameLocation":"388:12:8","nodeType":"EventDefinition","parameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"426:7:8","nodeType":"VariableDeclaration","scope":1863,"src":"410:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"410:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1851,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"459:9:8","nodeType":"VariableDeclaration","scope":1863,"src":"443:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"443:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"indexed":false,"mutability":"mutable","name":"tokenIn","nameLocation":"486:7:8","nodeType":"VariableDeclaration","scope":1863,"src":"478:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1855,"indexed":false,"mutability":"mutable","name":"tokenOut","nameLocation":"511:8:8","nodeType":"VariableDeclaration","scope":1863,"src":"503:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1857,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"537:8:8","nodeType":"VariableDeclaration","scope":1863,"src":"529:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1859,"indexed":false,"mutability":"mutable","name":"amountOutMin","nameLocation":"563:12:8","nodeType":"VariableDeclaration","scope":1863,"src":"555:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"555:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1861,"indexed":false,"mutability":"mutable","name":"secretHash","nameLocation":"593:10:8","nodeType":"VariableDeclaration","scope":1863,"src":"585:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"585:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"400:209:8"},"src":"382:228:8"},{"anonymous":false,"eventSelector":"c0dec645483244c37030b06224e60b121eadd7ee71a4ce18862c979d5584042b","id":1871,"name":"OrderFulfilled","nameLocation":"622:14:8","nodeType":"EventDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"662:7:8","nodeType":"VariableDeclaration","scope":1871,"src":"646:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"646:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1867,"indexed":true,"mutability":"mutable","name":"resolver","nameLocation":"695:8:8","nodeType":"VariableDeclaration","scope":1871,"src":"679:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1866,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1869,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"721:6:8","nodeType":"VariableDeclaration","scope":1871,"src":"713:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"713:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"636:97:8"},"src":"616:118:8"},{"anonymous":false,"eventSelector":"a60671d8537ed193e567f86ddf28cf35dc67073b5ad80a2d41359cfa78db0a1e","id":1875,"name":"OrderRefunded","nameLocation":"746:13:8","nodeType":"EventDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"776:7:8","nodeType":"VariableDeclaration","scope":1875,"src":"760:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"760:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"759:25:8"},"src":"740:45:8"},{"functionSelector":"7535f2df","id":1892,"implemented":false,"kind":"function","modifiers":[],"name":"createOrder","nameLocation":"800:11:8","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"tokenIn","nameLocation":"829:7:8","nodeType":"VariableDeclaration","scope":1892,"src":"821:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"tokenOut","nameLocation":"854:8:8","nodeType":"VariableDeclaration","scope":1892,"src":"846:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"amountIn","nameLocation":"880:8:8","nodeType":"VariableDeclaration","scope":1892,"src":"872:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"amountOutMin","nameLocation":"906:12:8","nodeType":"VariableDeclaration","scope":1892,"src":"898:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1885,"mutability":"mutable","name":"deadline","nameLocation":"936:8:8","nodeType":"VariableDeclaration","scope":1892,"src":"928:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1884,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"secretHash","nameLocation":"962:10:8","nodeType":"VariableDeclaration","scope":1892,"src":"954:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"954:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"811:167:8"},"returnParameters":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1892,"src":"1005:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1005:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1004:9:8"},"scope":1937,"src":"791:223:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"f6dccf2e","id":1901,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillOrder","nameLocation":"1029:12:8","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"orderId","nameLocation":"1059:7:8","nodeType":"VariableDeclaration","scope":1901,"src":"1051:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1051:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"amountOut","nameLocation":"1084:9:8","nodeType":"VariableDeclaration","scope":1901,"src":"1076:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"secret","nameLocation":"1111:6:8","nodeType":"VariableDeclaration","scope":1901,"src":"1103:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1103:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1041:82:8"},"returnParameters":{"id":1900,"nodeType":"ParameterList","parameters":[],"src":"1140:0:8"},"scope":1937,"src":"1020:121:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"116a1d9a","id":1906,"implemented":false,"kind":"function","modifiers":[],"name":"refundOrder","nameLocation":"1156:11:8","nodeType":"FunctionDefinition","parameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"orderId","nameLocation":"1176:7:8","nodeType":"VariableDeclaration","scope":1906,"src":"1168:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1168:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1167:17:8"},"returnParameters":{"id":1905,"nodeType":"ParameterList","parameters":[],"src":"1193:0:8"},"scope":1937,"src":"1147:47:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6808d587","id":1911,"implemented":false,"kind":"function","modifiers":[],"name":"registerWorkerWallet","nameLocation":"1209:20:8","nodeType":"FunctionDefinition","parameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"workerWallet","nameLocation":"1238:12:8","nodeType":"VariableDeclaration","scope":1911,"src":"1230:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"1230:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1229:22:8"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[],"src":"1260:0:8"},"scope":1937,"src":"1200:61:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5778472a","id":1936,"implemented":false,"kind":"function","modifiers":[],"name":"getOrder","nameLocation":"1280:8:8","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"orderId","nameLocation":"1297:7:8","nodeType":"VariableDeclaration","scope":1936,"src":"1289:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1288:17:8"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"initiator","nameLocation":"1346:9:8","nodeType":"VariableDeclaration","scope":1936,"src":"1338:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"1338:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"resolver","nameLocation":"1373:8:8","nodeType":"VariableDeclaration","scope":1936,"src":"1365:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"1365:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"amountIn","nameLocation":"1399:8:8","nodeType":"VariableDeclaration","scope":1936,"src":"1391:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"amountOutMin","nameLocation":"1425:12:8","nodeType":"VariableDeclaration","scope":1936,"src":"1417:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"tokenIn","nameLocation":"1455:7:8","nodeType":"VariableDeclaration","scope":1936,"src":"1447:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"1447:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"tokenOut","nameLocation":"1480:8:8","nodeType":"VariableDeclaration","scope":1936,"src":"1472:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1925,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"deadline","nameLocation":"1506:8:8","nodeType":"VariableDeclaration","scope":1936,"src":"1498:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"1498:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1930,"mutability":"mutable","name":"secretHash","nameLocation":"1532:10:8","nodeType":"VariableDeclaration","scope":1936,"src":"1524:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1524:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"isFulfilled","nameLocation":"1557:11:8","nodeType":"VariableDeclaration","scope":1936,"src":"1552:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"1552:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"isRefunded","nameLocation":"1583:10:8","nodeType":"VariableDeclaration","scope":1936,"src":"1578:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1933,"name":"bool","nodeType":"ElementaryTypeName","src":"1578:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1328:271:8"},"scope":1937,"src":"1271:329:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1938,"src":"58:1712:8","usedErrors":[],"usedEvents":[1863,1871,1875]}],"src":"32:1739:8"},"id":8},"contracts/interfaces/IWorkerWallet.sol":{"ast":{"absolutePath":"contracts/interfaces/IWorkerWallet.sol","exportedSymbols":{"IWorkerWallet":[1990]},"id":1991,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1939,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IWorkerWallet","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1990,"linearizedBaseContracts":[1990],"name":"IWorkerWallet","nameLocation":"68:13:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"4232d48319210b7bc959a61fd7785051da1497df2a1400e3340f42a8a6efd541","id":1949,"name":"Executed","nameLocation":"94:8:9","nodeType":"EventDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"119:6:9","nodeType":"VariableDeclaration","scope":1949,"src":"103:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1943,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"135:5:9","nodeType":"VariableDeclaration","scope":1949,"src":"127:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"127:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1945,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"148:4:9","nodeType":"VariableDeclaration","scope":1949,"src":"142:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1944,"name":"bytes","nodeType":"ElementaryTypeName","src":"142:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1947,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"159:7:9","nodeType":"VariableDeclaration","scope":1949,"src":"154:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1946,"name":"bool","nodeType":"ElementaryTypeName","src":"154:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"102:65:9"},"src":"88:80:9"},{"anonymous":false,"eventSelector":"cbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a","id":1957,"name":"Withdrawn","nameLocation":"179:9:9","nodeType":"EventDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"197:5:9","nodeType":"VariableDeclaration","scope":1957,"src":"189:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"189:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1953,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"212:6:9","nodeType":"VariableDeclaration","scope":1957,"src":"204:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"204:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1955,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"228:2:9","nodeType":"VariableDeclaration","scope":1957,"src":"220:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1954,"name":"address","nodeType":"ElementaryTypeName","src":"220:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"188:43:9"},"src":"173:59:9"},{"functionSelector":"b61d27f6","id":1970,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"251:7:9","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"target","nameLocation":"276:6:9","nodeType":"VariableDeclaration","scope":1970,"src":"268:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"value","nameLocation":"300:5:9","nodeType":"VariableDeclaration","scope":1970,"src":"292:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"292:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"data","nameLocation":"330:4:9","nodeType":"VariableDeclaration","scope":1970,"src":"315:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1962,"name":"bytes","nodeType":"ElementaryTypeName","src":"315:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"258:82:9"},"returnParameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"success","nameLocation":"364:7:9","nodeType":"VariableDeclaration","scope":1970,"src":"359:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1965,"name":"bool","nodeType":"ElementaryTypeName","src":"359:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"result","nameLocation":"386:6:9","nodeType":"VariableDeclaration","scope":1970,"src":"373:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1967,"name":"bytes","nodeType":"ElementaryTypeName","src":"373:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"358:35:9"},"scope":1990,"src":"242:152:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"69328dec","id":1979,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"413:8:9","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"token","nameLocation":"430:5:9","nodeType":"VariableDeclaration","scope":1979,"src":"422:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"422:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"amount","nameLocation":"445:6:9","nodeType":"VariableDeclaration","scope":1979,"src":"437:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"to","nameLocation":"461:2:9","nodeType":"VariableDeclaration","scope":1979,"src":"453:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1975,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"421:43:9"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"473:0:9"},"scope":1990,"src":"404:70:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8da5cb5b","id":1984,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"493:5:9","nodeType":"FunctionDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[],"src":"498:2:9"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1984,"src":"524:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"523:9:9"},"scope":1990,"src":"484:49:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"709d039d","id":1989,"implemented":false,"kind":"function","modifiers":[],"name":"swapManager","nameLocation":"552:11:9","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[],"src":"563:2:9"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1989,"src":"589:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1986,"name":"address","nodeType":"ElementaryTypeName","src":"589:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"588:9:9"},"scope":1990,"src":"543:55:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1991,"src":"58:542:9","usedErrors":[],"usedEvents":[1949,1957]}],"src":"32:569:9"},"id":9},"contracts/mock/MockRelayer.sol":{"ast":{"absolutePath":"contracts/mock/MockRelayer.sol","exportedSymbols":{"IERC20":[142],"ISwapManager":[1937],"MockRelayer":[2163]},"id":2164,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1992,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1993,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2164,"sourceUnit":143,"src":"58:56:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISwapManager.sol","file":"../interfaces/ISwapManager.sol","id":1994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2164,"sourceUnit":1938,"src":"115:40:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MockRelayer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2163,"linearizedBaseContracts":[2163],"name":"MockRelayer","nameLocation":"166:11:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"709d039d","id":1997,"mutability":"mutable","name":"swapManager","nameLocation":"204:11:10","nodeType":"VariableDeclaration","scope":2163,"src":"184:31:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$1937","typeString":"contract ISwapManager"},"typeName":{"id":1996,"nodeType":"UserDefinedTypeName","pathNode":{"id":1995,"name":"ISwapManager","nameLocations":["184:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1937,"src":"184:12:10"},"referencedDeclaration":1937,"src":"184:12:10","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$1937","typeString":"contract ISwapManager"}},"visibility":"public"},{"anonymous":false,"eventSelector":"49f29b9cfb3bb0783c26f435fe9808e8b7fd6958ebb9363de51f5b697c712c74","id":2013,"name":"OrderReceived","nameLocation":"271:13:10","nodeType":"EventDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"310:7:10","nodeType":"VariableDeclaration","scope":2013,"src":"294:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"294:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2001,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"343:9:10","nodeType":"VariableDeclaration","scope":2013,"src":"327:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2000,"name":"address","nodeType":"ElementaryTypeName","src":"327:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2003,"indexed":false,"mutability":"mutable","name":"tokenIn","nameLocation":"370:7:10","nodeType":"VariableDeclaration","scope":2013,"src":"362:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2005,"indexed":false,"mutability":"mutable","name":"tokenOut","nameLocation":"395:8:10","nodeType":"VariableDeclaration","scope":2013,"src":"387:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"387:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2007,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"421:8:10","nodeType":"VariableDeclaration","scope":2013,"src":"413:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"413:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2009,"indexed":false,"mutability":"mutable","name":"amountOutMin","nameLocation":"447:12:10","nodeType":"VariableDeclaration","scope":2013,"src":"439:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2011,"indexed":false,"mutability":"mutable","name":"secretHash","nameLocation":"477:10:10","nodeType":"VariableDeclaration","scope":2013,"src":"469:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"469:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"284:209:10"},"src":"265:229:10"},{"anonymous":false,"eventSelector":"dafd13066d5a7c6b0591d8c19f57c75c45b8fa038153891c78a582507cbd18c7","id":2023,"name":"OrderFulfilled","nameLocation":"510:14:10","nodeType":"EventDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"550:7:10","nodeType":"VariableDeclaration","scope":2023,"src":"534:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2017,"indexed":true,"mutability":"mutable","name":"resolver","nameLocation":"583:8:10","nodeType":"VariableDeclaration","scope":2023,"src":"567:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"567:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2019,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"609:9:10","nodeType":"VariableDeclaration","scope":2023,"src":"601:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2021,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"636:6:10","nodeType":"VariableDeclaration","scope":2023,"src":"628:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"628:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"524:124:10"},"src":"504:145:10"},{"body":{"id":2034,"nodeType":"Block","src":"689:57:10","statements":[{"expression":{"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2028,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"699:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$1937","typeString":"contract ISwapManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2030,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"726:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2029,"name":"ISwapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"713:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapManager_$1937_$","typeString":"type(contract ISwapManager)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"713:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$1937","typeString":"contract ISwapManager"}},"src":"699:40:10","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$1937","typeString":"contract ISwapManager"}},"id":2033,"nodeType":"ExpressionStatement","src":"699:40:10"}]},"id":2035,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"_swapManager","nameLocation":"675:12:10","nodeType":"VariableDeclaration","scope":2035,"src":"667:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2024,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"666:22:10"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[],"src":"689:0:10"},"scope":2163,"src":"655:91:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2119,"nodeType":"Block","src":"1023:888:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2052,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1101:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1120:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1112:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2053,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:10","typeDescriptions":{}}},"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1101:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2083,"nodeType":"IfStatement","src":"1097:246:10","trueBody":{"id":2082,"nodeType":"Block","src":"1124:219:10","statements":[{"expression":{"arguments":[{"expression":{"id":2062,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1167:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1171:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1167:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2066,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1187:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_MockRelayer_$2163","typeString":"contract MockRelayer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MockRelayer_$2163","typeString":"contract MockRelayer"}],"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1179:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"1179:7:10","typeDescriptions":{}}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1179:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2068,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1194:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2059,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1145:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2058,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"1138:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$142_$","typeString":"type(contract IERC20)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1138:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1154:12:10","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":141,"src":"1138:28:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1138:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2070,"nodeType":"ExpressionStatement","src":"1138:65:10"},{"expression":{"arguments":[{"arguments":[{"id":2077,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"1309:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$1937","typeString":"contract ISwapManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapManager_$1937","typeString":"contract ISwapManager"}],"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1301:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"1301:7:10","typeDescriptions":{}}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2079,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1323:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2072,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1284:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2071,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"1277:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$142_$","typeString":"type(contract IERC20)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1277:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$142","typeString":"contract IERC20"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1293:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":129,"src":"1277:23:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1277:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2081,"nodeType":"ExpressionStatement","src":"1277:55:10"}]}},{"assignments":[2085],"declarations":[{"constant":false,"id":2085,"mutability":"mutable","name":"orderId","nameLocation":"1417:7:10","nodeType":"VariableDeclaration","scope":2119,"src":"1409:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1409:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2105,"initialValue":{"arguments":[{"id":2098,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1531:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2099,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1552:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2100,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1574:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2101,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1596:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2102,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"1622:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2103,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"1644:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2086,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"1427:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$1937","typeString":"contract ISwapManager"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1439:11:10","memberName":"createOrder","nodeType":"MemberAccess","referencedDeclaration":1892,"src":"1427:23:10","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (address,address,uint256,uint256,uint256,bytes32) payable external returns (bytes32)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2088,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1471:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1490:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1482:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2089,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:10","typeDescriptions":{}}},"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1471:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1506:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1471:36:10","trueExpression":{"id":2094,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1495:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1427:90:10","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$value","typeString":"function (address,address,uint256,uint256,uint256,bytes32) payable external returns (bytes32)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1427:237:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1409:255:10"},{"eventCall":{"arguments":[{"id":2107,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"1715:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2108,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1736:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1740:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1736:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2110,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1760:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2111,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1781:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2112,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1803:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2113,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1825:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2114,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"1851:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2106,"name":"OrderReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"1688:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,address,address,uint256,uint256,bytes32)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1688:183:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2116,"nodeType":"EmitStatement","src":"1683:188:10"},{"expression":{"id":2117,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"1897:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2051,"id":2118,"nodeType":"Return","src":"1890:14:10"}]},"functionSelector":"eb9bd099","id":2120,"implemented":true,"kind":"function","modifiers":[],"name":"receiveOrder","nameLocation":"808:12:10","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"tokenIn","nameLocation":"838:7:10","nodeType":"VariableDeclaration","scope":2120,"src":"830:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"tokenOut","nameLocation":"863:8:10","nodeType":"VariableDeclaration","scope":2120,"src":"855:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"855:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"amountIn","nameLocation":"889:8:10","nodeType":"VariableDeclaration","scope":2120,"src":"881:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"amountOutMin","nameLocation":"915:12:10","nodeType":"VariableDeclaration","scope":2120,"src":"907:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"deadline","nameLocation":"945:8:10","nodeType":"VariableDeclaration","scope":2120,"src":"937:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"secretHash","nameLocation":"971:10:10","nodeType":"VariableDeclaration","scope":2120,"src":"963:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"963:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"820:167:10"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2120,"src":"1014:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1014:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1013:9:10"},"scope":2163,"src":"799:1112:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2161,"nodeType":"Block","src":"2089:465:10","statements":[{"assignments":[2130,null],"declarations":[{"constant":false,"id":2130,"mutability":"mutable","name":"success","nameLocation":"2178:7:10","nodeType":"VariableDeclaration","scope":2161,"src":"2173:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2129,"name":"bool","nodeType":"ElementaryTypeName","src":"2173:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2147,"initialValue":{"arguments":[{"arguments":[{"hexValue":"66756c66696c6c4f7264657228627974657333322c75696e743235362c6279746573333229","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2289:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6dccf2e9f6e6b4181d57b03d59acb9e0c276d87b7e5507747856687fa301502","typeString":"literal_string \"fulfillOrder(bytes32,uint256,bytes32)\""},"value":"fulfillOrder(bytes32,uint256,bytes32)"},{"id":2142,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2346:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2143,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"2371:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2144,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"2398:6:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f6dccf2e9f6e6b4181d57b03d59acb9e0c276d87b7e5507747856687fa301502","typeString":"literal_string \"fulfillOrder(bytes32,uint256,bytes32)\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2139,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2248:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2252:19:10","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"2248:23:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2248:170:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2133,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2199:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$1937","typeString":"contract ISwapManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapManager_$1937","typeString":"contract ISwapManager"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2191:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2131,"name":"address","nodeType":"ElementaryTypeName","src":"2191:7:10","typeDescriptions":{}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2191:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2212:4:10","memberName":"call","nodeType":"MemberAccess","src":"2191:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2136,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2224:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2228:5:10","memberName":"value","nodeType":"MemberAccess","src":"2224:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2191:43:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2191:237:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2172:256:10"},{"expression":{"arguments":[{"id":2149,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"2446:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756c66696c6c206f72646572206661696c6564","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2455:22:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_786164181b1dbf10e7134b576dc7774e946256bcc196a412825e802f7a01134d","typeString":"literal_string \"Fulfill order failed\""},"value":"Fulfill order failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_786164181b1dbf10e7134b576dc7774e946256bcc196a412825e802f7a01134d","typeString":"literal_string \"Fulfill order failed\""}],"id":2148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2438:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2438:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2152,"nodeType":"ExpressionStatement","src":"2438:40:10"},{"eventCall":{"arguments":[{"id":2154,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2508:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2517:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2521:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2517:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2157,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"2529:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2158,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"2540:6:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2153,"name":"OrderFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"2493:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,uint256,bytes32)"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2160,"nodeType":"EmitStatement","src":"2488:59:10"}]},"functionSelector":"f6dccf2e","id":2162,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillOrder","nameLocation":"1977:12:10","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"orderId","nameLocation":"2007:7:10","nodeType":"VariableDeclaration","scope":2162,"src":"1999:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1999:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"amountOut","nameLocation":"2032:9:10","nodeType":"VariableDeclaration","scope":2162,"src":"2024:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2024:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"secret","nameLocation":"2059:6:10","nodeType":"VariableDeclaration","scope":2162,"src":"2051:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2051:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1989:82:10"},"returnParameters":{"id":2128,"nodeType":"ParameterList","parameters":[],"src":"2089:0:10"},"scope":2163,"src":"1968:586:10","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2164,"src":"157:2399:10","usedErrors":[],"usedEvents":[2013,2023]}],"src":"32:2525:10"},"id":10}},"contracts":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220273e81c6a1e0ab5bd3196b884ca058bc6e6a32a055a0f709bbe22f8c65fdad9464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 RETURNDATACOPY DUP2 0xC6 LOG1 0xE0 0xAB JUMPDEST 0xD3 NOT PUSH12 0x884CA058BC6E6A32A055A0F7 MULMOD 0xBB 0xE2 0x2F DUP13 PUSH6 0xFDAD9464736F PUSH13 0x63430008140033000000000000 ","sourceMap":"701:6234:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;701:6234:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220273e81c6a1e0ab5bd3196b884ca058bc6e6a32a055a0f709bbe22f8c65fdad9464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 RETURNDATACOPY DUP2 0xC6 LOG1 0xE0 0xAB JUMPDEST 0xD3 NOT PUSH12 0x884CA058BC6E6A32A055A0F7 MULMOD 0xBB 0xE2 0x2F DUP13 PUSH6 0xFDAD9464736F PUSH13 0x63430008140033000000000000 ","sourceMap":"701:6234:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5958e19c2a82a0b74ae2dd95278aebe56f185c0c5bfe5707efb7658db5ddfe764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SWAP6 DUP15 NOT 0xC2 0xA8 0x2A SIGNEXTEND PUSH21 0xAE2DD95278AEBE56F185C0C5BFE5707EFB7658DB5D 0xDF 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5958e19c2a82a0b74ae2dd95278aebe56f185c0c5bfe5707efb7658db5ddfe764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SWAP6 DUP15 NOT 0xC2 0xA8 0x2A SIGNEXTEND PUSH21 0xAE2DD95278AEBE56F185C0C5BFE5707EFB7658DB5D 0xDF 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SwapManager.sol":{"SwapManager":{"abi":[{"inputs":[{"internalType":"address","name":"weth","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"resolver","type":"address"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"OrderFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"OrderRefunded","type":"event"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"fulfillOrder","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getOrder","outputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isWorkerWallet","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"orders","outputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"refundOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"workerWallet","type":"address"}],"name":"registerWorkerWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"usedSecrets","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_18":{"entryPoint":null,"id":18,"parameterSlots":0,"returnSlots":0},"@_924":{"entryPoint":null,"id":924,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":69,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:11","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:11"},"nodeType":"YulFunctionCall","src":"143:12:11"},"nodeType":"YulExpressionStatement","src":"143:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:11"},"nodeType":"YulFunctionCall","src":"112:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:11"},"nodeType":"YulFunctionCall","src":"108:32:11"},"nodeType":"YulIf","src":"105:52:11"},{"nodeType":"YulVariableDeclaration","src":"166:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:11"},"nodeType":"YulFunctionCall","src":"179:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:11"},"nodeType":"YulFunctionCall","src":"260:12:11"},"nodeType":"YulExpressionStatement","src":"260:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:11"},"nodeType":"YulFunctionCall","src":"239:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:11"},"nodeType":"YulFunctionCall","src":"235:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:11"},"nodeType":"YulFunctionCall","src":"224:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:11"},"nodeType":"YulFunctionCall","src":"214:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:11"},"nodeType":"YulFunctionCall","src":"207:50:11"},"nodeType":"YulIf","src":"204:70:11"},{"nodeType":"YulAssignment","src":"283:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:11"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:11","type":""}],"src":"14:290:11"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1689 CODESIZE SUB DUP1 PUSH2 0x1689 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x75 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x15F9 PUSH2 0x90 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x2EA ADD MSTORE PUSH2 0x15F9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7535F2DF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7535F2DF EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x9C3F1E90 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xA4516C48 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xF6DCCF2E EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x116A1D9A EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x1F6D2EAC EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5778472A EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x6808D587 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND SWAP10 SWAP7 DUP10 AND SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 SWAP4 DUP7 AND SWAP6 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND DUP2 MSTORE SWAP10 DUP12 AND PUSH1 0x20 DUP12 ADD MSTORE DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x60 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP3 DUP8 AND PUSH1 0x80 DUP8 ADD MSTORE SWAP6 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xE0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH2 0x217 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND SWAP9 SWAP7 DUP8 AND SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 DUP6 AND SWAP5 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13DC99195C881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x13DC99195C88185B1C9958591E48199D5B199A5B1B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C99599D5B991959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP GT PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111958591B1A5B99481B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737BA1037B93232B91034B734BA34B0BA37B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x536 JUMPI DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x55A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x55A SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0xA60671D8537ED193E567F86DDF28CF35DC67073B5AD80A2D41359CFA78DB0A1E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH2 0x590 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CD PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST TIMESTAMP DUP4 GT PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP2 PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840E6CAC6E4CAE840D0C2E6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x34 DUP5 ADD MSTORE PUSH1 0x54 DUP4 ADD DUP9 SWAP1 MSTORE DUP10 DUP2 SHL DUP3 AND PUSH1 0x74 DUP5 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x88 DUP3 ADD MSTORE PUSH1 0x9C DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xBC ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4F7264657220657869737473 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x8A1 JUMPI DUP6 CALLVALUE EQ PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD0811551208185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x8B6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND CALLER ADDRESS DUP10 PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x958DA44420B864737AD53EA0AA959279A3E21574047C9737DF230D1F350577A0 DUP11 DUP11 DUP11 DUP11 DUP10 PUSH1 0x40 MLOAD PUSH2 0xAC9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP1 POP PUSH2 0xADD PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAEF PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13DC99195C881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x13DC99195C88185B1C9958591E48199D5B199A5B1B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13DC99195C881DD85CC81C99599D5B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DC99195C88195E1C1A5C9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081CD958DC995D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14D958DC995D08185B1C9958591E481D5CD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP4 LT ISZERO PUSH2 0xD36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE17 JUMPI PUSH1 0x0 CALLER SWAP1 POP ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBF SWAP2 SWAP1 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420776F726B65722077616C6C6574206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST POP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE DUP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF53 JUMPI DUP1 PUSH1 0x2 ADD SLOAD SELFBALANCE LT ISZERO PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204554482062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 CALLER SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST POP PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0xF74 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x104D JUMPI DUP3 CALLVALUE LT ISZERO PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9CDD59999A58DA595B9D08115512081CD95B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP3 CALLVALUE GT ISZERO PUSH2 0x100E JUMPI CALLER PUSH2 0x8FC PUSH2 0xFE4 DUP6 CALLVALUE PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x100C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1047 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x106D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x106D SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 CALLER SWAP2 AND DUP7 PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 DUP6 SWAP1 PUSH32 0xC0DEC645483244C37030B06224E60B121EADD7EE71A4CE18862C979D5584042B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x10AF PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1106 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x10AF SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x11A8 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1139 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1203 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1283 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x1224 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1292 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x129A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x136A DUP8 DUP4 DUP4 DUP8 PUSH2 0x1375 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13E4 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x13DD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x13DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST POP DUP2 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x1292 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x13F9 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x145E DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1489 DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1499 DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x145E DUP2 PUSH2 0x142C JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1528 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x145E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x156B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1553 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1586 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x15AF DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A CREATE SWAP11 0xB7 0x2A 0x23 SGT 0x2D PUSH30 0xF75D9A387F1551AAA7382341DF560F0E797640C6F2AB1D64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"326:5854:5:-:0;;;614:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;-1:-1:-1;;;;;650:11:5;;;326:5854;;14:290:11;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:11;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:11:o;:::-;326:5854:5;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@WETH_914":{"entryPoint":null,"id":914,"parameterSlots":0,"returnSlots":0},"@_928":{"entryPoint":null,"id":928,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_505":{"entryPoint":4526,"id":505,"parameterSlots":2,"returnSlots":0},"@_nonReentrantAfter_52":{"entryPoint":null,"id":52,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_44":{"entryPoint":4276,"id":44,"parameterSlots":0,"returnSlots":0},"@_revert_883":{"entryPoint":null,"id":883,"parameterSlots":2,"returnSlots":0},"@createOrder_1066":{"entryPoint":1731,"id":1066,"parameterSlots":6,"returnSlots":1},"@fulfillOrder_1391":{"entryPoint":2791,"id":1391,"parameterSlots":3,"returnSlots":0},"@functionCallWithValue_708":{"entryPoint":4762,"id":708,"parameterSlots":4,"returnSlots":1},"@functionCall_644":{"entryPoint":4739,"id":644,"parameterSlots":3,"returnSlots":1},"@getOrder_1153":{"entryPoint":null,"id":1153,"parameterSlots":1,"returnSlots":10},"@isContract_572":{"entryPoint":null,"id":572,"parameterSlots":1,"returnSlots":1},"@isWorkerWallet_912":{"entryPoint":null,"id":912,"parameterSlots":0,"returnSlots":0},"@orders_904":{"entryPoint":null,"id":904,"parameterSlots":0,"returnSlots":0},"@refundOrder_1490":{"entryPoint":823,"id":1490,"parameterSlots":1,"returnSlots":0},"@registerWorkerWallet_1098":{"entryPoint":1427,"id":1098,"parameterSlots":1,"returnSlots":0},"@safeTransferFrom_238":{"entryPoint":4464,"id":238,"parameterSlots":4,"returnSlots":0},"@safeTransfer_211":{"entryPoint":4365,"id":211,"parameterSlots":3,"returnSlots":0},"@usedSecrets_908":{"entryPoint":null,"id":908,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_839":{"entryPoint":4981,"id":839,"parameterSlots":4,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5185,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":5354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32":{"entryPoint":5221,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5422,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":5139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint256t_bytes32":{"entryPoint":5310,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__to_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5492,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":11,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_101deeb84a7b30c3ba1b40b0f7f4c505ac09a1a50e6d9ef928905ad230187381__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_22a9a99eda58e74c6eba1e99e395e307fd14f51f225afd0fed99c1a0493e28e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_29a9499b24c7c1c30de658e39e1b3b85bfcb2ce57b413521c2a3cb2388c5d10e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_890a6771b112b68c8156f7e98f853dfb4045cf1cc9f5289e3c6a09bc0e92fbd6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9235c93776d67cf588408e5134192cf89ff8ca3094db508a3dc1361854cb73d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2f4bfb2dcf7e06902cf8f2c0c97f84cc4c3e789bd0a5ba2698f8afbe21430ae__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c1d924f126c3222497ebba66a9b4321d9b6a8b8b39b3938bb6a4a6dbe0bdc4e0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eaa3ec15dceb626e10a70b0d9e8ba2711073f6106230fded9f2d7cf060f5b71d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5383,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5456,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":5164,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15811:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:11","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:11"},"nodeType":"YulFunctionCall","src":"132:12:11"},"nodeType":"YulExpressionStatement","src":"132:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:11"},"nodeType":"YulFunctionCall","src":"101:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:11"},"nodeType":"YulFunctionCall","src":"97:32:11"},"nodeType":"YulIf","src":"94:52:11"},{"nodeType":"YulAssignment","src":"155:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:11"},"nodeType":"YulFunctionCall","src":"165:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:11"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:11","type":""}],"src":"14:180:11"},{"body":{"nodeType":"YulBlock","src":"244:86:11","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"267:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"278:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"293:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"298:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"289:3:11"},"nodeType":"YulFunctionCall","src":"289:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"302:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"285:3:11"},"nodeType":"YulFunctionCall","src":"285:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"274:3:11"},"nodeType":"YulFunctionCall","src":"274:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"264:2:11"},"nodeType":"YulFunctionCall","src":"264:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"257:6:11"},"nodeType":"YulFunctionCall","src":"257:50:11"},"nodeType":"YulIf","src":"254:70:11"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"233:5:11","type":""}],"src":"199:131:11"},{"body":{"nodeType":"YulBlock","src":"405:177:11","statements":[{"body":{"nodeType":"YulBlock","src":"451:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"460:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"463:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"453:6:11"},"nodeType":"YulFunctionCall","src":"453:12:11"},"nodeType":"YulExpressionStatement","src":"453:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"426:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"435:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"422:3:11"},"nodeType":"YulFunctionCall","src":"422:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"447:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"418:3:11"},"nodeType":"YulFunctionCall","src":"418:32:11"},"nodeType":"YulIf","src":"415:52:11"},{"nodeType":"YulVariableDeclaration","src":"476:36:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"502:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"489:12:11"},"nodeType":"YulFunctionCall","src":"489:23:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"480:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"546:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"521:24:11"},"nodeType":"YulFunctionCall","src":"521:31:11"},"nodeType":"YulExpressionStatement","src":"521:31:11"},{"nodeType":"YulAssignment","src":"561:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"571:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"561:6:11"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"371:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"382:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"394:6:11","type":""}],"src":"335:247:11"},{"body":{"nodeType":"YulBlock","src":"682:92:11","statements":[{"nodeType":"YulAssignment","src":"692:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"704:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"715:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"700:3:11"},"nodeType":"YulFunctionCall","src":"700:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"692:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"734:9:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"759:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"752:6:11"},"nodeType":"YulFunctionCall","src":"752:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"745:6:11"},"nodeType":"YulFunctionCall","src":"745:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"727:6:11"},"nodeType":"YulFunctionCall","src":"727:41:11"},"nodeType":"YulExpressionStatement","src":"727:41:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"651:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"662:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"673:4:11","type":""}],"src":"587:187:11"},{"body":{"nodeType":"YulBlock","src":"1120:576:11","statements":[{"nodeType":"YulAssignment","src":"1130:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1142:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1153:3:11","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1138:3:11"},"nodeType":"YulFunctionCall","src":"1138:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1130:4:11"}]},{"nodeType":"YulVariableDeclaration","src":"1166:29:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1184:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1189:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1180:3:11"},"nodeType":"YulFunctionCall","src":"1180:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"1193:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1176:3:11"},"nodeType":"YulFunctionCall","src":"1176:19:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1170:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1211:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1226:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1234:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1222:3:11"},"nodeType":"YulFunctionCall","src":"1222:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1204:6:11"},"nodeType":"YulFunctionCall","src":"1204:34:11"},"nodeType":"YulExpressionStatement","src":"1204:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1258:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1269:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1254:3:11"},"nodeType":"YulFunctionCall","src":"1254:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1278:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1286:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1274:3:11"},"nodeType":"YulFunctionCall","src":"1274:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1247:6:11"},"nodeType":"YulFunctionCall","src":"1247:43:11"},"nodeType":"YulExpressionStatement","src":"1247:43:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1321:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1306:3:11"},"nodeType":"YulFunctionCall","src":"1306:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"1326:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1299:6:11"},"nodeType":"YulFunctionCall","src":"1299:34:11"},"nodeType":"YulExpressionStatement","src":"1299:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1353:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1364:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1349:3:11"},"nodeType":"YulFunctionCall","src":"1349:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"1369:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:11"},"nodeType":"YulFunctionCall","src":"1342:34:11"},"nodeType":"YulExpressionStatement","src":"1342:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1396:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1407:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1392:3:11"},"nodeType":"YulFunctionCall","src":"1392:19:11"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1417:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1425:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1413:3:11"},"nodeType":"YulFunctionCall","src":"1413:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1385:6:11"},"nodeType":"YulFunctionCall","src":"1385:44:11"},"nodeType":"YulExpressionStatement","src":"1385:44:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1449:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1460:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1445:3:11"},"nodeType":"YulFunctionCall","src":"1445:19:11"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"1470:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1478:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1466:3:11"},"nodeType":"YulFunctionCall","src":"1466:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1438:6:11"},"nodeType":"YulFunctionCall","src":"1438:44:11"},"nodeType":"YulExpressionStatement","src":"1438:44:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1502:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1513:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1498:3:11"},"nodeType":"YulFunctionCall","src":"1498:19:11"},{"name":"value6","nodeType":"YulIdentifier","src":"1519:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1491:6:11"},"nodeType":"YulFunctionCall","src":"1491:35:11"},"nodeType":"YulExpressionStatement","src":"1491:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1546:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1557:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1542:3:11"},"nodeType":"YulFunctionCall","src":"1542:19:11"},{"name":"value7","nodeType":"YulIdentifier","src":"1563:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1535:6:11"},"nodeType":"YulFunctionCall","src":"1535:35:11"},"nodeType":"YulExpressionStatement","src":"1535:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1590:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1601:3:11","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1586:3:11"},"nodeType":"YulFunctionCall","src":"1586:19:11"},{"arguments":[{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"1621:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1614:6:11"},"nodeType":"YulFunctionCall","src":"1614:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1607:6:11"},"nodeType":"YulFunctionCall","src":"1607:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1579:6:11"},"nodeType":"YulFunctionCall","src":"1579:51:11"},"nodeType":"YulExpressionStatement","src":"1579:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1650:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1661:3:11","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1646:3:11"},"nodeType":"YulFunctionCall","src":"1646:19:11"},{"arguments":[{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"1681:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1674:6:11"},"nodeType":"YulFunctionCall","src":"1674:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1667:6:11"},"nodeType":"YulFunctionCall","src":"1667:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1639:6:11"},"nodeType":"YulFunctionCall","src":"1639:51:11"},"nodeType":"YulExpressionStatement","src":"1639:51:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1017:9:11","type":""},{"name":"value9","nodeType":"YulTypedName","src":"1028:6:11","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1036:6:11","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1044:6:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1052:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1060:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1068:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1076:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1084:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1092:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1100:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1111:4:11","type":""}],"src":"779:917:11"},{"body":{"nodeType":"YulBlock","src":"1856:508:11","statements":[{"body":{"nodeType":"YulBlock","src":"1903:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1915:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1905:6:11"},"nodeType":"YulFunctionCall","src":"1905:12:11"},"nodeType":"YulExpressionStatement","src":"1905:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1877:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1886:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1873:3:11"},"nodeType":"YulFunctionCall","src":"1873:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1898:3:11","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1869:3:11"},"nodeType":"YulFunctionCall","src":"1869:33:11"},"nodeType":"YulIf","src":"1866:53:11"},{"nodeType":"YulVariableDeclaration","src":"1928:36:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1954:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1941:12:11"},"nodeType":"YulFunctionCall","src":"1941:23:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1932:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1998:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1973:24:11"},"nodeType":"YulFunctionCall","src":"1973:31:11"},"nodeType":"YulExpressionStatement","src":"1973:31:11"},{"nodeType":"YulAssignment","src":"2013:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2023:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2013:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"2037:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2069:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2080:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2065:3:11"},"nodeType":"YulFunctionCall","src":"2065:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2052:12:11"},"nodeType":"YulFunctionCall","src":"2052:32:11"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2041:7:11","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2118:7:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2093:24:11"},"nodeType":"YulFunctionCall","src":"2093:33:11"},"nodeType":"YulExpressionStatement","src":"2093:33:11"},{"nodeType":"YulAssignment","src":"2135:17:11","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2145:7:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2135:6:11"}]},{"nodeType":"YulAssignment","src":"2161:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2188:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2199:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:11"},"nodeType":"YulFunctionCall","src":"2184:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2171:12:11"},"nodeType":"YulFunctionCall","src":"2171:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2161:6:11"}]},{"nodeType":"YulAssignment","src":"2212:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2239:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2250:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2235:3:11"},"nodeType":"YulFunctionCall","src":"2235:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2222:12:11"},"nodeType":"YulFunctionCall","src":"2222:32:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2212:6:11"}]},{"nodeType":"YulAssignment","src":"2263:43:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2290:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2301:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2286:3:11"},"nodeType":"YulFunctionCall","src":"2286:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2273:12:11"},"nodeType":"YulFunctionCall","src":"2273:33:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2263:6:11"}]},{"nodeType":"YulAssignment","src":"2315:43:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2342:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2353:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2338:3:11"},"nodeType":"YulFunctionCall","src":"2338:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2325:12:11"},"nodeType":"YulFunctionCall","src":"2325:33:11"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2315:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1782:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1793:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1805:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1813:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1821:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1829:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1837:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1845:6:11","type":""}],"src":"1701:663:11"},{"body":{"nodeType":"YulBlock","src":"2470:76:11","statements":[{"nodeType":"YulAssignment","src":"2480:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2492:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2503:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2488:3:11"},"nodeType":"YulFunctionCall","src":"2488:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2480:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2522:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"2533:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2515:6:11"},"nodeType":"YulFunctionCall","src":"2515:25:11"},"nodeType":"YulExpressionStatement","src":"2515:25:11"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2439:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2450:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2461:4:11","type":""}],"src":"2369:177:11"},{"body":{"nodeType":"YulBlock","src":"2652:102:11","statements":[{"nodeType":"YulAssignment","src":"2662:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2674:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2685:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2670:3:11"},"nodeType":"YulFunctionCall","src":"2670:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2662:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2704:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2719:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2735:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2740:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2731:3:11"},"nodeType":"YulFunctionCall","src":"2731:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"2744:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2727:3:11"},"nodeType":"YulFunctionCall","src":"2727:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2715:3:11"},"nodeType":"YulFunctionCall","src":"2715:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2697:6:11"},"nodeType":"YulFunctionCall","src":"2697:51:11"},"nodeType":"YulExpressionStatement","src":"2697:51:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2621:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2632:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2643:4:11","type":""}],"src":"2551:203:11"},{"body":{"nodeType":"YulBlock","src":"2863:212:11","statements":[{"body":{"nodeType":"YulBlock","src":"2909:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2918:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2921:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2911:6:11"},"nodeType":"YulFunctionCall","src":"2911:12:11"},"nodeType":"YulExpressionStatement","src":"2911:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2884:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2893:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2880:3:11"},"nodeType":"YulFunctionCall","src":"2880:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2905:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2876:3:11"},"nodeType":"YulFunctionCall","src":"2876:32:11"},"nodeType":"YulIf","src":"2873:52:11"},{"nodeType":"YulAssignment","src":"2934:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2957:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2944:12:11"},"nodeType":"YulFunctionCall","src":"2944:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2934:6:11"}]},{"nodeType":"YulAssignment","src":"2976:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3003:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3014:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2999:3:11"},"nodeType":"YulFunctionCall","src":"2999:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2986:12:11"},"nodeType":"YulFunctionCall","src":"2986:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2976:6:11"}]},{"nodeType":"YulAssignment","src":"3027:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3054:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3065:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3050:3:11"},"nodeType":"YulFunctionCall","src":"3050:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3037:12:11"},"nodeType":"YulFunctionCall","src":"3037:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3027:6:11"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2813:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2824:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2836:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2844:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2852:6:11","type":""}],"src":"2759:316:11"},{"body":{"nodeType":"YulBlock","src":"3254:165:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3271:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3282:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3264:6:11"},"nodeType":"YulFunctionCall","src":"3264:21:11"},"nodeType":"YulExpressionStatement","src":"3264:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3305:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3316:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3301:3:11"},"nodeType":"YulFunctionCall","src":"3301:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"3321:2:11","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3294:6:11"},"nodeType":"YulFunctionCall","src":"3294:30:11"},"nodeType":"YulExpressionStatement","src":"3294:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:11"},"nodeType":"YulFunctionCall","src":"3340:18:11"},{"hexValue":"4f72646572206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"3360:17:11","type":"","value":"Order not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3333:6:11"},"nodeType":"YulFunctionCall","src":"3333:45:11"},"nodeType":"YulExpressionStatement","src":"3333:45:11"},{"nodeType":"YulAssignment","src":"3387:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3399:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3410:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3395:3:11"},"nodeType":"YulFunctionCall","src":"3395:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3387:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3231:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3245:4:11","type":""}],"src":"3080:339:11"},{"body":{"nodeType":"YulBlock","src":"3598:173:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3615:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3626:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3608:6:11"},"nodeType":"YulFunctionCall","src":"3608:21:11"},"nodeType":"YulExpressionStatement","src":"3608:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3649:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3660:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3645:3:11"},"nodeType":"YulFunctionCall","src":"3645:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"3665:2:11","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3638:6:11"},"nodeType":"YulFunctionCall","src":"3638:30:11"},"nodeType":"YulExpressionStatement","src":"3638:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3688:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3699:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3684:3:11"},"nodeType":"YulFunctionCall","src":"3684:18:11"},{"hexValue":"4f7264657220616c72656164792066756c66696c6c6564","kind":"string","nodeType":"YulLiteral","src":"3704:25:11","type":"","value":"Order already fulfilled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3677:6:11"},"nodeType":"YulFunctionCall","src":"3677:53:11"},"nodeType":"YulExpressionStatement","src":"3677:53:11"},{"nodeType":"YulAssignment","src":"3739:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3751:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3762:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3747:3:11"},"nodeType":"YulFunctionCall","src":"3747:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3739:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3575:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3589:4:11","type":""}],"src":"3424:347:11"},{"body":{"nodeType":"YulBlock","src":"3950:166:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3967:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3978:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3960:6:11"},"nodeType":"YulFunctionCall","src":"3960:21:11"},"nodeType":"YulExpressionStatement","src":"3960:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4001:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4012:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3997:3:11"},"nodeType":"YulFunctionCall","src":"3997:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"4017:2:11","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3990:6:11"},"nodeType":"YulFunctionCall","src":"3990:30:11"},"nodeType":"YulExpressionStatement","src":"3990:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4040:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4051:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:11"},"nodeType":"YulFunctionCall","src":"4036:18:11"},{"hexValue":"416c726561647920726566756e646564","kind":"string","nodeType":"YulLiteral","src":"4056:18:11","type":"","value":"Already refunded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4029:6:11"},"nodeType":"YulFunctionCall","src":"4029:46:11"},"nodeType":"YulExpressionStatement","src":"4029:46:11"},{"nodeType":"YulAssignment","src":"4084:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4096:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4107:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4092:3:11"},"nodeType":"YulFunctionCall","src":"4092:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4084:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3927:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3941:4:11","type":""}],"src":"3776:340:11"},{"body":{"nodeType":"YulBlock","src":"4295:170:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4312:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4323:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4305:6:11"},"nodeType":"YulFunctionCall","src":"4305:21:11"},"nodeType":"YulExpressionStatement","src":"4305:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4346:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4357:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4342:3:11"},"nodeType":"YulFunctionCall","src":"4342:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"4362:2:11","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4335:6:11"},"nodeType":"YulFunctionCall","src":"4335:30:11"},"nodeType":"YulExpressionStatement","src":"4335:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4385:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4396:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4381:3:11"},"nodeType":"YulFunctionCall","src":"4381:18:11"},{"hexValue":"446561646c696e65206e6f742072656163686564","kind":"string","nodeType":"YulLiteral","src":"4401:22:11","type":"","value":"Deadline not reached"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4374:6:11"},"nodeType":"YulFunctionCall","src":"4374:50:11"},"nodeType":"YulExpressionStatement","src":"4374:50:11"},{"nodeType":"YulAssignment","src":"4433:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4445:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4456:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4441:3:11"},"nodeType":"YulFunctionCall","src":"4441:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4433:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4272:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4286:4:11","type":""}],"src":"4121:344:11"},{"body":{"nodeType":"YulBlock","src":"4644:169:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4661:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4672:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4654:6:11"},"nodeType":"YulFunctionCall","src":"4654:21:11"},"nodeType":"YulExpressionStatement","src":"4654:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4695:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4706:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4691:3:11"},"nodeType":"YulFunctionCall","src":"4691:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"4711:2:11","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4684:6:11"},"nodeType":"YulFunctionCall","src":"4684:30:11"},"nodeType":"YulExpressionStatement","src":"4684:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4734:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4745:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4730:3:11"},"nodeType":"YulFunctionCall","src":"4730:18:11"},{"hexValue":"4e6f74206f7264657220696e69746961746f72","kind":"string","nodeType":"YulLiteral","src":"4750:21:11","type":"","value":"Not order initiator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4723:6:11"},"nodeType":"YulFunctionCall","src":"4723:49:11"},"nodeType":"YulExpressionStatement","src":"4723:49:11"},{"nodeType":"YulAssignment","src":"4781:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4793:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4804:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:11"},"nodeType":"YulFunctionCall","src":"4789:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4781:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_101deeb84a7b30c3ba1b40b0f7f4c505ac09a1a50e6d9ef928905ad230187381__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4621:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4635:4:11","type":""}],"src":"4470:343:11"},{"body":{"nodeType":"YulBlock","src":"4992:168:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5009:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5020:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5002:6:11"},"nodeType":"YulFunctionCall","src":"5002:21:11"},"nodeType":"YulExpressionStatement","src":"5002:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5043:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5054:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5039:3:11"},"nodeType":"YulFunctionCall","src":"5039:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"5059:2:11","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5032:6:11"},"nodeType":"YulFunctionCall","src":"5032:30:11"},"nodeType":"YulExpressionStatement","src":"5032:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5082:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5093:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5078:3:11"},"nodeType":"YulFunctionCall","src":"5078:18:11"},{"hexValue":"416c72656164792072656769737465726564","kind":"string","nodeType":"YulLiteral","src":"5098:20:11","type":"","value":"Already registered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5071:6:11"},"nodeType":"YulFunctionCall","src":"5071:48:11"},"nodeType":"YulExpressionStatement","src":"5071:48:11"},{"nodeType":"YulAssignment","src":"5128:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5140:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5151:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5136:3:11"},"nodeType":"YulFunctionCall","src":"5136:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5128:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4969:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4983:4:11","type":""}],"src":"4818:342:11"},{"body":{"nodeType":"YulBlock","src":"5246:170:11","statements":[{"body":{"nodeType":"YulBlock","src":"5292:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5301:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5304:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5294:6:11"},"nodeType":"YulFunctionCall","src":"5294:12:11"},"nodeType":"YulExpressionStatement","src":"5294:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5267:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5276:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5263:3:11"},"nodeType":"YulFunctionCall","src":"5263:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5288:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5259:3:11"},"nodeType":"YulFunctionCall","src":"5259:32:11"},"nodeType":"YulIf","src":"5256:52:11"},{"nodeType":"YulVariableDeclaration","src":"5317:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5330:5:11"},"nodeType":"YulFunctionCall","src":"5330:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5321:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5380:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5355:24:11"},"nodeType":"YulFunctionCall","src":"5355:31:11"},"nodeType":"YulExpressionStatement","src":"5355:31:11"},{"nodeType":"YulAssignment","src":"5395:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"5405:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5395:6:11"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5212:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5223:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5235:6:11","type":""}],"src":"5165:251:11"},{"body":{"nodeType":"YulBlock","src":"5595:158:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5612:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5605:6:11"},"nodeType":"YulFunctionCall","src":"5605:21:11"},"nodeType":"YulExpressionStatement","src":"5605:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5646:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5657:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5642:3:11"},"nodeType":"YulFunctionCall","src":"5642:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"5662:1:11","type":"","value":"9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5635:6:11"},"nodeType":"YulFunctionCall","src":"5635:29:11"},"nodeType":"YulExpressionStatement","src":"5635:29:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5684:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5695:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5680:3:11"},"nodeType":"YulFunctionCall","src":"5680:18:11"},{"hexValue":"4e6f74206f776e6572","kind":"string","nodeType":"YulLiteral","src":"5700:11:11","type":"","value":"Not owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5673:6:11"},"nodeType":"YulFunctionCall","src":"5673:39:11"},"nodeType":"YulExpressionStatement","src":"5673:39:11"},{"nodeType":"YulAssignment","src":"5721:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5733:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5744:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5729:3:11"},"nodeType":"YulFunctionCall","src":"5729:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5721:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5572:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5586:4:11","type":""}],"src":"5421:332:11"},{"body":{"nodeType":"YulBlock","src":"5932:161:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5949:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5960:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5942:6:11"},"nodeType":"YulFunctionCall","src":"5942:21:11"},"nodeType":"YulExpressionStatement","src":"5942:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5983:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5994:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5979:3:11"},"nodeType":"YulFunctionCall","src":"5979:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"5999:2:11","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5972:6:11"},"nodeType":"YulFunctionCall","src":"5972:30:11"},"nodeType":"YulExpressionStatement","src":"5972:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6022:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6033:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6018:3:11"},"nodeType":"YulFunctionCall","src":"6018:18:11"},{"hexValue":"5a65726f20616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"6038:13:11","type":"","value":"Zero amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6011:6:11"},"nodeType":"YulFunctionCall","src":"6011:41:11"},"nodeType":"YulExpressionStatement","src":"6011:41:11"},{"nodeType":"YulAssignment","src":"6061:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6073:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6084:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6069:3:11"},"nodeType":"YulFunctionCall","src":"6069:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6061:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5909:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5923:4:11","type":""}],"src":"5758:335:11"},{"body":{"nodeType":"YulBlock","src":"6272:166:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6289:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6300:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6282:6:11"},"nodeType":"YulFunctionCall","src":"6282:21:11"},"nodeType":"YulExpressionStatement","src":"6282:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6323:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6334:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6319:3:11"},"nodeType":"YulFunctionCall","src":"6319:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"6339:2:11","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6312:6:11"},"nodeType":"YulFunctionCall","src":"6312:30:11"},"nodeType":"YulExpressionStatement","src":"6312:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6362:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6373:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6358:3:11"},"nodeType":"YulFunctionCall","src":"6358:18:11"},{"hexValue":"496e76616c696420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"6378:18:11","type":"","value":"Invalid deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6351:6:11"},"nodeType":"YulFunctionCall","src":"6351:46:11"},"nodeType":"YulExpressionStatement","src":"6351:46:11"},{"nodeType":"YulAssignment","src":"6406:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6418:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6429:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6414:3:11"},"nodeType":"YulFunctionCall","src":"6414:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6406:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6249:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6263:4:11","type":""}],"src":"6098:340:11"},{"body":{"nodeType":"YulBlock","src":"6617:169:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6634:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6645:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6627:6:11"},"nodeType":"YulFunctionCall","src":"6627:21:11"},"nodeType":"YulExpressionStatement","src":"6627:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6668:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6679:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6664:3:11"},"nodeType":"YulFunctionCall","src":"6664:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"6684:2:11","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6657:6:11"},"nodeType":"YulFunctionCall","src":"6657:30:11"},"nodeType":"YulExpressionStatement","src":"6657:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6707:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6718:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6703:3:11"},"nodeType":"YulFunctionCall","src":"6703:18:11"},{"hexValue":"496e76616c6964207365637265742068617368","kind":"string","nodeType":"YulLiteral","src":"6723:21:11","type":"","value":"Invalid secret hash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6696:6:11"},"nodeType":"YulFunctionCall","src":"6696:49:11"},"nodeType":"YulExpressionStatement","src":"6696:49:11"},{"nodeType":"YulAssignment","src":"6754:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6766:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6777:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6762:3:11"},"nodeType":"YulFunctionCall","src":"6762:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6754:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_29a9499b24c7c1c30de658e39e1b3b85bfcb2ce57b413521c2a3cb2388c5d10e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6594:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6608:4:11","type":""}],"src":"6443:343:11"},{"body":{"nodeType":"YulBlock","src":"7050:355:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7060:41:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7074:26:11","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7070:3:11"},"nodeType":"YulFunctionCall","src":"7070:31:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7064:2:11","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7117:3:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7130:2:11","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"7134:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7126:3:11"},"nodeType":"YulFunctionCall","src":"7126:15:11"},{"name":"_1","nodeType":"YulIdentifier","src":"7143:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7122:3:11"},"nodeType":"YulFunctionCall","src":"7122:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7110:6:11"},"nodeType":"YulFunctionCall","src":"7110:37:11"},"nodeType":"YulExpressionStatement","src":"7110:37:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7167:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7172:2:11","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7163:3:11"},"nodeType":"YulFunctionCall","src":"7163:12:11"},{"name":"value1","nodeType":"YulIdentifier","src":"7177:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7156:6:11"},"nodeType":"YulFunctionCall","src":"7156:28:11"},"nodeType":"YulExpressionStatement","src":"7156:28:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7204:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7209:2:11","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7200:3:11"},"nodeType":"YulFunctionCall","src":"7200:12:11"},{"name":"value2","nodeType":"YulIdentifier","src":"7214:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7193:6:11"},"nodeType":"YulFunctionCall","src":"7193:28:11"},"nodeType":"YulExpressionStatement","src":"7193:28:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7241:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7246:2:11","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7237:3:11"},"nodeType":"YulFunctionCall","src":"7237:12:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7259:2:11","type":"","value":"96"},{"name":"value3","nodeType":"YulIdentifier","src":"7263:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7255:3:11"},"nodeType":"YulFunctionCall","src":"7255:15:11"},{"name":"_1","nodeType":"YulIdentifier","src":"7272:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7251:3:11"},"nodeType":"YulFunctionCall","src":"7251:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7230:6:11"},"nodeType":"YulFunctionCall","src":"7230:46:11"},"nodeType":"YulExpressionStatement","src":"7230:46:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7296:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7301:3:11","type":"","value":"104"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7292:3:11"},"nodeType":"YulFunctionCall","src":"7292:13:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7315:2:11","type":"","value":"96"},{"name":"value4","nodeType":"YulIdentifier","src":"7319:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7311:3:11"},"nodeType":"YulFunctionCall","src":"7311:15:11"},{"name":"_1","nodeType":"YulIdentifier","src":"7328:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7307:3:11"},"nodeType":"YulFunctionCall","src":"7307:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7285:6:11"},"nodeType":"YulFunctionCall","src":"7285:47:11"},"nodeType":"YulExpressionStatement","src":"7285:47:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7352:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7357:3:11","type":"","value":"124"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7348:3:11"},"nodeType":"YulFunctionCall","src":"7348:13:11"},{"name":"value5","nodeType":"YulIdentifier","src":"7363:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7341:6:11"},"nodeType":"YulFunctionCall","src":"7341:29:11"},"nodeType":"YulExpressionStatement","src":"7341:29:11"},{"nodeType":"YulAssignment","src":"7379:20:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7390:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7395:3:11","type":"","value":"156"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7386:3:11"},"nodeType":"YulFunctionCall","src":"7386:13:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7379:3:11"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__to_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6986:3:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6991:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6999:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7007:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7015:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7023:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7031:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7042:3:11","type":""}],"src":"6791:614:11"},{"body":{"nodeType":"YulBlock","src":"7584:162:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7601:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7612:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7594:6:11"},"nodeType":"YulFunctionCall","src":"7594:21:11"},"nodeType":"YulExpressionStatement","src":"7594:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7635:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7646:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7631:3:11"},"nodeType":"YulFunctionCall","src":"7631:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"7651:2:11","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7624:6:11"},"nodeType":"YulFunctionCall","src":"7624:30:11"},"nodeType":"YulExpressionStatement","src":"7624:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7674:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7685:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7670:3:11"},"nodeType":"YulFunctionCall","src":"7670:18:11"},{"hexValue":"4f7264657220657869737473","kind":"string","nodeType":"YulLiteral","src":"7690:14:11","type":"","value":"Order exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7663:6:11"},"nodeType":"YulFunctionCall","src":"7663:42:11"},"nodeType":"YulExpressionStatement","src":"7663:42:11"},{"nodeType":"YulAssignment","src":"7714:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7726:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7737:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7722:3:11"},"nodeType":"YulFunctionCall","src":"7722:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7714:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c1d924f126c3222497ebba66a9b4321d9b6a8b8b39b3938bb6a4a6dbe0bdc4e0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7561:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7575:4:11","type":""}],"src":"7410:336:11"},{"body":{"nodeType":"YulBlock","src":"7925:170:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7942:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7953:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7935:6:11"},"nodeType":"YulFunctionCall","src":"7935:21:11"},"nodeType":"YulExpressionStatement","src":"7935:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7976:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7987:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7972:3:11"},"nodeType":"YulFunctionCall","src":"7972:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"7992:2:11","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7965:6:11"},"nodeType":"YulFunctionCall","src":"7965:30:11"},"nodeType":"YulExpressionStatement","src":"7965:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8015:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8026:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8011:3:11"},"nodeType":"YulFunctionCall","src":"8011:18:11"},{"hexValue":"496e636f72726563742045544820616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"8031:22:11","type":"","value":"Incorrect ETH amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8004:6:11"},"nodeType":"YulFunctionCall","src":"8004:50:11"},"nodeType":"YulExpressionStatement","src":"8004:50:11"},{"nodeType":"YulAssignment","src":"8063:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8075:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8086:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8071:3:11"},"nodeType":"YulFunctionCall","src":"8071:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8063:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7902:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7916:4:11","type":""}],"src":"7751:344:11"},{"body":{"nodeType":"YulBlock","src":"8313:306:11","statements":[{"nodeType":"YulAssignment","src":"8323:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8335:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8346:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8331:3:11"},"nodeType":"YulFunctionCall","src":"8331:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8323:4:11"}]},{"nodeType":"YulVariableDeclaration","src":"8359:29:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8377:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8382:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8373:3:11"},"nodeType":"YulFunctionCall","src":"8373:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"8386:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8369:3:11"},"nodeType":"YulFunctionCall","src":"8369:19:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8363:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8404:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8419:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"8427:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8415:3:11"},"nodeType":"YulFunctionCall","src":"8415:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8397:6:11"},"nodeType":"YulFunctionCall","src":"8397:34:11"},"nodeType":"YulExpressionStatement","src":"8397:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8451:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8462:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8447:3:11"},"nodeType":"YulFunctionCall","src":"8447:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8471:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"8479:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8467:3:11"},"nodeType":"YulFunctionCall","src":"8467:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8440:6:11"},"nodeType":"YulFunctionCall","src":"8440:43:11"},"nodeType":"YulExpressionStatement","src":"8440:43:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8503:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8514:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8499:3:11"},"nodeType":"YulFunctionCall","src":"8499:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"8519:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8492:6:11"},"nodeType":"YulFunctionCall","src":"8492:34:11"},"nodeType":"YulExpressionStatement","src":"8492:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8546:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8557:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:11"},"nodeType":"YulFunctionCall","src":"8542:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"8562:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8535:6:11"},"nodeType":"YulFunctionCall","src":"8535:34:11"},"nodeType":"YulExpressionStatement","src":"8535:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8589:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8600:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8585:3:11"},"nodeType":"YulFunctionCall","src":"8585:19:11"},{"name":"value4","nodeType":"YulIdentifier","src":"8606:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8578:6:11"},"nodeType":"YulFunctionCall","src":"8578:35:11"},"nodeType":"YulExpressionStatement","src":"8578:35:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8250:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8261:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8269:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8277:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8285:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8293:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8304:4:11","type":""}],"src":"8100:519:11"},{"body":{"nodeType":"YulBlock","src":"8798:168:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8815:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8826:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8808:6:11"},"nodeType":"YulFunctionCall","src":"8808:21:11"},"nodeType":"YulExpressionStatement","src":"8808:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8849:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8860:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8845:3:11"},"nodeType":"YulFunctionCall","src":"8845:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"8865:2:11","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8838:6:11"},"nodeType":"YulFunctionCall","src":"8838:30:11"},"nodeType":"YulExpressionStatement","src":"8838:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8888:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8899:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8884:3:11"},"nodeType":"YulFunctionCall","src":"8884:18:11"},{"hexValue":"4f726465722077617320726566756e646564","kind":"string","nodeType":"YulLiteral","src":"8904:20:11","type":"","value":"Order was refunded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8877:6:11"},"nodeType":"YulFunctionCall","src":"8877:48:11"},"nodeType":"YulExpressionStatement","src":"8877:48:11"},{"nodeType":"YulAssignment","src":"8934:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8946:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8957:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8942:3:11"},"nodeType":"YulFunctionCall","src":"8942:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8934:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_890a6771b112b68c8156f7e98f853dfb4045cf1cc9f5289e3c6a09bc0e92fbd6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8775:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8789:4:11","type":""}],"src":"8624:342:11"},{"body":{"nodeType":"YulBlock","src":"9145:163:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9162:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9173:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9155:6:11"},"nodeType":"YulFunctionCall","src":"9155:21:11"},"nodeType":"YulExpressionStatement","src":"9155:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9196:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9207:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9192:3:11"},"nodeType":"YulFunctionCall","src":"9192:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"9212:2:11","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9185:6:11"},"nodeType":"YulFunctionCall","src":"9185:30:11"},"nodeType":"YulExpressionStatement","src":"9185:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9235:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9246:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9231:3:11"},"nodeType":"YulFunctionCall","src":"9231:18:11"},{"hexValue":"4f726465722065787069726564","kind":"string","nodeType":"YulLiteral","src":"9251:15:11","type":"","value":"Order expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9224:6:11"},"nodeType":"YulFunctionCall","src":"9224:43:11"},"nodeType":"YulExpressionStatement","src":"9224:43:11"},{"nodeType":"YulAssignment","src":"9276:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9288:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9299:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9284:3:11"},"nodeType":"YulFunctionCall","src":"9284:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9276:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2f4bfb2dcf7e06902cf8f2c0c97f84cc4c3e789bd0a5ba2698f8afbe21430ae__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9122:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9136:4:11","type":""}],"src":"8971:337:11"},{"body":{"nodeType":"YulBlock","src":"9432:63:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9449:3:11"},{"name":"value0","nodeType":"YulIdentifier","src":"9454:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9442:6:11"},"nodeType":"YulFunctionCall","src":"9442:19:11"},"nodeType":"YulExpressionStatement","src":"9442:19:11"},{"nodeType":"YulAssignment","src":"9470:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9481:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9486:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9477:3:11"},"nodeType":"YulFunctionCall","src":"9477:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9470:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9408:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9413:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9424:3:11","type":""}],"src":"9313:182:11"},{"body":{"nodeType":"YulBlock","src":"9674:164:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9691:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9702:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9684:6:11"},"nodeType":"YulFunctionCall","src":"9684:21:11"},"nodeType":"YulExpressionStatement","src":"9684:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9725:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9736:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9721:3:11"},"nodeType":"YulFunctionCall","src":"9721:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"9741:2:11","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9714:6:11"},"nodeType":"YulFunctionCall","src":"9714:30:11"},"nodeType":"YulExpressionStatement","src":"9714:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9764:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9775:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9760:3:11"},"nodeType":"YulFunctionCall","src":"9760:18:11"},{"hexValue":"496e76616c696420736563726574","kind":"string","nodeType":"YulLiteral","src":"9780:16:11","type":"","value":"Invalid secret"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9753:6:11"},"nodeType":"YulFunctionCall","src":"9753:44:11"},"nodeType":"YulExpressionStatement","src":"9753:44:11"},{"nodeType":"YulAssignment","src":"9806:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9818:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9829:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9814:3:11"},"nodeType":"YulFunctionCall","src":"9814:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9806:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_22a9a99eda58e74c6eba1e99e395e307fd14f51f225afd0fed99c1a0493e28e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9651:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9665:4:11","type":""}],"src":"9500:338:11"},{"body":{"nodeType":"YulBlock","src":"10017:169:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10034:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10045:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10027:6:11"},"nodeType":"YulFunctionCall","src":"10027:21:11"},"nodeType":"YulExpressionStatement","src":"10027:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10068:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10079:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10064:3:11"},"nodeType":"YulFunctionCall","src":"10064:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"10084:2:11","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10057:6:11"},"nodeType":"YulFunctionCall","src":"10057:30:11"},"nodeType":"YulExpressionStatement","src":"10057:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10107:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10118:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10103:3:11"},"nodeType":"YulFunctionCall","src":"10103:18:11"},{"hexValue":"53656372657420616c72656164792075736564","kind":"string","nodeType":"YulLiteral","src":"10123:21:11","type":"","value":"Secret already used"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10096:6:11"},"nodeType":"YulFunctionCall","src":"10096:49:11"},"nodeType":"YulExpressionStatement","src":"10096:49:11"},{"nodeType":"YulAssignment","src":"10154:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10166:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10177:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10162:3:11"},"nodeType":"YulFunctionCall","src":"10162:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10154:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_eaa3ec15dceb626e10a70b0d9e8ba2711073f6106230fded9f2d7cf060f5b71d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9994:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10008:4:11","type":""}],"src":"9843:343:11"},{"body":{"nodeType":"YulBlock","src":"10365:176:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10382:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10393:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10375:6:11"},"nodeType":"YulFunctionCall","src":"10375:21:11"},"nodeType":"YulExpressionStatement","src":"10375:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10416:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10427:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10412:3:11"},"nodeType":"YulFunctionCall","src":"10412:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"10432:2:11","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10405:6:11"},"nodeType":"YulFunctionCall","src":"10405:30:11"},"nodeType":"YulExpressionStatement","src":"10405:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10455:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10466:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10451:3:11"},"nodeType":"YulFunctionCall","src":"10451:18:11"},{"hexValue":"496e73756666696369656e74206f757470757420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"10471:28:11","type":"","value":"Insufficient output amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10444:6:11"},"nodeType":"YulFunctionCall","src":"10444:56:11"},"nodeType":"YulExpressionStatement","src":"10444:56:11"},{"nodeType":"YulAssignment","src":"10509:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10521:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10532:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10517:3:11"},"nodeType":"YulFunctionCall","src":"10517:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10509:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10342:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10356:4:11","type":""}],"src":"10191:350:11"},{"body":{"nodeType":"YulBlock","src":"10720:173:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10737:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10748:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10730:6:11"},"nodeType":"YulFunctionCall","src":"10730:21:11"},"nodeType":"YulExpressionStatement","src":"10730:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10771:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10782:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10767:3:11"},"nodeType":"YulFunctionCall","src":"10767:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"10787:2:11","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10760:6:11"},"nodeType":"YulFunctionCall","src":"10760:30:11"},"nodeType":"YulExpressionStatement","src":"10760:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10810:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10821:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10806:3:11"},"nodeType":"YulFunctionCall","src":"10806:18:11"},{"hexValue":"4e6f7420776f726b65722077616c6c6574206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10826:25:11","type":"","value":"Not worker wallet owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10799:6:11"},"nodeType":"YulFunctionCall","src":"10799:53:11"},"nodeType":"YulExpressionStatement","src":"10799:53:11"},{"nodeType":"YulAssignment","src":"10861:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10873:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10884:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10869:3:11"},"nodeType":"YulFunctionCall","src":"10869:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10861:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9235c93776d67cf588408e5134192cf89ff8ca3094db508a3dc1361854cb73d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10697:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10711:4:11","type":""}],"src":"10546:347:11"},{"body":{"nodeType":"YulBlock","src":"11072:174:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11089:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11100:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11082:6:11"},"nodeType":"YulFunctionCall","src":"11082:21:11"},"nodeType":"YulExpressionStatement","src":"11082:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11123:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11134:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11119:3:11"},"nodeType":"YulFunctionCall","src":"11119:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"11139:2:11","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11112:6:11"},"nodeType":"YulFunctionCall","src":"11112:30:11"},"nodeType":"YulExpressionStatement","src":"11112:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11162:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11173:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11158:3:11"},"nodeType":"YulFunctionCall","src":"11158:18:11"},{"hexValue":"496e73756666696369656e74204554482062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"11178:26:11","type":"","value":"Insufficient ETH balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11151:6:11"},"nodeType":"YulFunctionCall","src":"11151:54:11"},"nodeType":"YulExpressionStatement","src":"11151:54:11"},{"nodeType":"YulAssignment","src":"11214:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11226:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11237:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11222:3:11"},"nodeType":"YulFunctionCall","src":"11222:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11214:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11049:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11063:4:11","type":""}],"src":"10898:348:11"},{"body":{"nodeType":"YulBlock","src":"11442:14:11","statements":[{"nodeType":"YulAssignment","src":"11444:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"11451:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11444:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11426:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11434:3:11","type":""}],"src":"11251:205:11"},{"body":{"nodeType":"YulBlock","src":"11635:169:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11652:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11663:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11645:6:11"},"nodeType":"YulFunctionCall","src":"11645:21:11"},"nodeType":"YulExpressionStatement","src":"11645:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11686:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11697:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11682:3:11"},"nodeType":"YulFunctionCall","src":"11682:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"11702:2:11","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11675:6:11"},"nodeType":"YulFunctionCall","src":"11675:30:11"},"nodeType":"YulExpressionStatement","src":"11675:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11725:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11736:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11721:3:11"},"nodeType":"YulFunctionCall","src":"11721:18:11"},{"hexValue":"455448207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"11741:21:11","type":"","value":"ETH transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11714:6:11"},"nodeType":"YulFunctionCall","src":"11714:49:11"},"nodeType":"YulExpressionStatement","src":"11714:49:11"},{"nodeType":"YulAssignment","src":"11772:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11784:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11795:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11780:3:11"},"nodeType":"YulFunctionCall","src":"11780:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11772:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11612:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11626:4:11","type":""}],"src":"11461:343:11"},{"body":{"nodeType":"YulBlock","src":"11983:171:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12000:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12011:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11993:6:11"},"nodeType":"YulFunctionCall","src":"11993:21:11"},"nodeType":"YulExpressionStatement","src":"11993:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12034:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12045:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12030:3:11"},"nodeType":"YulFunctionCall","src":"12030:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"12050:2:11","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12023:6:11"},"nodeType":"YulFunctionCall","src":"12023:30:11"},"nodeType":"YulExpressionStatement","src":"12023:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12073:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12084:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12069:3:11"},"nodeType":"YulFunctionCall","src":"12069:18:11"},{"hexValue":"496e73756666696369656e74204554482073656e74","kind":"string","nodeType":"YulLiteral","src":"12089:23:11","type":"","value":"Insufficient ETH sent"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12062:6:11"},"nodeType":"YulFunctionCall","src":"12062:51:11"},"nodeType":"YulExpressionStatement","src":"12062:51:11"},{"nodeType":"YulAssignment","src":"12122:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12134:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12145:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12130:3:11"},"nodeType":"YulFunctionCall","src":"12130:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12122:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11960:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11974:4:11","type":""}],"src":"11809:345:11"},{"body":{"nodeType":"YulBlock","src":"12208:176:11","statements":[{"nodeType":"YulAssignment","src":"12218:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12230:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"12233:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12226:3:11"},"nodeType":"YulFunctionCall","src":"12226:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"12218:4:11"}]},{"body":{"nodeType":"YulBlock","src":"12267:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12288:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12295:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12300:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12291:3:11"},"nodeType":"YulFunctionCall","src":"12291:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12281:6:11"},"nodeType":"YulFunctionCall","src":"12281:31:11"},"nodeType":"YulExpressionStatement","src":"12281:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12332:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12335:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12325:6:11"},"nodeType":"YulFunctionCall","src":"12325:15:11"},"nodeType":"YulExpressionStatement","src":"12325:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12360:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12363:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12353:6:11"},"nodeType":"YulFunctionCall","src":"12353:15:11"},"nodeType":"YulExpressionStatement","src":"12353:15:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"12250:4:11"},{"name":"x","nodeType":"YulIdentifier","src":"12256:1:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12247:2:11"},"nodeType":"YulFunctionCall","src":"12247:11:11"},"nodeType":"YulIf","src":"12244:134:11"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12190:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"12193:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"12199:4:11","type":""}],"src":"12159:225:11"},{"body":{"nodeType":"YulBlock","src":"12563:181:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12580:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12591:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12573:6:11"},"nodeType":"YulFunctionCall","src":"12573:21:11"},"nodeType":"YulExpressionStatement","src":"12573:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12614:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12625:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12610:3:11"},"nodeType":"YulFunctionCall","src":"12610:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"12630:2:11","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12603:6:11"},"nodeType":"YulFunctionCall","src":"12603:30:11"},"nodeType":"YulExpressionStatement","src":"12603:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12653:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12664:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12649:3:11"},"nodeType":"YulFunctionCall","src":"12649:18:11"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"12669:33:11","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12642:6:11"},"nodeType":"YulFunctionCall","src":"12642:61:11"},"nodeType":"YulExpressionStatement","src":"12642:61:11"},{"nodeType":"YulAssignment","src":"12712:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12724:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12735:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12720:3:11"},"nodeType":"YulFunctionCall","src":"12720:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12712:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12540:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12554:4:11","type":""}],"src":"12389:355:11"},{"body":{"nodeType":"YulBlock","src":"12878:145:11","statements":[{"nodeType":"YulAssignment","src":"12888:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12900:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12911:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12896:3:11"},"nodeType":"YulFunctionCall","src":"12896:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12888:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12930:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12945:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12961:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12966:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12957:3:11"},"nodeType":"YulFunctionCall","src":"12957:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"12970:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12953:3:11"},"nodeType":"YulFunctionCall","src":"12953:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12941:3:11"},"nodeType":"YulFunctionCall","src":"12941:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12923:6:11"},"nodeType":"YulFunctionCall","src":"12923:51:11"},"nodeType":"YulExpressionStatement","src":"12923:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12994:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13005:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12990:3:11"},"nodeType":"YulFunctionCall","src":"12990:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"13010:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12983:6:11"},"nodeType":"YulFunctionCall","src":"12983:34:11"},"nodeType":"YulExpressionStatement","src":"12983:34:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12839:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12850:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12858:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12869:4:11","type":""}],"src":"12749:274:11"},{"body":{"nodeType":"YulBlock","src":"13185:218:11","statements":[{"nodeType":"YulAssignment","src":"13195:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13207:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13218:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13203:3:11"},"nodeType":"YulFunctionCall","src":"13203:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13195:4:11"}]},{"nodeType":"YulVariableDeclaration","src":"13230:29:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13248:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13253:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13244:3:11"},"nodeType":"YulFunctionCall","src":"13244:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"13257:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13240:3:11"},"nodeType":"YulFunctionCall","src":"13240:19:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13234:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13275:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13290:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"13298:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13286:3:11"},"nodeType":"YulFunctionCall","src":"13286:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13268:6:11"},"nodeType":"YulFunctionCall","src":"13268:34:11"},"nodeType":"YulExpressionStatement","src":"13268:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13322:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13333:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13318:3:11"},"nodeType":"YulFunctionCall","src":"13318:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13342:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"13350:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13338:3:11"},"nodeType":"YulFunctionCall","src":"13338:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13311:6:11"},"nodeType":"YulFunctionCall","src":"13311:43:11"},"nodeType":"YulExpressionStatement","src":"13311:43:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13374:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13385:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13370:3:11"},"nodeType":"YulFunctionCall","src":"13370:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"13390:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13363:6:11"},"nodeType":"YulFunctionCall","src":"13363:34:11"},"nodeType":"YulExpressionStatement","src":"13363:34:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13138:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13149:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13157:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13165:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13176:4:11","type":""}],"src":"13028:375:11"},{"body":{"nodeType":"YulBlock","src":"13486:199:11","statements":[{"body":{"nodeType":"YulBlock","src":"13532:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13541:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13544:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13534:6:11"},"nodeType":"YulFunctionCall","src":"13534:12:11"},"nodeType":"YulExpressionStatement","src":"13534:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13507:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13516:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13503:3:11"},"nodeType":"YulFunctionCall","src":"13503:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"13528:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13499:3:11"},"nodeType":"YulFunctionCall","src":"13499:32:11"},"nodeType":"YulIf","src":"13496:52:11"},{"nodeType":"YulVariableDeclaration","src":"13557:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13576:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13570:5:11"},"nodeType":"YulFunctionCall","src":"13570:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13561:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"13639:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13648:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13651:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13641:6:11"},"nodeType":"YulFunctionCall","src":"13641:12:11"},"nodeType":"YulExpressionStatement","src":"13641:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13608:5:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13629:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13622:6:11"},"nodeType":"YulFunctionCall","src":"13622:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13615:6:11"},"nodeType":"YulFunctionCall","src":"13615:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13605:2:11"},"nodeType":"YulFunctionCall","src":"13605:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13598:6:11"},"nodeType":"YulFunctionCall","src":"13598:40:11"},"nodeType":"YulIf","src":"13595:60:11"},{"nodeType":"YulAssignment","src":"13664:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"13674:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13664:6:11"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13452:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13463:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13475:6:11","type":""}],"src":"13408:277:11"},{"body":{"nodeType":"YulBlock","src":"13864:232:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13881:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13892:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13874:6:11"},"nodeType":"YulFunctionCall","src":"13874:21:11"},"nodeType":"YulExpressionStatement","src":"13874:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13915:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13926:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13911:3:11"},"nodeType":"YulFunctionCall","src":"13911:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"13931:2:11","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13904:6:11"},"nodeType":"YulFunctionCall","src":"13904:30:11"},"nodeType":"YulExpressionStatement","src":"13904:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13954:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13965:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13950:3:11"},"nodeType":"YulFunctionCall","src":"13950:18:11"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"13970:34:11","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13943:6:11"},"nodeType":"YulFunctionCall","src":"13943:62:11"},"nodeType":"YulExpressionStatement","src":"13943:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14025:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14036:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14021:3:11"},"nodeType":"YulFunctionCall","src":"14021:18:11"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"14041:12:11","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14014:6:11"},"nodeType":"YulFunctionCall","src":"14014:40:11"},"nodeType":"YulExpressionStatement","src":"14014:40:11"},{"nodeType":"YulAssignment","src":"14063:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14075:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14086:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14071:3:11"},"nodeType":"YulFunctionCall","src":"14071:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14063:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13841:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13855:4:11","type":""}],"src":"13690:406:11"},{"body":{"nodeType":"YulBlock","src":"14275:228:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14292:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14303:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14285:6:11"},"nodeType":"YulFunctionCall","src":"14285:21:11"},"nodeType":"YulExpressionStatement","src":"14285:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14326:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14337:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14322:3:11"},"nodeType":"YulFunctionCall","src":"14322:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"14342:2:11","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14315:6:11"},"nodeType":"YulFunctionCall","src":"14315:30:11"},"nodeType":"YulExpressionStatement","src":"14315:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14365:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14376:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14361:3:11"},"nodeType":"YulFunctionCall","src":"14361:18:11"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"14381:34:11","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14354:6:11"},"nodeType":"YulFunctionCall","src":"14354:62:11"},"nodeType":"YulExpressionStatement","src":"14354:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14436:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14447:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14432:3:11"},"nodeType":"YulFunctionCall","src":"14432:18:11"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"14452:8:11","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14425:6:11"},"nodeType":"YulFunctionCall","src":"14425:36:11"},"nodeType":"YulExpressionStatement","src":"14425:36:11"},{"nodeType":"YulAssignment","src":"14470:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14482:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14493:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14478:3:11"},"nodeType":"YulFunctionCall","src":"14478:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14470:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14252:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14266:4:11","type":""}],"src":"14101:402:11"},{"body":{"nodeType":"YulBlock","src":"14574:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14584:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"14593:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14588:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"14653:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14678:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"14683:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14674:3:11"},"nodeType":"YulFunctionCall","src":"14674:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14697:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"14702:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14693:3:11"},"nodeType":"YulFunctionCall","src":"14693:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14687:5:11"},"nodeType":"YulFunctionCall","src":"14687:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14667:6:11"},"nodeType":"YulFunctionCall","src":"14667:39:11"},"nodeType":"YulExpressionStatement","src":"14667:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14614:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"14617:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14611:2:11"},"nodeType":"YulFunctionCall","src":"14611:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14625:19:11","statements":[{"nodeType":"YulAssignment","src":"14627:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14636:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"14639:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14632:3:11"},"nodeType":"YulFunctionCall","src":"14632:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14627:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"14607:3:11","statements":[]},"src":"14603:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14736:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"14741:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14732:3:11"},"nodeType":"YulFunctionCall","src":"14732:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"14750:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14725:6:11"},"nodeType":"YulFunctionCall","src":"14725:27:11"},"nodeType":"YulExpressionStatement","src":"14725:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14552:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"14557:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"14562:6:11","type":""}],"src":"14508:250:11"},{"body":{"nodeType":"YulBlock","src":"14900:150:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14910:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14930:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14924:5:11"},"nodeType":"YulFunctionCall","src":"14924:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14914:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14985:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14993:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14981:3:11"},"nodeType":"YulFunctionCall","src":"14981:17:11"},{"name":"pos","nodeType":"YulIdentifier","src":"15000:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"15005:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14946:34:11"},"nodeType":"YulFunctionCall","src":"14946:66:11"},"nodeType":"YulExpressionStatement","src":"14946:66:11"},{"nodeType":"YulAssignment","src":"15021:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15032:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"15037:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15028:3:11"},"nodeType":"YulFunctionCall","src":"15028:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15021:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14876:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14881:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14892:3:11","type":""}],"src":"14763:287:11"},{"body":{"nodeType":"YulBlock","src":"15229:179:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15246:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15257:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15239:6:11"},"nodeType":"YulFunctionCall","src":"15239:21:11"},"nodeType":"YulExpressionStatement","src":"15239:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15280:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15291:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15276:3:11"},"nodeType":"YulFunctionCall","src":"15276:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"15296:2:11","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15269:6:11"},"nodeType":"YulFunctionCall","src":"15269:30:11"},"nodeType":"YulExpressionStatement","src":"15269:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15319:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15330:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15315:3:11"},"nodeType":"YulFunctionCall","src":"15315:18:11"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"15335:31:11","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15308:6:11"},"nodeType":"YulFunctionCall","src":"15308:59:11"},"nodeType":"YulExpressionStatement","src":"15308:59:11"},{"nodeType":"YulAssignment","src":"15376:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15388:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15399:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15384:3:11"},"nodeType":"YulFunctionCall","src":"15384:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15376:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15206:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15220:4:11","type":""}],"src":"15055:353:11"},{"body":{"nodeType":"YulBlock","src":"15534:275:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15551:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15562:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15544:6:11"},"nodeType":"YulFunctionCall","src":"15544:21:11"},"nodeType":"YulExpressionStatement","src":"15544:21:11"},{"nodeType":"YulVariableDeclaration","src":"15574:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15594:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15588:5:11"},"nodeType":"YulFunctionCall","src":"15588:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15578:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15621:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15632:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15617:3:11"},"nodeType":"YulFunctionCall","src":"15617:18:11"},{"name":"length","nodeType":"YulIdentifier","src":"15637:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15610:6:11"},"nodeType":"YulFunctionCall","src":"15610:34:11"},"nodeType":"YulExpressionStatement","src":"15610:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15692:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15700:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15688:3:11"},"nodeType":"YulFunctionCall","src":"15688:15:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15709:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15720:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15705:3:11"},"nodeType":"YulFunctionCall","src":"15705:18:11"},{"name":"length","nodeType":"YulIdentifier","src":"15725:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15653:34:11"},"nodeType":"YulFunctionCall","src":"15653:79:11"},"nodeType":"YulExpressionStatement","src":"15653:79:11"},{"nodeType":"YulAssignment","src":"15741:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15757:9:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15776:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15784:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15772:3:11"},"nodeType":"YulFunctionCall","src":"15772:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15793:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15789:3:11"},"nodeType":"YulFunctionCall","src":"15789:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15768:3:11"},"nodeType":"YulFunctionCall","src":"15768:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15753:3:11"},"nodeType":"YulFunctionCall","src":"15753:45:11"},{"kind":"number","nodeType":"YulLiteral","src":"15800:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15749:3:11"},"nodeType":"YulFunctionCall","src":"15749:54:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15741:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15503:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15514:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15525:4:11","type":""}],"src":"15413:396:11"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 320)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n        mstore(add(headStart, 288), iszero(iszero(value9)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Order not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Order already fulfilled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Already refunded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Deadline not reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_101deeb84a7b30c3ba1b40b0f7f4c505ac09a1a50e6d9ef928905ad230187381__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Not order initiator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Already registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Zero amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_29a9499b24c7c1c30de658e39e1b3b85bfcb2ce57b413521c2a3cb2388c5d10e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid secret hash\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__to_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), and(shl(96, value3), _1))\n        mstore(add(pos, 104), and(shl(96, value4), _1))\n        mstore(add(pos, 124), value5)\n        end := add(pos, 156)\n    }\n    function abi_encode_tuple_t_stringliteral_c1d924f126c3222497ebba66a9b4321d9b6a8b8b39b3938bb6a4a6dbe0bdc4e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Order exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Incorrect ETH amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_890a6771b112b68c8156f7e98f853dfb4045cf1cc9f5289e3c6a09bc0e92fbd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Order was refunded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2f4bfb2dcf7e06902cf8f2c0c97f84cc4c3e789bd0a5ba2698f8afbe21430ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Order expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_t_stringliteral_22a9a99eda58e74c6eba1e99e395e307fd14f51f225afd0fed99c1a0493e28e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid secret\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eaa3ec15dceb626e10a70b0d9e8ba2711073f6106230fded9f2d7cf060f5b71d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Secret already used\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Insufficient output amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9235c93776d67cf588408e5134192cf89ff8ca3094db508a3dc1361854cb73d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Not worker wallet owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Insufficient ETH balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ETH transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Insufficient ETH sent\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"914":[{"length":32,"start":746}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7535F2DF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7535F2DF EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x9C3F1E90 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xA4516C48 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xF6DCCF2E EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x116A1D9A EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x1F6D2EAC EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5778472A EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x6808D587 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND SWAP10 SWAP7 DUP10 AND SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 SWAP4 DUP7 AND SWAP6 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND DUP2 MSTORE SWAP10 DUP12 AND PUSH1 0x20 DUP12 ADD MSTORE DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x60 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP3 DUP8 AND PUSH1 0x80 DUP8 ADD MSTORE SWAP6 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xE0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH2 0x217 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND SWAP9 SWAP7 DUP8 AND SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 DUP6 AND SWAP5 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x33F PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13DC99195C881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x13DC99195C88185B1C9958591E48199D5B199A5B1B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C99599D5B991959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP GT PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111958591B1A5B99481B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737BA1037B93232B91034B734BA34B0BA37B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x536 JUMPI DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x55A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x55A SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0xA60671D8537ED193E567F86DDF28CF35DC67073B5AD80A2D41359CFA78DB0A1E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH2 0x590 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CD PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST TIMESTAMP DUP4 GT PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP2 PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840E6CAC6E4CAE840D0C2E6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x34 DUP5 ADD MSTORE PUSH1 0x54 DUP4 ADD DUP9 SWAP1 MSTORE DUP10 DUP2 SHL DUP3 AND PUSH1 0x74 DUP5 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x88 DUP3 ADD MSTORE PUSH1 0x9C DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xBC ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4F7264657220657869737473 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x8A1 JUMPI DUP6 CALLVALUE EQ PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD0811551208185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x8B6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND CALLER ADDRESS DUP10 PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x958DA44420B864737AD53EA0AA959279A3E21574047C9737DF230D1F350577A0 DUP11 DUP11 DUP11 DUP11 DUP10 PUSH1 0x40 MLOAD PUSH2 0xAC9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP1 POP PUSH2 0xADD PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAEF PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13DC99195C881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x13DC99195C88185B1C9958591E48199D5B199A5B1B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13DC99195C881DD85CC81C99599D5B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DC99195C88195E1C1A5C9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081CD958DC995D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14D958DC995D08185B1C9958591E481D5CD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP4 LT ISZERO PUSH2 0xD36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE17 JUMPI PUSH1 0x0 CALLER SWAP1 POP ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBF SWAP2 SWAP1 PUSH2 0x14EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420776F726B65722077616C6C6574206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST POP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE DUP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF53 JUMPI DUP1 PUSH1 0x2 ADD SLOAD SELFBALANCE LT ISZERO PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204554482062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 CALLER SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST POP PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0xF74 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x104D JUMPI DUP3 CALLVALUE LT ISZERO PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9CDD59999A58DA595B9D08115512081CD95B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST DUP3 CALLVALUE GT ISZERO PUSH2 0x100E JUMPI CALLER PUSH2 0x8FC PUSH2 0xFE4 DUP6 CALLVALUE PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x100C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1047 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x106D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x106D SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 CALLER SWAP2 AND DUP7 PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 DUP6 SWAP1 PUSH32 0xC0DEC645483244C37030B06224E60B121EADD7EE71A4CE18862C979D5584042B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x10AF PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1106 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x10AF SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x11A8 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1139 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1203 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1283 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x1224 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1292 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x129A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x392 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x136A DUP8 DUP4 DUP4 DUP8 PUSH2 0x1375 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13E4 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x13DD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x13DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x392 JUMP JUMPDEST POP DUP2 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x1292 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x13F9 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x145E DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1489 DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1499 DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x145E DUP2 PUSH2 0x142C JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1528 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x145E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x156B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1553 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1586 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x15AF DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A CREATE SWAP11 0xB7 0x2A 0x23 SGT 0x2D PUSH30 0xF75D9A387F1551AAA7382341DF560F0E797640C6F2AB1D64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"326:5854:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5434:738;;;;;;;;;;-1:-1:-1;5434:738:5;;;;;:::i;:::-;;:::i;:::-;;517:46;;;;;;;;;;-1:-1:-1;517:46:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;752:14:11;;745:22;727:41;;715:2;700:18;517:46:5;;;;;;;;2565:705;;;;;;;;;;-1:-1:-1;2565:705:5;;;;;:::i;:::-;2632:17;2930:15;;;:6;:15;;;;;;;;2976;;3005:14;;;;3033;;;;3061:18;;;;3093:13;;;;3120:14;;;;3148;;;;3176:16;;;;3206:17;;;;;-1:-1:-1;;;;;2976:15:5;;;;3005:14;;;;3033;;3061:18;;3093:13;;;;3120:14;;;;3148;;3176:16;;3206:17;;;;;2976:15;3237:16;;;;;2565:705;;;;;-1:-1:-1;;;;;1222:15:11;;;1204:34;;1274:15;;;1269:2;1254:18;;1247:43;1306:18;;1299:34;;;;1364:2;1349:18;;1342:34;;;;1413:15;;;1407:3;1392:19;;1385:44;1466:15;;1184:3;1445:19;;1438:44;1513:3;1498:19;;1491:35;;;;1557:3;1542:19;;1535:35;;;;1614:14;;1607:22;1601:3;1586:19;;1579:51;1674:14;;1667:22;1661:3;1646:19;;1639:51;1153:3;1138:19;2565:705:5;779:917:11;2291:264:5;;;;;;;;;;-1:-1:-1;2291:264:5;;;;;:::i;:::-;;:::i;709:1576::-;;;;;;:::i;:::-;;:::i;:::-;;;2515:25:11;;;2503:2;2488:18;709:1576:5;2369:177:11;419:43:5;;;;;;;;;;-1:-1:-1;419:43:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;419:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468;;;;;;;;;;-1:-1:-1;468:43:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;574:29;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2715:32:11;;;2697:51;;2685:2;2670:18;574:29:5;2551:203:11;3276:2152:5;;;;;;:::i;:::-;;:::i;5434:738::-;2261:21:0;:19;:21::i;:::-;5504:23:5::1;5530:15:::0;;;:6:::1;:15;::::0;;;;5563;;-1:-1:-1;;;;;5563:15:5::1;5555:57;;;::::0;-1:-1:-1;;;5555:57:5;;3282:2:11;5555:57:5::1;::::0;::::1;3264:21:11::0;3321:2;3301:18;;;3294:30;-1:-1:-1;;;3340:18:11;;;3333:45;3395:18;;5555:57:5::1;;;;;;;;;5631:17;::::0;::::1;::::0;::::1;;5630:18;5622:54;;;::::0;-1:-1:-1;;;5622:54:5;;3626:2:11;5622:54:5::1;::::0;::::1;3608:21:11::0;3665:2;3645:18;;;3638:30;-1:-1:-1;;;3684:18:11;;;3677:53;3747:18;;5622:54:5::1;3424:347:11::0;5622:54:5::1;5695:16;::::0;::::1;::::0;::::1;::::0;::::1;;;5694:17;5686:46;;;::::0;-1:-1:-1;;;5686:46:5;;3978:2:11;5686:46:5::1;::::0;::::1;3960:21:11::0;4017:2;3997:18;;;3990:30;-1:-1:-1;;;4036:18:11;;;4029:46;4092:18;;5686:46:5::1;3776:340:11::0;5686:46:5::1;5768:5;:14;;;5750:15;:32;5742:65;;;::::0;-1:-1:-1;;;5742:65:5;;4323:2:11;5742:65:5::1;::::0;::::1;4305:21:11::0;4362:2;4342:18;;;4335:30;-1:-1:-1;;;4381:18:11;;;4374:50;4441:18;;5742:65:5::1;4121:344:11::0;5742:65:5::1;5839:15:::0;;-1:-1:-1;;;;;5839:15:5::1;5825:10;:29;5817:61;;;::::0;-1:-1:-1;;;5817:61:5;;4672:2:11;5817:61:5::1;::::0;::::1;4654:21:11::0;4711:2;4691:18;;;4684:30;-1:-1:-1;;;4730:18:11;;;4723:49;4789:18;;5817:61:5::1;4470:343:11::0;5817:61:5::1;5889:16;::::0;::::1;:23:::0;;-1:-1:-1;;5889:23:5::1;;;::::0;;5927:13:::1;::::0;::::1;::::0;-1:-1:-1;;;;;5927:13:5::1;5923:205;;5978:15:::0;;6004:14:::1;::::0;::::1;::::0;5970:49:::1;::::0;-1:-1:-1;;;;;5978:15:5;;::::1;::::0;5970:49;::::1;;;::::0;6004:14;5978:15:::1;5970:49:::0;5978:15;5970:49;6004:14;5978:15;5970:49;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5923:205;;;6085:15:::0;;6102:14:::1;::::0;::::1;::::0;6057:13:::1;::::0;::::1;::::0;6050:67:::1;::::0;-1:-1:-1;;;;;6057:13:5;;::::1;::::0;6085:15;::::1;::::0;6050:34:::1;:67::i;:::-;6143:22;::::0;6157:7;;6143:22:::1;::::0;;;::::1;5494:678;2303:20:0::0;1716:1;2809:7;:22;2629:209;2303:20;5434:738:5;:::o;2291:264::-;-1:-1:-1;;;;;2371:28:5;;;;;;:14;:28;;;;;;;;2370:29;2362:60;;;;-1:-1:-1;;;2362:60:5;;5020:2:11;2362:60:5;;;5002:21:11;5059:2;5039:18;;;5032:30;-1:-1:-1;;;5078:18:11;;;5071:48;5136:18;;2362:60:5;4818:342:11;2362:60:5;2479:10;-1:-1:-1;;;;;2440:49:5;2454:12;-1:-1:-1;;;;;2440:33:5;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2440:49:5;;2432:71;;;;-1:-1:-1;;;2432:71:5;;5623:2:11;2432:71:5;;;5605:21:11;5662:1;5642:18;;;5635:29;-1:-1:-1;;;5680:18:11;;;5673:39;5729:18;;2432:71:5;5421:332:11;2432:71:5;-1:-1:-1;;;;;2513:28:5;;;;;:14;:28;;;;;:35;;-1:-1:-1;;2513:35:5;2544:4;2513:35;;;2291:264::o;709:1576::-;936:7;2261:21:0;:19;:21::i;:::-;974:1:5::1;963:8;:12;955:36;;;::::0;-1:-1:-1;;;955:36:5;;5960:2:11;955:36:5::1;::::0;::::1;5942:21:11::0;5999:2;5979:18;;;5972:30;-1:-1:-1;;;6018:18:11;;;6011:41;6069:18;;955:36:5::1;5758:335:11::0;955:36:5::1;1020:15;1009:8;:26;1001:55;;;::::0;-1:-1:-1;;;1001:55:5;;6300:2:11;1001:55:5::1;::::0;::::1;6282:21:11::0;6339:2;6319:18;;;6312:30;-1:-1:-1;;;6358:18:11;;;6351:46;6414:18;;1001:55:5::1;6098:340:11::0;1001:55:5::1;1074:10:::0;1066:56:::1;;;::::0;-1:-1:-1;;;1066:56:5;;6645:2:11;1066:56:5::1;::::0;::::1;6627:21:11::0;6684:2;6664:18;;;6657:30;-1:-1:-1;;;6703:18:11;;;6696:49;6762:18;;1066:56:5::1;6443:343:11::0;1066:56:5::1;1174:196;::::0;-1:-1:-1;;1208:10:5::1;7130:2:11::0;7126:15;;;7122:24;;1174:196:5::1;::::0;::::1;7110:37:11::0;1236:15:5::1;7163:12:11::0;;;7156:28;7200:12;;;7193:28;;;7255:15;;;7251:24;;7237:12;;;7230:46;7311:15;;;7307:24;7292:13;;;7285:47;7348:13;;;7341:29;;;1133:15:5::1;::::0;7386:13:11;;1174:196:5::1;::::0;;-1:-1:-1;;1174:196:5;;::::1;::::0;;;;;;1151:229;;1174:196:::1;1151:229:::0;;::::1;::::0;1436:1:::1;1399:15:::0;;;:6:::1;:15:::0;;;;;:25;1151:229;;-1:-1:-1;;;;;;1399:25:5::1;:39:::0;1391:64:::1;;;::::0;-1:-1:-1;;;1391:64:5;;7612:2:11;1391:64:5::1;::::0;::::1;7594:21:11::0;7651:2;7631:18;;;7624:30;-1:-1:-1;;;7670:18:11;;;7663:42;7722:18;;1391:64:5::1;7410:336:11::0;1391:64:5::1;-1:-1:-1::0;;;;;1470:21:5;::::1;1466:206;;1528:8;1515:9;:21;1507:54;;;::::0;-1:-1:-1;;;1507:54:5;;7953:2:11;1507:54:5::1;::::0;::::1;7935:21:11::0;7992:2;7972:18;;;7965:30;-1:-1:-1;;;8011:18:11;;;8004:50;8071:18;;1507:54:5::1;7751:344:11::0;1507:54:5::1;1466:206;;;1592:69;-1:-1:-1::0;;;;;1592:32:5;::::1;1625:10;1645:4;1652:8:::0;1592:32:::1;:69::i;:::-;1700:355;;;;;;;;1735:10;-1:-1:-1::0;;;;;1700:355:5::1;;;;;1777:1;-1:-1:-1::0;;;;;1700:355:5::1;;;;;1803:8;1700:355;;;;1839:12;1700:355;;;;1874:7;-1:-1:-1::0;;;;;1700:355:5::1;;;;;1905:8;-1:-1:-1::0;;;;;1700:355:5::1;;;;;1937:8;1700:355;;;;1971:10;1700:355;;;;2008:5;1700:355;;;;;;2039:5;1700:355;;;;::::0;1682:6:::1;:15;1689:7;1682:15;;;;;;;;;;;:373;;;;;;;;;;;;;-1:-1:-1::0;;;;;1682:373:5::1;;;;;-1:-1:-1::0;;;;;1682:373:5::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1682:373:5::1;;;;;-1:-1:-1::0;;;;;1682:373:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1682:373:5::1;;;;;-1:-1:-1::0;;;;;1682:373:5::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1682:373:5::1;;;;;-1:-1:-1::0;;;;;1682:373:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:10;-1:-1:-1::0;;;;;2071:182:5::1;2097:7;2071:182;2142:7;2163:8;2185;2207:12;2233:10;2071:182;;;;;;;;;-1:-1:-1::0;;;;;8415:15:11;;;8397:34;;8467:15;;;;8462:2;8447:18;;8440:43;8514:2;8499:18;;8492:34;;;;8557:2;8542:18;;8535:34;8600:3;8585:19;;8578:35;;;;8346:3;8331:19;;8100:519;2071:182:5::1;;;;;;;;2271:7:::0;-1:-1:-1;2303:20:0;1716:1;2809:7;:22;2629:209;2303:20;709:1576:5;;;;;;;;:::o;3276:2152::-;2261:21:0;:19;:21::i;:::-;3420:23:5::1;3446:15:::0;;;:6:::1;:15;::::0;;;;3479;;-1:-1:-1;;;;;3479:15:5::1;3471:57;;;::::0;-1:-1:-1;;;3471:57:5;;3282:2:11;3471:57:5::1;::::0;::::1;3264:21:11::0;3321:2;3301:18;;;3294:30;-1:-1:-1;;;3340:18:11;;;3333:45;3395:18;;3471:57:5::1;3080:339:11::0;3471:57:5::1;3547:17;::::0;::::1;::::0;::::1;;3546:18;3538:54;;;::::0;-1:-1:-1;;;3538:54:5;;3626:2:11;3538:54:5::1;::::0;::::1;3608:21:11::0;3665:2;3645:18;;;3638:30;-1:-1:-1;;;3684:18:11;;;3677:53;3747:18;;3538:54:5::1;3424:347:11::0;3538:54:5::1;3611:16;::::0;::::1;::::0;::::1;::::0;::::1;;;3610:17;3602:48;;;::::0;-1:-1:-1;;;3602:48:5;;8826:2:11;3602:48:5::1;::::0;::::1;8808:21:11::0;8865:2;8845:18;;;8838:30;-1:-1:-1;;;8884:18:11;;;8877:48;8942:18;;3602:48:5::1;8624:342:11::0;3602:48:5::1;3687:5;:14;;;3668:15;:33;;3660:59;;;::::0;-1:-1:-1;;;3660:59:5;;9173:2:11;3660:59:5::1;::::0;::::1;9155:21:11::0;9212:2;9192:18;;;9185:30;-1:-1:-1;;;9231:18:11;;;9224:43;9284:18;;3660:59:5::1;8971:337:11::0;3660:59:5::1;3776:16;::::0;::::1;::::0;3747:24:::1;::::0;;::::1;::::0;::::1;9442:19:11::0;;;9477:12;3747:24:5::1;;;;;;;;;;;;3737:35;;;;;;:55;3729:82;;;::::0;-1:-1:-1;;;3729:82:5;;9702:2:11;3729:82:5::1;::::0;::::1;9684:21:11::0;9741:2;9721:18;;;9714:30;-1:-1:-1;;;9760:18:11;;;9753:44;9814:18;;3729:82:5::1;9500:338:11::0;3729:82:5::1;3830:19;::::0;;;:11:::1;:19;::::0;;;;;::::1;;3829:20;3821:52;;;::::0;-1:-1:-1;;;3821:52:5;;10045:2:11;3821:52:5::1;::::0;::::1;10027:21:11::0;10084:2;10064:18;;;10057:30;-1:-1:-1;;;10103:18:11;;;10096:49;10162:18;;3821:52:5::1;9843:343:11::0;3821:52:5::1;3904:5;:18;;;3891:9;:31;;3883:70;;;::::0;-1:-1:-1;;;3883:70:5;;10393:2:11;3883:70:5::1;::::0;::::1;10375:21:11::0;10432:2;10412:18;;;10405:30;10471:28;10451:18;;;10444:56;10517:18;;3883:70:5::1;10191:350:11::0;3883:70:5::1;4068:10;4053:26;::::0;;;:14:::1;:26;::::0;;;;;::::1;;4049:194;;;4095:26;4138:10;4095:54;;4195:9;-1:-1:-1::0;;;;;4171:33:5::1;:12;-1:-1:-1::0;;;;;4171:18:5::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4171:33:5::1;;4163:69;;;::::0;-1:-1:-1;;;4163:69:5;;10748:2:11;4163:69:5::1;::::0;::::1;10730:21:11::0;10787:2;10767:18;;;10760:30;10826:25;10806:18;;;10799:53;10869:18;;4163:69:5::1;10546:347:11::0;4163:69:5::1;4081:162;4049:194;4253:17;::::0;::::1;:24:::0;;-1:-1:-1;;4253:24:5;;::::1;4273:4;4253:24:::0;;::::1;::::0;;;4287:14;;::::1;:27:::0;;-1:-1:-1;;;;;;4287:27:5::1;4304:10;4287:27;::::0;;4253:17:::1;4324:19:::0;;;:11:::1;:19;::::0;;;;:26;;;;::::1;::::0;;::::1;::::0;;4404:13:::1;::::0;::::1;::::0;-1:-1:-1;;;;;4404:13:5::1;4400:423;;4548:5;:14;;;4523:21;:39;;4515:76;;;::::0;-1:-1:-1;;;4515:76:5;;11100:2:11;4515:76:5::1;::::0;::::1;11082:21:11::0;11139:2;11119:18;;;11112:30;11178:26;11158:18;;;11151:54;11222:18;;4515:76:5::1;10898:348:11::0;4515:76:5::1;4647:14;::::0;::::1;::::0;4624:42:::1;::::0;4606:12:::1;::::0;4624:10:::1;::::0;4606:12;4624:42;4606:12;4624:42;4647:14;4624:10;:42:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4605:61;;;4688:7;4680:39;;;::::0;-1:-1:-1;;;4680:39:5;;11663:2:11;4680:39:5::1;::::0;::::1;11645:21:11::0;11702:2;11682:18;;;11675:30;-1:-1:-1;;;11721:18:11;;;11714:49;11780:18;;4680:39:5::1;11461:343:11::0;4680:39:5::1;4433:297;4400:423;;;4797:14;::::0;::::1;::::0;4757:13:::1;::::0;::::1;::::0;4750:62:::1;::::0;-1:-1:-1;;;;;4757:13:5;;::::1;::::0;4785:10:::1;::::0;4750:34:::1;:62::i;:::-;4898:14;::::0;::::1;::::0;-1:-1:-1;;;;;4898:14:5::1;4894:469;;4963:9;4950;:22;;4942:56;;;::::0;-1:-1:-1;;;4942:56:5;;12011:2:11;4942:56:5::1;::::0;::::1;11993:21:11::0;12050:2;12030:18;;;12023:30;-1:-1:-1;;;12069:18:11;;;12062:51;12130:18;;4942:56:5::1;11809:345:11::0;4942:56:5::1;5028:9;5016;:21;5012:111;;;5065:10;5057:51;5086:21;5098:9:::0;5086::::1;:21;:::i;:::-;5057:51;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5012:111;5144:15:::0;;5136:44:::1;::::0;-1:-1:-1;;;;;5144:15:5;;::::1;::::0;5136:44;::::1;;;::::0;5170:9;;5144:15:::1;5136:44:::0;5144:15;5136:44;5170:9;5144:15;5136:44;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;4894:469;;;5296:15:::0;;5218:14:::1;::::0;::::1;::::0;5211:141:::1;::::0;-1:-1:-1;;;;;5218:14:5;;::::1;::::0;5268:10:::1;::::0;5296:15:::1;5329:9:::0;5211:39:::1;:141::i;:::-;5378:43;::::0;2515:25:11;;;5402:10:5::1;::::0;5393:7;;5378:43:::1;::::0;2503:2:11;2488:18;5378:43:5::1;;;;;;;3410:2018;2303:20:0::0;1716:1;2809:7;:22;2629:209;2303:20;3276:2152:5;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:0;;12591:2:11;2460:63:0;;;12573:21:11;12630:2;12610:18;;;12603:30;12669:33;12649:18;;;12642:61;12720:18;;2460:63:0;12389:355:11;2460:63:0;1759:1;2598:7;:18;2336:287::o;941:175:3:-;1050:58;;-1:-1:-1;;;;;12941:32:11;;1050:58:3;;;12923:51:11;12990:18;;;12983:34;;;1023:86:3;;1043:5;;-1:-1:-1;;;1073:23:3;12896:18:11;;1050:58:3;;;;-1:-1:-1;;1050:58:3;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:3;-1:-1:-1;;;;;;1050:58:3;;;;;;;;;;1023:19;:86::i;1355:203::-;1482:68;;-1:-1:-1;;;;;13286:15:11;;;1482:68:3;;;13268:34:11;13338:15;;13318:18;;;13311:43;13370:18;;;13363:34;;;1455:96:3;;1475:5;;-1:-1:-1;;;1505:27:3;13203:18:11;;1482:68:3;13028:375:11;1455:96:3;1355:203;;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:3;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:3;;13892:2:11;5720:111:3;;;13874:21:11;13931:2;13911:18;;;13904:30;13970:34;13950:18;;;13943:62;-1:-1:-1;;;14021:18:11;;;14014:40;14071:19;;5720:111:3;13690:406:11;4108:223:4;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:4:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:4;;14303:2:11;5354:81:4;;;14285:21:11;14342:2;14322:18;;;14315:30;14381:34;14361:18;;;14354:62;-1:-1:-1;;;14432:18:11;;;14425:36;14478:19;;5354:81:4;14101:402:11;5354:81:4;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:4;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:4:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:4;;;8113:60;;;;-1:-1:-1;;;8113:60:4;;15257:2:11;8113:60:4;;;15239:21:11;15296:2;15276:18;;;15269:30;15335:31;15315:18;;;15308:59;15384:18;;8113:60:4;15055:353:11;8113:60:4;-1:-1:-1;8208:10:4;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:4;;;;;;;;:::i;14:180:11:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:11;;14:180;-1:-1:-1;14:180:11:o;199:131::-;-1:-1:-1;;;;;274:31:11;;264:42;;254:70;;320:1;317;310:12;335:247;394:6;447:2;435:9;426:7;422:23;418:32;415:52;;;463:1;460;453:12;415:52;502:9;489:23;521:31;546:5;521:31;:::i;:::-;571:5;335:247;-1:-1:-1;;;335:247:11:o;1701:663::-;1805:6;1813;1821;1829;1837;1845;1898:3;1886:9;1877:7;1873:23;1869:33;1866:53;;;1915:1;1912;1905:12;1866:53;1954:9;1941:23;1973:31;1998:5;1973:31;:::i;:::-;2023:5;-1:-1:-1;2080:2:11;2065:18;;2052:32;2093:33;2052:32;2093:33;:::i;:::-;1701:663;;2145:7;;-1:-1:-1;;;;2199:2:11;2184:18;;2171:32;;2250:2;2235:18;;2222:32;;2301:3;2286:19;;2273:33;;-1:-1:-1;2353:3:11;2338:19;;;2325:33;;-1:-1:-1;1701:663:11:o;2759:316::-;2836:6;2844;2852;2905:2;2893:9;2884:7;2880:23;2876:32;2873:52;;;2921:1;2918;2911:12;2873:52;-1:-1:-1;;2944:23:11;;;3014:2;2999:18;;2986:32;;-1:-1:-1;3065:2:11;3050:18;;;3037:32;;2759:316;-1:-1:-1;2759:316:11:o;5165:251::-;5235:6;5288:2;5276:9;5267:7;5263:23;5259:32;5256:52;;;5304:1;5301;5294:12;5256:52;5336:9;5330:16;5355:31;5380:5;5355:31;:::i;12159:225::-;12226:9;;;12247:11;;;12244:134;;;12300:10;12295:3;12291:20;12288:1;12281:31;12335:4;12332:1;12325:15;12363:4;12360:1;12353:15;12244:134;12159:225;;;;:::o;13408:277::-;13475:6;13528:2;13516:9;13507:7;13503:23;13499:32;13496:52;;;13544:1;13541;13534:12;13496:52;13576:9;13570:16;13629:5;13622:13;13615:21;13608:5;13605:32;13595:60;;13651:1;13648;13641:12;14508:250;14593:1;14603:113;14617:6;14614:1;14611:13;14603:113;;;14693:11;;;14687:18;14674:11;;;14667:39;14639:2;14632:10;14603:113;;;-1:-1:-1;;14750:1:11;14732:16;;14725:27;14508:250::o;14763:287::-;14892:3;14930:6;14924:13;14946:66;15005:6;15000:3;14993:4;14985:6;14981:17;14946:66;:::i;:::-;15028:16;;;;;14763:287;-1:-1:-1;;14763:287:11:o;15413:396::-;15562:2;15551:9;15544:21;15525:4;15594:6;15588:13;15637:6;15632:2;15621:9;15617:18;15610:34;15653:79;15725:6;15720:2;15709:9;15705:18;15700:2;15692:6;15688:15;15653:79;:::i;:::-;15793:2;15772:15;-1:-1:-1;;15768:29:11;15753:45;;;;15800:2;15749:54;;15413:396;-1:-1:-1;;15413:396:11:o"},"gasEstimates":{"creation":{"codeDepositCost":"1125000","executionCost":"infinite","totalCost":"infinite"},"external":{"WETH()":"infinite","createOrder(address,address,uint256,uint256,uint256,bytes32)":"infinite","fulfillOrder(bytes32,uint256,bytes32)":"infinite","getOrder(bytes32)":"19723","isWorkerWallet(address)":"2537","orders(bytes32)":"19691","refundOrder(bytes32)":"infinite","registerWorkerWallet(address)":"infinite","usedSecrets(bytes32)":"2483"}},"methodIdentifiers":{"WETH()":"ad5c4648","createOrder(address,address,uint256,uint256,uint256,bytes32)":"7535f2df","fulfillOrder(bytes32,uint256,bytes32)":"f6dccf2e","getOrder(bytes32)":"5778472a","isWorkerWallet(address)":"1f6d2eac","orders(bytes32)":"9c3f1e90","refundOrder(bytes32)":"116a1d9a","registerWorkerWallet(address)":"6808d587","usedSecrets(bytes32)":"a4516c48"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"OrderFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"OrderRefunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"fulfillOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWorkerWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"refundOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"workerWallet\",\"type\":\"address\"}],\"name\":\"registerWorkerWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedSecrets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapManager.sol\":\"SwapManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/SwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./interfaces/ISwapManager.sol\\\";\\nimport \\\"./interfaces/IWorkerWallet.sol\\\";\\n\\ncontract SwapManager is ISwapManager, ReentrancyGuard {\\n    using SafeERC20 for IERC20;\\n\\n    mapping(bytes32 => SwapOrder) public orders;\\n    mapping(bytes32 => bool) public usedSecrets;\\n    mapping(address => bool) public isWorkerWallet;\\n    \\n    address public immutable WETH;\\n    \\n    constructor(address weth) {\\n        WETH = weth;\\n    }\\n\\n    receive() external payable {}\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable nonReentrant returns (bytes32) {\\n        require(amountIn > 0, \\\"Zero amount\\\");\\n        require(deadline > block.timestamp, \\\"Invalid deadline\\\");\\n        require(secretHash != bytes32(0), \\\"Invalid secret hash\\\");\\n\\n        bytes32 orderId = keccak256(\\n            abi.encodePacked(\\n                msg.sender,\\n                block.timestamp,\\n                amountIn,\\n                tokenIn,\\n                tokenOut,\\n                secretHash\\n            )\\n        );\\n\\n        require(orders[orderId].initiator == address(0), \\\"Order exists\\\");\\n\\n        if (tokenIn == address(0)) {\\n            require(msg.value == amountIn, \\\"Incorrect ETH amount\\\");\\n        } else {\\n            IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn);\\n        }\\n\\n        orders[orderId] = SwapOrder({\\n            initiator: msg.sender,\\n            resolver: address(0),\\n            amountIn: amountIn,\\n            amountOutMin: amountOutMin,\\n            tokenIn: tokenIn,\\n            tokenOut: tokenOut,\\n            deadline: deadline,\\n            secretHash: secretHash,\\n            isFulfilled: false,\\n            isRefunded: false\\n        });\\n\\n        emit OrderCreated(\\n            orderId,\\n            msg.sender,\\n            tokenIn,\\n            tokenOut,\\n            amountIn,\\n            amountOutMin,\\n            secretHash\\n        );\\n\\n        return orderId;\\n    }\\n\\n    function registerWorkerWallet(address workerWallet) external {\\n        require(!isWorkerWallet[workerWallet], \\\"Already registered\\\");\\n        require(IWorkerWallet(workerWallet).owner() == msg.sender, \\\"Not owner\\\");\\n        isWorkerWallet[workerWallet] = true;\\n    }\\n    \\n    function getOrder(bytes32 orderId) external view returns (\\n        address initiator,\\n        address resolver,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 deadline,\\n        bytes32 secretHash,\\n        bool isFulfilled,\\n        bool isRefunded\\n    ) {\\n        SwapOrder storage order = orders[orderId];\\n        return (\\n            order.initiator,\\n            order.resolver,\\n            order.amountIn,\\n            order.amountOutMin,\\n            order.tokenIn,\\n            order.tokenOut,\\n            order.deadline,\\n            order.secretHash,\\n            order.isFulfilled,\\n            order.isRefunded\\n        );\\n    }\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable nonReentrant {\\n        SwapOrder storage order = orders[orderId];\\n        require(order.initiator != address(0), \\\"Order not found\\\");\\n        require(!order.isFulfilled, \\\"Order already fulfilled\\\");\\n        require(!order.isRefunded, \\\"Order was refunded\\\");\\n        require(block.timestamp <= order.deadline, \\\"Order expired\\\");\\n        require(keccak256(abi.encodePacked(secret)) == order.secretHash, \\\"Invalid secret\\\");\\n        require(!usedSecrets[secret], \\\"Secret already used\\\");\\n        require(amountOut >= order.amountOutMin, \\\"Insufficient output amount\\\");\\n        \\n        // If called by a worker wallet, verify it's the owner of the wallet\\n        if (isWorkerWallet[msg.sender]) {\\n            IWorkerWallet workerWallet = IWorkerWallet(msg.sender);\\n            require(workerWallet.owner() == tx.origin, \\\"Not worker wallet owner\\\");\\n        }\\n\\n        order.isFulfilled = true;\\n        order.resolver = msg.sender;\\n        usedSecrets[secret] = true;\\n\\n        // Transfer tokens to resolver\\n        if (order.tokenIn == address(0)) {\\n            // For native ETH, the amount should be in the contract\\n            require(address(this).balance >= order.amountIn, \\\"Insufficient ETH balance\\\");\\n            (bool success, ) = msg.sender.call{value: order.amountIn}(\\\"\\\");\\n            require(success, \\\"ETH transfer failed\\\");\\n        } else {\\n            IERC20(order.tokenIn).safeTransfer(msg.sender, order.amountIn);\\n        }\\n\\n        // Transfer output tokens from resolver to initiator\\n        if (order.tokenOut == address(0)) {\\n            require(msg.value >= amountOut, \\\"Insufficient ETH sent\\\");\\n            if (msg.value > amountOut) {\\n                payable(msg.sender).transfer(msg.value - amountOut);\\n            }\\n            payable(order.initiator).transfer(amountOut);\\n        } else {\\n            IERC20(order.tokenOut).safeTransferFrom(\\n                msg.sender,\\n                order.initiator,\\n                amountOut\\n            );\\n        }\\n\\n        emit OrderFulfilled(orderId, msg.sender, secret);\\n    }\\n\\n    function refundOrder(bytes32 orderId) external nonReentrant {\\n        SwapOrder storage order = orders[orderId];\\n        require(order.initiator != address(0), \\\"Order not found\\\");\\n        require(!order.isFulfilled, \\\"Order already fulfilled\\\");\\n        require(!order.isRefunded, \\\"Already refunded\\\");\\n        require(block.timestamp > order.deadline, \\\"Deadline not reached\\\");\\n        require(msg.sender == order.initiator, \\\"Not order initiator\\\");\\n\\n        order.isRefunded = true;\\n\\n        if (order.tokenIn == address(0)) {\\n            payable(order.initiator).transfer(order.amountIn);\\n        } else {\\n            IERC20(order.tokenIn).safeTransfer(order.initiator, order.amountIn);\\n        }\\n\\n        emit OrderRefunded(orderId);\\n    }\\n\\n    \\n}\\n\",\"keccak256\":\"0x216b9e0c331b82472af0da7f70987b19703f16671dd761c452d3d4fe2ca3dd1d\",\"license\":\"MIT\"},\"contracts/interfaces/ISwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ISwapManager {\\n    struct SwapOrder {\\n        address initiator;\\n        address resolver;\\n        uint256 amountIn;\\n        uint256 amountOutMin;\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 deadline;\\n        bytes32 secretHash;\\n        bool isFulfilled;\\n        bool isRefunded;\\n    }\\n\\n    event OrderCreated(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n\\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        bytes32 secret\\n    );\\n\\n    event OrderRefunded(bytes32 indexed orderId);\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32);\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable;\\n\\n    function refundOrder(bytes32 orderId) external;\\n\\n    function registerWorkerWallet(address workerWallet) external;\\n    \\n    function getOrder(bytes32 orderId) external view returns (\\n        address initiator,\\n        address resolver,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 deadline,\\n        bytes32 secretHash,\\n        bool isFulfilled,\\n        bool isRefunded\\n    );\\n    \\n    /**\\n     * @notice Register a worker wallet that can be used to fulfill orders\\n     * @param workerWallet The address of the worker wallet to register\\n     */\\n}\\n\",\"keccak256\":\"0x29ca9e861fd2c3805cf6979bebd14111d3bb5adf435fa62ecf6b7904a85af20b\",\"license\":\"MIT\"},\"contracts/interfaces/IWorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IWorkerWallet {\\n    event Executed(address indexed target, uint256 value, bytes data, bool success);\\n    event Withdrawn(address token, uint256 amount, address to);\\n    \\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory result);\\n    \\n    function withdraw(address token, uint256 amount, address to) external;\\n    \\n    function owner() external view returns (address);\\n    \\n    function swapManager() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd06ff72662f22d4288875f589eb91c4cb09d28003282dce92e4cd56de351277c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"contracts/SwapManager.sol:SwapManager","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":904,"contract":"contracts/SwapManager.sol:SwapManager","label":"orders","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_struct(SwapOrder)1847_storage)"},{"astId":908,"contract":"contracts/SwapManager.sol:SwapManager","label":"usedSecrets","offset":0,"slot":"2","type":"t_mapping(t_bytes32,t_bool)"},{"astId":912,"contract":"contracts/SwapManager.sol:SwapManager","label":"isWorkerWallet","offset":0,"slot":"3","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(SwapOrder)1847_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct ISwapManager.SwapOrder)","numberOfBytes":"32","value":"t_struct(SwapOrder)1847_storage"},"t_struct(SwapOrder)1847_storage":{"encoding":"inplace","label":"struct ISwapManager.SwapOrder","members":[{"astId":1828,"contract":"contracts/SwapManager.sol:SwapManager","label":"initiator","offset":0,"slot":"0","type":"t_address"},{"astId":1830,"contract":"contracts/SwapManager.sol:SwapManager","label":"resolver","offset":0,"slot":"1","type":"t_address"},{"astId":1832,"contract":"contracts/SwapManager.sol:SwapManager","label":"amountIn","offset":0,"slot":"2","type":"t_uint256"},{"astId":1834,"contract":"contracts/SwapManager.sol:SwapManager","label":"amountOutMin","offset":0,"slot":"3","type":"t_uint256"},{"astId":1836,"contract":"contracts/SwapManager.sol:SwapManager","label":"tokenIn","offset":0,"slot":"4","type":"t_address"},{"astId":1838,"contract":"contracts/SwapManager.sol:SwapManager","label":"tokenOut","offset":0,"slot":"5","type":"t_address"},{"astId":1840,"contract":"contracts/SwapManager.sol:SwapManager","label":"deadline","offset":0,"slot":"6","type":"t_uint256"},{"astId":1842,"contract":"contracts/SwapManager.sol:SwapManager","label":"secretHash","offset":0,"slot":"7","type":"t_bytes32"},{"astId":1844,"contract":"contracts/SwapManager.sol:SwapManager","label":"isFulfilled","offset":0,"slot":"8","type":"t_bool"},{"astId":1846,"contract":"contracts/SwapManager.sol:SwapManager","label":"isRefunded","offset":1,"slot":"8","type":"t_bool"}],"numberOfBytes":"288"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/WorkerWallet.sol":{"WorkerWallet":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_swapManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swapManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1571":{"entryPoint":null,"id":1571,"parameterSlots":2,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":304,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":332,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_stringliteral_388b26b8752cb9bc2935bdbdaaff189c636297a6151c254979ebb6679c000647__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6ccdfc9ccc81f068aea89db7f9732f839acfc5c72bb0c0b89415226633ad9254__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1306:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:11","statements":[{"nodeType":"YulAssignment","src":"84:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:11"},"nodeType":"YulFunctionCall","src":"93:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:11"}]},{"body":{"nodeType":"YulBlock","src":"169:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:11"},"nodeType":"YulFunctionCall","src":"171:12:11"},"nodeType":"YulExpressionStatement","src":"171:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:11"},"nodeType":"YulFunctionCall","src":"150:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:11"},"nodeType":"YulFunctionCall","src":"146:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:11"},"nodeType":"YulFunctionCall","src":"135:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:11"},"nodeType":"YulFunctionCall","src":"125:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:11"},"nodeType":"YulFunctionCall","src":"118:50:11"},"nodeType":"YulIf","src":"115:70:11"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:11","type":""}],"src":"14:177:11"},{"body":{"nodeType":"YulBlock","src":"294:195:11","statements":[{"body":{"nodeType":"YulBlock","src":"340:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"349:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"352:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:11"},"nodeType":"YulFunctionCall","src":"342:12:11"},"nodeType":"YulExpressionStatement","src":"342:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:11"},"nodeType":"YulFunctionCall","src":"311:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:11"},"nodeType":"YulFunctionCall","src":"307:32:11"},"nodeType":"YulIf","src":"304:52:11"},{"nodeType":"YulAssignment","src":"365:50:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"405:9:11"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"375:29:11"},"nodeType":"YulFunctionCall","src":"375:40:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"365:6:11"}]},{"nodeType":"YulAssignment","src":"424:59:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:11"},"nodeType":"YulFunctionCall","src":"464:18:11"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"434:29:11"},"nodeType":"YulFunctionCall","src":"434:49:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"424:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:11","type":""}],"src":"196:293:11"},{"body":{"nodeType":"YulBlock","src":"668:225:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"685:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"696:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"678:6:11"},"nodeType":"YulFunctionCall","src":"678:21:11"},"nodeType":"YulExpressionStatement","src":"678:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"719:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"730:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"715:3:11"},"nodeType":"YulFunctionCall","src":"715:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:11","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"708:6:11"},"nodeType":"YulFunctionCall","src":"708:30:11"},"nodeType":"YulExpressionStatement","src":"708:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"758:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:11"},"nodeType":"YulFunctionCall","src":"754:18:11"},{"hexValue":"576f726b657257616c6c65743a206f776e6572206973207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"774:34:11","type":"","value":"WorkerWallet: owner is zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"747:6:11"},"nodeType":"YulFunctionCall","src":"747:62:11"},"nodeType":"YulExpressionStatement","src":"747:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"829:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"840:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"825:3:11"},"nodeType":"YulFunctionCall","src":"825:18:11"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"845:5:11","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"818:6:11"},"nodeType":"YulFunctionCall","src":"818:33:11"},"nodeType":"YulExpressionStatement","src":"818:33:11"},{"nodeType":"YulAssignment","src":"860:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"872:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"883:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"868:3:11"},"nodeType":"YulFunctionCall","src":"868:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"860:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_388b26b8752cb9bc2935bdbdaaff189c636297a6151c254979ebb6679c000647__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"645:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"659:4:11","type":""}],"src":"494:399:11"},{"body":{"nodeType":"YulBlock","src":"1072:232:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1089:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1100:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1082:6:11"},"nodeType":"YulFunctionCall","src":"1082:21:11"},"nodeType":"YulExpressionStatement","src":"1082:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1123:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1134:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1119:3:11"},"nodeType":"YulFunctionCall","src":"1119:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"1139:2:11","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1112:6:11"},"nodeType":"YulFunctionCall","src":"1112:30:11"},"nodeType":"YulExpressionStatement","src":"1112:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1162:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1173:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1158:3:11"},"nodeType":"YulFunctionCall","src":"1158:18:11"},{"hexValue":"576f726b657257616c6c65743a2073776170206d616e61676572206973207a65","kind":"string","nodeType":"YulLiteral","src":"1178:34:11","type":"","value":"WorkerWallet: swap manager is ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1151:6:11"},"nodeType":"YulFunctionCall","src":"1151:62:11"},"nodeType":"YulExpressionStatement","src":"1151:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1233:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1244:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1229:3:11"},"nodeType":"YulFunctionCall","src":"1229:18:11"},{"hexValue":"726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"1249:12:11","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1222:6:11"},"nodeType":"YulFunctionCall","src":"1222:40:11"},"nodeType":"YulExpressionStatement","src":"1222:40:11"},{"nodeType":"YulAssignment","src":"1271:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1283:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1294:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1279:3:11"},"nodeType":"YulFunctionCall","src":"1279:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1271:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_6ccdfc9ccc81f068aea89db7f9732f839acfc5c72bb0c0b89415226633ad9254__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1049:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1063:4:11","type":""}],"src":"898:406:11"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_388b26b8752cb9bc2935bdbdaaff189c636297a6151c254979ebb6679c000647__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"WorkerWallet: owner is zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6ccdfc9ccc81f068aea89db7f9732f839acfc5c72bb0c0b89415226633ad9254__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"WorkerWallet: swap manager is ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a59380380610a5983398101604081905261002f9161014c565b6001600160a01b0382166100965760405162461bcd60e51b815260206004820152602360248201527f576f726b657257616c6c65743a206f776e6572206973207a65726f206164647260448201526265737360e81b60648201526084015b60405180910390fd5b6001600160a01b0381166100ff5760405162461bcd60e51b815260206004820152602a60248201527f576f726b657257616c6c65743a2073776170206d616e61676572206973207a65604482015269726f206164647265737360b01b606482015260840161008d565b600080546001600160a01b039384166001600160a01b0319918216179091556001805492909316911617905561017f565b80516001600160a01b038116811461014757600080fd5b919050565b6000806040838503121561015f57600080fd5b61016883610130565b915061017660208401610130565b90509250929050565b6108cb8061018e6000396000f3fe6080604052600436106100435760003560e01c806369328dec1461004f578063709d039d146100715780638da5cb5b146100ae578063b61d27f6146100ce57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a36600461067a565b6100fc565b005b34801561007d57600080fd5b50600154610091906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ba57600080fd5b50600054610091906001600160a01b031681565b3480156100da57600080fd5b506100ee6100e93660046106b6565b6102bf565b6040516100a592919061078d565b6000546001600160a01b0316331461012f5760405162461bcd60e51b8152600401610126906107a8565b60405180910390fd5b6001600160a01b03811661019b5760405162461bcd60e51b815260206004820152602d60248201527f576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f60448201526c207a65726f206164647265737360981b6064820152608401610126565b6001600160a01b03831661025c576000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146101f6576040519150601f19603f3d011682016040523d82523d6000602084013e6101fb565b606091505b50509050806102565760405162461bcd60e51b815260206004820152602160248201527f576f726b657257616c6c65743a20455448207472616e73666572206661696c656044820152601960fa1b6064820152608401610126565b50610270565b6102706001600160a01b03841682846103a2565b604080516001600160a01b0385811682526020820185905283168183015290517fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9181900360600190a1505050565b600080546060906001600160a01b031633146102ed5760405162461bcd60e51b8152600401610126906107a8565b856001600160a01b03168585856040516103089291906107ed565b60006040518083038185875af1925050503d8060008114610345576040519150601f19603f3d011682016040523d82523d6000602084013e61034a565b606091505b5060405191935091506001600160a01b038716907f4232d48319210b7bc959a61fd7785051da1497df2a1400e3340f42a8a6efd541906103919088908890889088906107fd565b60405180910390a294509492505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103f49084906103f9565b505050565b600061044e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104ce9092919063ffffffff16565b905080516000148061046f57508080602001905181019061046f919061083d565b6103f45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610126565b60606104dd84846000856104e5565b949350505050565b6060824710156105465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610126565b600080866001600160a01b031685876040516105629190610866565b60006040518083038185875af1925050503d806000811461059f576040519150601f19603f3d011682016040523d82523d6000602084013e6105a4565b606091505b50915091506105b5878383876105c0565b979650505050505050565b6060831561062f578251600003610628576001600160a01b0385163b6106285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610126565b50816104dd565b6104dd83838151156106445781518083602001fd5b8060405162461bcd60e51b81526004016101269190610882565b80356001600160a01b038116811461067557600080fd5b919050565b60008060006060848603121561068f57600080fd5b6106988461065e565b9250602084013591506106ad6040850161065e565b90509250925092565b600080600080606085870312156106cc57600080fd5b6106d58561065e565b935060208501359250604085013567ffffffffffffffff808211156106f957600080fd5b818701915087601f83011261070d57600080fd5b81358181111561071c57600080fd5b88602082850101111561072e57600080fd5b95989497505060200194505050565b60005b83811015610758578181015183820152602001610740565b50506000910152565b6000815180845261077981602086016020860161073d565b601f01601f19169290920160200192915050565b82151581526040602082015260006104dd6040830184610761565b60208082526025908201527f576f726b657257616c6c65743a2063616c6c6572206973206e6f74207468652060408201526437bbb732b960d91b606082015260800190565b8183823760009101908152919050565b848152606060208201528260608201528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b60006020828403121561084f57600080fd5b8151801515811461085f57600080fd5b9392505050565b6000825161087881846020870161073d565b9190910192915050565b60208152600061085f602083018461076156fea2646970667358221220142139d47c8f89e7b9e607d51232e069a10870614ce5f565e2a6107b29954b6964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA59 CODESIZE SUB DUP1 PUSH2 0xA59 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x14C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A206F776E6572206973207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2073776170206D616E61676572206973207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x17F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168 DUP4 PUSH2 0x130 JUMP JUMPDEST SWAP2 POP PUSH2 0x176 PUSH1 0x20 DUP5 ADD PUSH2 0x130 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CB DUP1 PUSH2 0x18E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69328DEC EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x709D039D EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616E6E6F7420776974686472617720746F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25C JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A20455448207472616E73666572206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST POP PUSH2 0x270 JUMP JUMPDEST PUSH2 0x270 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xCBCDBDF10631A43CC99C80ACACE8232649421C3F4F73919F16013D47C83A687A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x308 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x4232D48319210B7BC959A61FD7785051DA1497DF2A1400E3340F42A8A6EFD541 SWAP1 PUSH2 0x391 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3F4 SWAP1 DUP5 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x46F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4DD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x5C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x62F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x628 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x126 JUMP JUMPDEST POP DUP2 PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x644 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x6AD PUSH1 0x40 DUP6 ADD PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D5 DUP6 PUSH2 0x65E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x740 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x779 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x73D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4DD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x878 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x85F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x761 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x21 CODECOPY 0xD4 PUSH29 0x8F89E7B9E607D51232E069A10870614CE5F565E2A6107B29954B696473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"263:1569:6:-:0;;;715:295;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;783:20:6;;775:68;;;;-1:-1:-1;;;775:68:6;;696:2:11;775:68:6;;;678:21:11;735:2;715:18;;;708:30;774:34;754:18;;;747:62;-1:-1:-1;;;825:18:11;;;818:33;868:19;;775:68:6;;;;;;;;;-1:-1:-1;;;;;861:26:6;;853:81;;;;-1:-1:-1;;;853:81:6;;1100:2:11;853:81:6;;;1082:21:11;1139:2;1119:18;;;1112:30;1178:34;1158:18;;;1151:62;-1:-1:-1;;;1229:18:11;;;1222:40;1279:19;;853:81:6;898:406:11;853:81:6;953:5;:14;;-1:-1:-1;;;;;953:14:6;;;-1:-1:-1;;;;;;953:14:6;;;;;;;;977:26;;;;;;;;;;;263:1569;;14:177:11;93:13;;-1:-1:-1;;;;;135:31:11;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;898:406::-;263:1569:6;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1575":{"entryPoint":null,"id":1575,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_505":{"entryPoint":1017,"id":505,"parameterSlots":2,"returnSlots":0},"@_revert_883":{"entryPoint":null,"id":883,"parameterSlots":2,"returnSlots":0},"@execute_1610":{"entryPoint":703,"id":1610,"parameterSlots":4,"returnSlots":2},"@functionCallWithValue_708":{"entryPoint":1253,"id":708,"parameterSlots":4,"returnSlots":1},"@functionCall_644":{"entryPoint":1230,"id":644,"parameterSlots":3,"returnSlots":1},"@isContract_572":{"entryPoint":null,"id":572,"parameterSlots":1,"returnSlots":1},"@owner_1506":{"entryPoint":null,"id":1506,"parameterSlots":0,"returnSlots":0},"@safeTransfer_211":{"entryPoint":930,"id":211,"parameterSlots":3,"returnSlots":0},"@swapManager_1509":{"entryPoint":null,"id":1509,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_839":{"entryPoint":1472,"id":839,"parameterSlots":4,"returnSlots":1},"@withdraw_1670":{"entryPoint":252,"id":1670,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":1630,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_address":{"entryPoint":1658,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":1718,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2109,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":1889,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2029,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":1933,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2178,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32dd410984bef2bdfdef125880368ec1269daa3858f98485cbe6ef6fe38878fb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4ad542fc758949f2eac41186c24b6c7c9118aa12ce89931fcbcd70c2a1bcf2ed__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_506443333bcaabf6bbdd18bc57ac25e5a604386cc920f2333665e0320024f142__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1960,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bool__to_t_uint256_t_bytes_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":2045,"id":null,"parameterSlots":5,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1853,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7190:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:11","statements":[{"nodeType":"YulAssignment","src":"73:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:11"},"nodeType":"YulFunctionCall","src":"82:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:11"}]},{"body":{"nodeType":"YulBlock","src":"165:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:11"},"nodeType":"YulFunctionCall","src":"167:12:11"},"nodeType":"YulExpressionStatement","src":"167:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:11"},"nodeType":"YulFunctionCall","src":"146:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:11"},"nodeType":"YulFunctionCall","src":"142:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:11"},"nodeType":"YulFunctionCall","src":"131:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:11"},"nodeType":"YulFunctionCall","src":"121:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:11"},"nodeType":"YulFunctionCall","src":"114:50:11"},"nodeType":"YulIf","src":"111:70:11"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:11","type":""}],"src":"14:173:11"},{"body":{"nodeType":"YulBlock","src":"296:224:11","statements":[{"body":{"nodeType":"YulBlock","src":"342:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"351:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"354:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"344:6:11"},"nodeType":"YulFunctionCall","src":"344:12:11"},"nodeType":"YulExpressionStatement","src":"344:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"317:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"326:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"313:3:11"},"nodeType":"YulFunctionCall","src":"313:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"338:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"309:3:11"},"nodeType":"YulFunctionCall","src":"309:32:11"},"nodeType":"YulIf","src":"306:52:11"},{"nodeType":"YulAssignment","src":"367:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"396:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"377:18:11"},"nodeType":"YulFunctionCall","src":"377:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"367:6:11"}]},{"nodeType":"YulAssignment","src":"415:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"442:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"453:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"438:3:11"},"nodeType":"YulFunctionCall","src":"438:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"425:12:11"},"nodeType":"YulFunctionCall","src":"425:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"415:6:11"}]},{"nodeType":"YulAssignment","src":"466:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"499:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"510:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"495:3:11"},"nodeType":"YulFunctionCall","src":"495:18:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"476:18:11"},"nodeType":"YulFunctionCall","src":"476:38:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"466:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"246:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"257:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"269:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"277:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"285:6:11","type":""}],"src":"192:328:11"},{"body":{"nodeType":"YulBlock","src":"626:102:11","statements":[{"nodeType":"YulAssignment","src":"636:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"648:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"659:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"644:3:11"},"nodeType":"YulFunctionCall","src":"644:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"636:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"678:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"693:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"709:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"714:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"705:3:11"},"nodeType":"YulFunctionCall","src":"705:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"718:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"701:3:11"},"nodeType":"YulFunctionCall","src":"701:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"689:3:11"},"nodeType":"YulFunctionCall","src":"689:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"671:6:11"},"nodeType":"YulFunctionCall","src":"671:51:11"},"nodeType":"YulExpressionStatement","src":"671:51:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"595:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"606:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"617:4:11","type":""}],"src":"525:203:11"},{"body":{"nodeType":"YulBlock","src":"856:610:11","statements":[{"body":{"nodeType":"YulBlock","src":"902:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"911:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"914:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"904:6:11"},"nodeType":"YulFunctionCall","src":"904:12:11"},"nodeType":"YulExpressionStatement","src":"904:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"877:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"886:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"873:3:11"},"nodeType":"YulFunctionCall","src":"873:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"898:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"869:3:11"},"nodeType":"YulFunctionCall","src":"869:32:11"},"nodeType":"YulIf","src":"866:52:11"},{"nodeType":"YulAssignment","src":"927:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"956:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"937:18:11"},"nodeType":"YulFunctionCall","src":"937:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"927:6:11"}]},{"nodeType":"YulAssignment","src":"975:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1002:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1013:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"998:3:11"},"nodeType":"YulFunctionCall","src":"998:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"985:12:11"},"nodeType":"YulFunctionCall","src":"985:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"975:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"1026:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1057:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1068:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1053:3:11"},"nodeType":"YulFunctionCall","src":"1053:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1040:12:11"},"nodeType":"YulFunctionCall","src":"1040:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1030:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1081:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1091:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1085:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1136:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1145:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1138:6:11"},"nodeType":"YulFunctionCall","src":"1138:12:11"},"nodeType":"YulExpressionStatement","src":"1138:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1124:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1132:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1121:2:11"},"nodeType":"YulFunctionCall","src":"1121:14:11"},"nodeType":"YulIf","src":"1118:34:11"},{"nodeType":"YulVariableDeclaration","src":"1161:32:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1175:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1186:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1171:3:11"},"nodeType":"YulFunctionCall","src":"1171:22:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1165:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1241:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1250:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1253:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1243:6:11"},"nodeType":"YulFunctionCall","src":"1243:12:11"},"nodeType":"YulExpressionStatement","src":"1243:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1220:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"1224:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1216:3:11"},"nodeType":"YulFunctionCall","src":"1216:13:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1231:7:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1212:3:11"},"nodeType":"YulFunctionCall","src":"1212:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1205:6:11"},"nodeType":"YulFunctionCall","src":"1205:35:11"},"nodeType":"YulIf","src":"1202:55:11"},{"nodeType":"YulVariableDeclaration","src":"1266:30:11","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1293:2:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1280:12:11"},"nodeType":"YulFunctionCall","src":"1280:16:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1270:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1323:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1332:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1335:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1325:6:11"},"nodeType":"YulFunctionCall","src":"1325:12:11"},"nodeType":"YulExpressionStatement","src":"1325:12:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1311:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1319:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1308:2:11"},"nodeType":"YulFunctionCall","src":"1308:14:11"},"nodeType":"YulIf","src":"1305:34:11"},{"body":{"nodeType":"YulBlock","src":"1389:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1398:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1401:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1391:6:11"},"nodeType":"YulFunctionCall","src":"1391:12:11"},"nodeType":"YulExpressionStatement","src":"1391:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1362:2:11"},{"name":"length","nodeType":"YulIdentifier","src":"1366:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1358:3:11"},"nodeType":"YulFunctionCall","src":"1358:15:11"},{"kind":"number","nodeType":"YulLiteral","src":"1375:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1354:3:11"},"nodeType":"YulFunctionCall","src":"1354:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1380:7:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1351:2:11"},"nodeType":"YulFunctionCall","src":"1351:37:11"},"nodeType":"YulIf","src":"1348:57:11"},{"nodeType":"YulAssignment","src":"1414:21:11","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1428:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"1432:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1424:3:11"},"nodeType":"YulFunctionCall","src":"1424:11:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1414:6:11"}]},{"nodeType":"YulAssignment","src":"1444:16:11","value":{"name":"length","nodeType":"YulIdentifier","src":"1454:6:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1444:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"798:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"809:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"821:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"829:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"837:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"845:6:11","type":""}],"src":"733:733:11"},{"body":{"nodeType":"YulBlock","src":"1537:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1547:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1556:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1551:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1616:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1641:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"1646:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1637:3:11"},"nodeType":"YulFunctionCall","src":"1637:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1660:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"1665:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1656:3:11"},"nodeType":"YulFunctionCall","src":"1656:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1650:5:11"},"nodeType":"YulFunctionCall","src":"1650:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1630:6:11"},"nodeType":"YulFunctionCall","src":"1630:39:11"},"nodeType":"YulExpressionStatement","src":"1630:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1577:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"1580:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1574:2:11"},"nodeType":"YulFunctionCall","src":"1574:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1588:19:11","statements":[{"nodeType":"YulAssignment","src":"1590:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1599:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"1602:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:11"},"nodeType":"YulFunctionCall","src":"1595:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1590:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"1570:3:11","statements":[]},"src":"1566:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1699:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"1704:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1695:3:11"},"nodeType":"YulFunctionCall","src":"1695:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1688:6:11"},"nodeType":"YulFunctionCall","src":"1688:27:11"},"nodeType":"YulExpressionStatement","src":"1688:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1515:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1520:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"1525:6:11","type":""}],"src":"1471:250:11"},{"body":{"nodeType":"YulBlock","src":"1775:221:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1785:26:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1805:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1799:5:11"},"nodeType":"YulFunctionCall","src":"1799:12:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1789:6:11","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1827:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"1832:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:11"},"nodeType":"YulFunctionCall","src":"1820:19:11"},"nodeType":"YulExpressionStatement","src":"1820:19:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1887:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1894:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1883:3:11"},"nodeType":"YulFunctionCall","src":"1883:16:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1905:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1910:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1901:3:11"},"nodeType":"YulFunctionCall","src":"1901:14:11"},{"name":"length","nodeType":"YulIdentifier","src":"1917:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1848:34:11"},"nodeType":"YulFunctionCall","src":"1848:76:11"},"nodeType":"YulExpressionStatement","src":"1848:76:11"},{"nodeType":"YulAssignment","src":"1933:57:11","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1948:3:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1961:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1969:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1957:3:11"},"nodeType":"YulFunctionCall","src":"1957:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1978:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1974:3:11"},"nodeType":"YulFunctionCall","src":"1974:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1953:3:11"},"nodeType":"YulFunctionCall","src":"1953:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1944:3:11"},"nodeType":"YulFunctionCall","src":"1944:39:11"},{"kind":"number","nodeType":"YulLiteral","src":"1985:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1940:3:11"},"nodeType":"YulFunctionCall","src":"1940:50:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1933:3:11"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1752:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1759:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1767:3:11","type":""}],"src":"1726:270:11"},{"body":{"nodeType":"YulBlock","src":"2142:157:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2159:9:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2184:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2177:6:11"},"nodeType":"YulFunctionCall","src":"2177:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2170:6:11"},"nodeType":"YulFunctionCall","src":"2170:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2152:6:11"},"nodeType":"YulFunctionCall","src":"2152:41:11"},"nodeType":"YulExpressionStatement","src":"2152:41:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2213:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2224:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2209:3:11"},"nodeType":"YulFunctionCall","src":"2209:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"2229:2:11","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2202:6:11"},"nodeType":"YulFunctionCall","src":"2202:30:11"},"nodeType":"YulExpressionStatement","src":"2202:30:11"},{"nodeType":"YulAssignment","src":"2241:52:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2266:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2289:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2274:3:11"},"nodeType":"YulFunctionCall","src":"2274:18:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"2249:16:11"},"nodeType":"YulFunctionCall","src":"2249:44:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2241:4:11"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2103:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2114:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2122:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2133:4:11","type":""}],"src":"2001:298:11"},{"body":{"nodeType":"YulBlock","src":"2478:227:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2495:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2506:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2488:6:11"},"nodeType":"YulFunctionCall","src":"2488:21:11"},"nodeType":"YulExpressionStatement","src":"2488:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2529:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2540:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2525:3:11"},"nodeType":"YulFunctionCall","src":"2525:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"2545:2:11","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2518:6:11"},"nodeType":"YulFunctionCall","src":"2518:30:11"},"nodeType":"YulExpressionStatement","src":"2518:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2568:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2579:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2564:3:11"},"nodeType":"YulFunctionCall","src":"2564:18:11"},{"hexValue":"576f726b657257616c6c65743a2063616c6c6572206973206e6f742074686520","kind":"string","nodeType":"YulLiteral","src":"2584:34:11","type":"","value":"WorkerWallet: caller is not the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2557:6:11"},"nodeType":"YulFunctionCall","src":"2557:62:11"},"nodeType":"YulExpressionStatement","src":"2557:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2639:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2650:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2635:3:11"},"nodeType":"YulFunctionCall","src":"2635:18:11"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"2655:7:11","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2628:6:11"},"nodeType":"YulFunctionCall","src":"2628:35:11"},"nodeType":"YulExpressionStatement","src":"2628:35:11"},{"nodeType":"YulAssignment","src":"2672:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2684:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2695:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2680:3:11"},"nodeType":"YulFunctionCall","src":"2680:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2672:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_506443333bcaabf6bbdd18bc57ac25e5a604386cc920f2333665e0320024f142__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2455:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2469:4:11","type":""}],"src":"2304:401:11"},{"body":{"nodeType":"YulBlock","src":"2884:235:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2901:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2912:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2894:6:11"},"nodeType":"YulFunctionCall","src":"2894:21:11"},"nodeType":"YulExpressionStatement","src":"2894:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2935:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2946:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2931:3:11"},"nodeType":"YulFunctionCall","src":"2931:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"2951:2:11","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2924:6:11"},"nodeType":"YulFunctionCall","src":"2924:30:11"},"nodeType":"YulExpressionStatement","src":"2924:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2974:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2985:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2970:3:11"},"nodeType":"YulFunctionCall","src":"2970:18:11"},{"hexValue":"576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f","kind":"string","nodeType":"YulLiteral","src":"2990:34:11","type":"","value":"WorkerWallet: cannot withdraw to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2963:6:11"},"nodeType":"YulFunctionCall","src":"2963:62:11"},"nodeType":"YulExpressionStatement","src":"2963:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3045:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3056:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3041:3:11"},"nodeType":"YulFunctionCall","src":"3041:18:11"},{"hexValue":"207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"3061:15:11","type":"","value":" zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3034:6:11"},"nodeType":"YulFunctionCall","src":"3034:43:11"},"nodeType":"YulExpressionStatement","src":"3034:43:11"},{"nodeType":"YulAssignment","src":"3086:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3098:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3109:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3094:3:11"},"nodeType":"YulFunctionCall","src":"3094:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3086:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_32dd410984bef2bdfdef125880368ec1269daa3858f98485cbe6ef6fe38878fb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2861:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2875:4:11","type":""}],"src":"2710:409:11"},{"body":{"nodeType":"YulBlock","src":"3315:14:11","statements":[{"nodeType":"YulAssignment","src":"3317:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"3324:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3317:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3299:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3307:3:11","type":""}],"src":"3124:205:11"},{"body":{"nodeType":"YulBlock","src":"3508:223:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3525:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3536:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3518:6:11"},"nodeType":"YulFunctionCall","src":"3518:21:11"},"nodeType":"YulExpressionStatement","src":"3518:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3559:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3570:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3555:3:11"},"nodeType":"YulFunctionCall","src":"3555:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"3575:2:11","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3548:6:11"},"nodeType":"YulFunctionCall","src":"3548:30:11"},"nodeType":"YulExpressionStatement","src":"3548:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3598:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3609:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3594:3:11"},"nodeType":"YulFunctionCall","src":"3594:18:11"},{"hexValue":"576f726b657257616c6c65743a20455448207472616e73666572206661696c65","kind":"string","nodeType":"YulLiteral","src":"3614:34:11","type":"","value":"WorkerWallet: ETH transfer faile"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3587:6:11"},"nodeType":"YulFunctionCall","src":"3587:62:11"},"nodeType":"YulExpressionStatement","src":"3587:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3669:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3680:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3665:3:11"},"nodeType":"YulFunctionCall","src":"3665:18:11"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"3685:3:11","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3658:6:11"},"nodeType":"YulFunctionCall","src":"3658:31:11"},"nodeType":"YulExpressionStatement","src":"3658:31:11"},{"nodeType":"YulAssignment","src":"3698:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3710:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3721:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3706:3:11"},"nodeType":"YulFunctionCall","src":"3706:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3698:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4ad542fc758949f2eac41186c24b6c7c9118aa12ce89931fcbcd70c2a1bcf2ed__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3485:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3499:4:11","type":""}],"src":"3334:397:11"},{"body":{"nodeType":"YulBlock","src":"3893:218:11","statements":[{"nodeType":"YulAssignment","src":"3903:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3915:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3926:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3911:3:11"},"nodeType":"YulFunctionCall","src":"3911:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3903:4:11"}]},{"nodeType":"YulVariableDeclaration","src":"3938:29:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3956:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3961:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3952:3:11"},"nodeType":"YulFunctionCall","src":"3952:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"3965:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3948:3:11"},"nodeType":"YulFunctionCall","src":"3948:19:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3942:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3983:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3998:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"4006:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3994:3:11"},"nodeType":"YulFunctionCall","src":"3994:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3976:6:11"},"nodeType":"YulFunctionCall","src":"3976:34:11"},"nodeType":"YulExpressionStatement","src":"3976:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4030:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4041:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4026:3:11"},"nodeType":"YulFunctionCall","src":"4026:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"4046:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4019:6:11"},"nodeType":"YulFunctionCall","src":"4019:34:11"},"nodeType":"YulExpressionStatement","src":"4019:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4073:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4084:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4069:3:11"},"nodeType":"YulFunctionCall","src":"4069:18:11"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4093:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"4101:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4089:3:11"},"nodeType":"YulFunctionCall","src":"4089:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4062:6:11"},"nodeType":"YulFunctionCall","src":"4062:43:11"},"nodeType":"YulExpressionStatement","src":"4062:43:11"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3846:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3857:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3865:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3873:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3884:4:11","type":""}],"src":"3736:375:11"},{"body":{"nodeType":"YulBlock","src":"4263:124:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4286:3:11"},{"name":"value0","nodeType":"YulIdentifier","src":"4291:6:11"},{"name":"value1","nodeType":"YulIdentifier","src":"4299:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4273:12:11"},"nodeType":"YulFunctionCall","src":"4273:33:11"},"nodeType":"YulExpressionStatement","src":"4273:33:11"},{"nodeType":"YulVariableDeclaration","src":"4315:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4329:3:11"},{"name":"value1","nodeType":"YulIdentifier","src":"4334:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4325:3:11"},"nodeType":"YulFunctionCall","src":"4325:16:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4319:2:11","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4357:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"4361:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4350:6:11"},"nodeType":"YulFunctionCall","src":"4350:13:11"},"nodeType":"YulExpressionStatement","src":"4350:13:11"},{"nodeType":"YulAssignment","src":"4372:9:11","value":{"name":"_1","nodeType":"YulIdentifier","src":"4379:2:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4372:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4231:3:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4236:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4244:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4255:3:11","type":""}],"src":"4116:271:11"},{"body":{"nodeType":"YulBlock","src":"4571:364:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4588:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"4599:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4581:6:11"},"nodeType":"YulFunctionCall","src":"4581:25:11"},"nodeType":"YulExpressionStatement","src":"4581:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4626:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4637:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:11"},"nodeType":"YulFunctionCall","src":"4622:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"4642:2:11","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4615:6:11"},"nodeType":"YulFunctionCall","src":"4615:30:11"},"nodeType":"YulExpressionStatement","src":"4615:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4665:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4676:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4661:3:11"},"nodeType":"YulFunctionCall","src":"4661:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"4681:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4654:6:11"},"nodeType":"YulFunctionCall","src":"4654:34:11"},"nodeType":"YulExpressionStatement","src":"4654:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4714:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4725:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4710:3:11"},"nodeType":"YulFunctionCall","src":"4710:19:11"},{"name":"value1","nodeType":"YulIdentifier","src":"4731:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"4739:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4697:12:11"},"nodeType":"YulFunctionCall","src":"4697:49:11"},"nodeType":"YulExpressionStatement","src":"4697:49:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4770:9:11"},{"name":"value2","nodeType":"YulIdentifier","src":"4781:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4766:3:11"},"nodeType":"YulFunctionCall","src":"4766:22:11"},{"kind":"number","nodeType":"YulLiteral","src":"4790:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4762:3:11"},"nodeType":"YulFunctionCall","src":"4762:32:11"},{"kind":"number","nodeType":"YulLiteral","src":"4796:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4755:6:11"},"nodeType":"YulFunctionCall","src":"4755:43:11"},"nodeType":"YulExpressionStatement","src":"4755:43:11"},{"nodeType":"YulAssignment","src":"4807:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4823:9:11"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4842:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4850:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4838:3:11"},"nodeType":"YulFunctionCall","src":"4838:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4859:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4855:3:11"},"nodeType":"YulFunctionCall","src":"4855:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4834:3:11"},"nodeType":"YulFunctionCall","src":"4834:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4819:3:11"},"nodeType":"YulFunctionCall","src":"4819:45:11"},{"kind":"number","nodeType":"YulLiteral","src":"4866:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4815:3:11"},"nodeType":"YulFunctionCall","src":"4815:55:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4807:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4890:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4901:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4886:3:11"},"nodeType":"YulFunctionCall","src":"4886:18:11"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4920:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4913:6:11"},"nodeType":"YulFunctionCall","src":"4913:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4906:6:11"},"nodeType":"YulFunctionCall","src":"4906:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4879:6:11"},"nodeType":"YulFunctionCall","src":"4879:50:11"},"nodeType":"YulExpressionStatement","src":"4879:50:11"}]},"name":"abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bool__to_t_uint256_t_bytes_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4516:9:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4527:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4535:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4543:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4551:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4562:4:11","type":""}],"src":"4392:543:11"},{"body":{"nodeType":"YulBlock","src":"5069:145:11","statements":[{"nodeType":"YulAssignment","src":"5079:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5091:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5102:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5087:3:11"},"nodeType":"YulFunctionCall","src":"5087:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5079:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5121:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5136:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5152:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5157:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5148:3:11"},"nodeType":"YulFunctionCall","src":"5148:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"5161:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5144:3:11"},"nodeType":"YulFunctionCall","src":"5144:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5132:3:11"},"nodeType":"YulFunctionCall","src":"5132:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5114:6:11"},"nodeType":"YulFunctionCall","src":"5114:51:11"},"nodeType":"YulExpressionStatement","src":"5114:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5196:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:11"},"nodeType":"YulFunctionCall","src":"5181:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"5201:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5174:6:11"},"nodeType":"YulFunctionCall","src":"5174:34:11"},"nodeType":"YulExpressionStatement","src":"5174:34:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5030:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5041:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5049:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5060:4:11","type":""}],"src":"4940:274:11"},{"body":{"nodeType":"YulBlock","src":"5297:199:11","statements":[{"body":{"nodeType":"YulBlock","src":"5343:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5352:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5355:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5345:6:11"},"nodeType":"YulFunctionCall","src":"5345:12:11"},"nodeType":"YulExpressionStatement","src":"5345:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5318:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5327:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5314:3:11"},"nodeType":"YulFunctionCall","src":"5314:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5339:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5310:3:11"},"nodeType":"YulFunctionCall","src":"5310:32:11"},"nodeType":"YulIf","src":"5307:52:11"},{"nodeType":"YulVariableDeclaration","src":"5368:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5387:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5381:5:11"},"nodeType":"YulFunctionCall","src":"5381:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5372:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5450:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5459:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5462:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5452:6:11"},"nodeType":"YulFunctionCall","src":"5452:12:11"},"nodeType":"YulExpressionStatement","src":"5452:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5419:5:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5440:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5433:6:11"},"nodeType":"YulFunctionCall","src":"5433:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5426:6:11"},"nodeType":"YulFunctionCall","src":"5426:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5416:2:11"},"nodeType":"YulFunctionCall","src":"5416:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5409:6:11"},"nodeType":"YulFunctionCall","src":"5409:40:11"},"nodeType":"YulIf","src":"5406:60:11"},{"nodeType":"YulAssignment","src":"5475:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"5485:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5475:6:11"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5263:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5274:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5286:6:11","type":""}],"src":"5219:277:11"},{"body":{"nodeType":"YulBlock","src":"5675:232:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5692:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5703:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5685:6:11"},"nodeType":"YulFunctionCall","src":"5685:21:11"},"nodeType":"YulExpressionStatement","src":"5685:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5726:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5737:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5722:3:11"},"nodeType":"YulFunctionCall","src":"5722:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"5742:2:11","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5715:6:11"},"nodeType":"YulFunctionCall","src":"5715:30:11"},"nodeType":"YulExpressionStatement","src":"5715:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5765:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5776:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5761:3:11"},"nodeType":"YulFunctionCall","src":"5761:18:11"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"5781:34:11","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5754:6:11"},"nodeType":"YulFunctionCall","src":"5754:62:11"},"nodeType":"YulExpressionStatement","src":"5754:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5836:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5847:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5832:3:11"},"nodeType":"YulFunctionCall","src":"5832:18:11"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"5852:12:11","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5825:6:11"},"nodeType":"YulFunctionCall","src":"5825:40:11"},"nodeType":"YulExpressionStatement","src":"5825:40:11"},{"nodeType":"YulAssignment","src":"5874:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5886:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5897:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5882:3:11"},"nodeType":"YulFunctionCall","src":"5882:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5874:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5652:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5666:4:11","type":""}],"src":"5501:406:11"},{"body":{"nodeType":"YulBlock","src":"6086:228:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6103:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6114:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6096:6:11"},"nodeType":"YulFunctionCall","src":"6096:21:11"},"nodeType":"YulExpressionStatement","src":"6096:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6137:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6148:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6133:3:11"},"nodeType":"YulFunctionCall","src":"6133:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:11","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6126:6:11"},"nodeType":"YulFunctionCall","src":"6126:30:11"},"nodeType":"YulExpressionStatement","src":"6126:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6176:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6187:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6172:3:11"},"nodeType":"YulFunctionCall","src":"6172:18:11"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"6192:34:11","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6165:6:11"},"nodeType":"YulFunctionCall","src":"6165:62:11"},"nodeType":"YulExpressionStatement","src":"6165:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6247:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6258:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6243:3:11"},"nodeType":"YulFunctionCall","src":"6243:18:11"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"6263:8:11","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6236:6:11"},"nodeType":"YulFunctionCall","src":"6236:36:11"},"nodeType":"YulExpressionStatement","src":"6236:36:11"},{"nodeType":"YulAssignment","src":"6281:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6293:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6304:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6289:3:11"},"nodeType":"YulFunctionCall","src":"6289:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6281:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6063:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6077:4:11","type":""}],"src":"5912:402:11"},{"body":{"nodeType":"YulBlock","src":"6456:150:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6466:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6486:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6480:5:11"},"nodeType":"YulFunctionCall","src":"6480:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6470:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6541:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6549:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6537:3:11"},"nodeType":"YulFunctionCall","src":"6537:17:11"},{"name":"pos","nodeType":"YulIdentifier","src":"6556:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"6561:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6502:34:11"},"nodeType":"YulFunctionCall","src":"6502:66:11"},"nodeType":"YulExpressionStatement","src":"6502:66:11"},{"nodeType":"YulAssignment","src":"6577:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6588:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"6593:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6584:3:11"},"nodeType":"YulFunctionCall","src":"6584:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6577:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6432:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6437:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6448:3:11","type":""}],"src":"6319:287:11"},{"body":{"nodeType":"YulBlock","src":"6785:179:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6802:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6813:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6795:6:11"},"nodeType":"YulFunctionCall","src":"6795:21:11"},"nodeType":"YulExpressionStatement","src":"6795:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6836:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6847:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6832:3:11"},"nodeType":"YulFunctionCall","src":"6832:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"6852:2:11","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6825:6:11"},"nodeType":"YulFunctionCall","src":"6825:30:11"},"nodeType":"YulExpressionStatement","src":"6825:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6875:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6886:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6871:3:11"},"nodeType":"YulFunctionCall","src":"6871:18:11"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"6891:31:11","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6864:6:11"},"nodeType":"YulFunctionCall","src":"6864:59:11"},"nodeType":"YulExpressionStatement","src":"6864:59:11"},{"nodeType":"YulAssignment","src":"6932:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6944:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6955:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6940:3:11"},"nodeType":"YulFunctionCall","src":"6940:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6932:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6762:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6776:4:11","type":""}],"src":"6611:353:11"},{"body":{"nodeType":"YulBlock","src":"7090:98:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7107:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7118:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7100:6:11"},"nodeType":"YulFunctionCall","src":"7100:21:11"},"nodeType":"YulExpressionStatement","src":"7100:21:11"},{"nodeType":"YulAssignment","src":"7130:52:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7155:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7167:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7178:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7163:3:11"},"nodeType":"YulFunctionCall","src":"7163:18:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"7138:16:11"},"nodeType":"YulFunctionCall","src":"7138:44:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7130:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7059:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7070:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7081:4:11","type":""}],"src":"6969:219:11"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_506443333bcaabf6bbdd18bc57ac25e5a604386cc920f2333665e0320024f142__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"WorkerWallet: caller is not the \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_32dd410984bef2bdfdef125880368ec1269daa3858f98485cbe6ef6fe38878fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"WorkerWallet: cannot withdraw to\")\n        mstore(add(headStart, 96), \" zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_4ad542fc758949f2eac41186c24b6c7c9118aa12ce89931fcbcd70c2a1bcf2ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"WorkerWallet: ETH transfer faile\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bool__to_t_uint256_t_bytes_memory_ptr_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        mstore(add(headStart, 96), value2)\n        calldatacopy(add(headStart, 128), value1, value2)\n        mstore(add(add(headStart, value2), 128), 0)\n        tail := add(add(headStart, and(add(value2, 31), not(31))), 128)\n        mstore(add(headStart, 64), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100435760003560e01c806369328dec1461004f578063709d039d146100715780638da5cb5b146100ae578063b61d27f6146100ce57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a36600461067a565b6100fc565b005b34801561007d57600080fd5b50600154610091906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ba57600080fd5b50600054610091906001600160a01b031681565b3480156100da57600080fd5b506100ee6100e93660046106b6565b6102bf565b6040516100a592919061078d565b6000546001600160a01b0316331461012f5760405162461bcd60e51b8152600401610126906107a8565b60405180910390fd5b6001600160a01b03811661019b5760405162461bcd60e51b815260206004820152602d60248201527f576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f60448201526c207a65726f206164647265737360981b6064820152608401610126565b6001600160a01b03831661025c576000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146101f6576040519150601f19603f3d011682016040523d82523d6000602084013e6101fb565b606091505b50509050806102565760405162461bcd60e51b815260206004820152602160248201527f576f726b657257616c6c65743a20455448207472616e73666572206661696c656044820152601960fa1b6064820152608401610126565b50610270565b6102706001600160a01b03841682846103a2565b604080516001600160a01b0385811682526020820185905283168183015290517fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9181900360600190a1505050565b600080546060906001600160a01b031633146102ed5760405162461bcd60e51b8152600401610126906107a8565b856001600160a01b03168585856040516103089291906107ed565b60006040518083038185875af1925050503d8060008114610345576040519150601f19603f3d011682016040523d82523d6000602084013e61034a565b606091505b5060405191935091506001600160a01b038716907f4232d48319210b7bc959a61fd7785051da1497df2a1400e3340f42a8a6efd541906103919088908890889088906107fd565b60405180910390a294509492505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103f49084906103f9565b505050565b600061044e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104ce9092919063ffffffff16565b905080516000148061046f57508080602001905181019061046f919061083d565b6103f45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610126565b60606104dd84846000856104e5565b949350505050565b6060824710156105465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610126565b600080866001600160a01b031685876040516105629190610866565b60006040518083038185875af1925050503d806000811461059f576040519150601f19603f3d011682016040523d82523d6000602084013e6105a4565b606091505b50915091506105b5878383876105c0565b979650505050505050565b6060831561062f578251600003610628576001600160a01b0385163b6106285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610126565b50816104dd565b6104dd83838151156106445781518083602001fd5b8060405162461bcd60e51b81526004016101269190610882565b80356001600160a01b038116811461067557600080fd5b919050565b60008060006060848603121561068f57600080fd5b6106988461065e565b9250602084013591506106ad6040850161065e565b90509250925092565b600080600080606085870312156106cc57600080fd5b6106d58561065e565b935060208501359250604085013567ffffffffffffffff808211156106f957600080fd5b818701915087601f83011261070d57600080fd5b81358181111561071c57600080fd5b88602082850101111561072e57600080fd5b95989497505060200194505050565b60005b83811015610758578181015183820152602001610740565b50506000910152565b6000815180845261077981602086016020860161073d565b601f01601f19169290920160200192915050565b82151581526040602082015260006104dd6040830184610761565b60208082526025908201527f576f726b657257616c6c65743a2063616c6c6572206973206e6f74207468652060408201526437bbb732b960d91b606082015260800190565b8183823760009101908152919050565b848152606060208201528260608201528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b60006020828403121561084f57600080fd5b8151801515811461085f57600080fd5b9392505050565b6000825161087881846020870161073d565b9190910192915050565b60208152600061085f602083018461076156fea2646970667358221220142139d47c8f89e7b9e607d51232e069a10870614ce5f565e2a6107b29954b6964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69328DEC EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x709D039D EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616E6E6F7420776974686472617720746F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25C JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A20455448207472616E73666572206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST POP PUSH2 0x270 JUMP JUMPDEST PUSH2 0x270 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xCBCDBDF10631A43CC99C80ACACE8232649421C3F4F73919F16013D47C83A687A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x308 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x4232D48319210B7BC959A61FD7785051DA1497DF2A1400E3340F42A8A6EFD541 SWAP1 PUSH2 0x391 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3F4 SWAP1 DUP5 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x46F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4DD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x5C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x62F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x628 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x126 JUMP JUMPDEST POP DUP2 PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x644 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x6AD PUSH1 0x40 DUP6 ADD PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D5 DUP6 PUSH2 0x65E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x740 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x779 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x73D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4DD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x878 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x85F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x761 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x21 CODECOPY 0xD4 PUSH29 0x8F89E7B9E607D51232E069A10870614CE5F565E2A6107B29954B696473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"263:1569:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1349:481;;;;;;;;;;-1:-1:-1;1349:481:6;;;;;:::i;:::-;;:::i;:::-;;376:35;;;;;;;;;;-1:-1:-1;376:35:6;;;;-1:-1:-1;;;;;376:35:6;;;;;;-1:-1:-1;;;;;689:32:11;;;671:51;;659:2;644:18;376:35:6;;;;;;;;341:29;;;;;;;;;;-1:-1:-1;341:29:6;;;;-1:-1:-1;;;;;341:29:6;;;1051:292;;;;;;;;;;-1:-1:-1;1051:292:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1349:481::-;501:5;;-1:-1:-1;;;;;501:5:6;487:10;:19;479:69;;;;-1:-1:-1;;;479:69:6;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1456:16:6;::::1;1448:74;;;::::0;-1:-1:-1;;;1448:74:6;;2912:2:11;1448:74:6::1;::::0;::::1;2894:21:11::0;2951:2;2931:18;;;2924:30;2990:34;2970:18;;;2963:62;-1:-1:-1;;;3041:18:11;;;3034:43;3094:19;;1448:74:6::1;2710:409:11::0;1448:74:6::1;-1:-1:-1::0;;;;;1545:19:6;::::1;1541:231;;1581:12;1599:2;-1:-1:-1::0;;;;;1599:7:6::1;1614:6;1599:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1580:45;;;1647:7;1639:53;;;::::0;-1:-1:-1;;;1639:53:6;;3536:2:11;1639:53:6::1;::::0;::::1;3518:21:11::0;3575:2;3555:18;;;3548:30;3614:34;3594:18;;;3587:62;-1:-1:-1;;;3665:18:11;;;3658:31;3706:19;;1639:53:6::1;3334:397:11::0;1639:53:6::1;1566:137;1541:231;;;1723:38;-1:-1:-1::0;;;;;1723:26:6;::::1;1750:2:::0;1754:6;1723:26:::1;:38::i;:::-;1795:28;::::0;;-1:-1:-1;;;;;3994:15:11;;;3976:34;;4041:2;4026:18;;4019:34;;;4089:15;;4069:18;;;4062:43;1795:28:6;;::::1;::::0;;;;3926:2:11;1795:28:6;;::::1;1349:481:::0;;;:::o;1051:292::-;1187:12;501:5;;1201:19;;-1:-1:-1;;;;;501:5:6;487:10;:19;479:69;;;;-1:-1:-1;;;479:69:6;;;;;;;:::i;:::-;1252:6:::1;-1:-1:-1::0;;;;;1252:11:6::1;1271:5;1278:4;;1252:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;1298:38:6::1;::::0;1232:51;;-1:-1:-1;1232:51:6;-1:-1:-1;;;;;;1298:38:6;::::1;::::0;::::1;::::0;::::1;::::0;1315:5;;1322:4;;;;1232:51;;1298:38:::1;:::i;:::-;;;;;;;;1051:292:::0;;;;;;;:::o;941:175:3:-;1050:58;;;-1:-1:-1;;;;;5132:32:11;;1050:58:3;;;5114:51:11;5181:18;;;;5174:34;;;1050:58:3;;;;;;;;;;5087:18:11;;;;1050:58:3;;;;;;;;-1:-1:-1;;;;;1050:58:3;-1:-1:-1;;;1050:58:3;;;1023:86;;1043:5;;1023:19;:86::i;:::-;941:175;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:3;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:3;;5703:2:11;5720:111:3;;;5685:21:11;5742:2;5722:18;;;5715:30;5781:34;5761:18;;;5754:62;-1:-1:-1;;;5832:18:11;;;5825:40;5882:19;;5720:111:3;5501:406:11;4108:223:4;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:4:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:4;;6114:2:11;5354:81:4;;;6096:21:11;6153:2;6133:18;;;6126:30;6192:34;6172:18;;;6165:62;-1:-1:-1;;;6243:18:11;;;6236:36;6289:19;;5354:81:4;5912:402:11;5354:81:4;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:4;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:4:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:4;;;8113:60;;;;-1:-1:-1;;;8113:60:4;;6813:2:11;8113:60:4;;;6795:21:11;6852:2;6832:18;;;6825:30;6891:31;6871:18;;;6864:59;6940:18;;8113:60:4;6611:353:11;8113:60:4;-1:-1:-1;8208:10:4;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:4;;;;;;;;:::i;14:173:11:-;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:328::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;453:2;442:9;438:18;425:32;415:42;;476:38;510:2;499:9;495:18;476:38;:::i;:::-;466:48;;192:328;;;;;:::o;733:733::-;821:6;829;837;845;898:2;886:9;877:7;873:23;869:32;866:52;;;914:1;911;904:12;866:52;937:29;956:9;937:29;:::i;:::-;927:39;;1013:2;1002:9;998:18;985:32;975:42;;1068:2;1057:9;1053:18;1040:32;1091:18;1132:2;1124:6;1121:14;1118:34;;;1148:1;1145;1138:12;1118:34;1186:6;1175:9;1171:22;1161:32;;1231:7;1224:4;1220:2;1216:13;1212:27;1202:55;;1253:1;1250;1243:12;1202:55;1293:2;1280:16;1319:2;1311:6;1308:14;1305:34;;;1335:1;1332;1325:12;1305:34;1380:7;1375:2;1366:6;1362:2;1358:15;1354:24;1351:37;1348:57;;;1401:1;1398;1391:12;1348:57;733:733;;;;-1:-1:-1;;1432:2:11;1424:11;;-1:-1:-1;;;733:733:11:o;1471:250::-;1556:1;1566:113;1580:6;1577:1;1574:13;1566:113;;;1656:11;;;1650:18;1637:11;;;1630:39;1602:2;1595:10;1566:113;;;-1:-1:-1;;1713:1:11;1695:16;;1688:27;1471:250::o;1726:270::-;1767:3;1805:5;1799:12;1832:6;1827:3;1820:19;1848:76;1917:6;1910:4;1905:3;1901:14;1894:4;1887:5;1883:16;1848:76;:::i;:::-;1978:2;1957:15;-1:-1:-1;;1953:29:11;1944:39;;;;1985:4;1940:50;;1726:270;-1:-1:-1;;1726:270:11:o;2001:298::-;2184:6;2177:14;2170:22;2159:9;2152:41;2229:2;2224;2213:9;2209:18;2202:30;2133:4;2249:44;2289:2;2278:9;2274:18;2266:6;2249:44;:::i;2304:401::-;2506:2;2488:21;;;2545:2;2525:18;;;2518:30;2584:34;2579:2;2564:18;;2557:62;-1:-1:-1;;;2650:2:11;2635:18;;2628:35;2695:3;2680:19;;2304:401::o;4116:271::-;4299:6;4291;4286:3;4273:33;4255:3;4325:16;;4350:13;;;4325:16;4116:271;-1:-1:-1;4116:271:11:o;4392:543::-;4599:6;4588:9;4581:25;4642:2;4637;4626:9;4622:18;4615:30;4681:6;4676:2;4665:9;4661:18;4654:34;4739:6;4731;4725:3;4714:9;4710:19;4697:49;4796:1;4766:22;;;4790:3;4762:32;;;4755:43;;;;4913:14;;4906:22;4901:2;4886:18;;4879:50;4859:2;4838:15;;;-1:-1:-1;;4834:29:11;4819:45;;;4815:55;;4392:543;-1:-1:-1;;4392:543:11:o;5219:277::-;5286:6;5339:2;5327:9;5318:7;5314:23;5310:32;5307:52;;;5355:1;5352;5345:12;5307:52;5387:9;5381:16;5440:5;5433:13;5426:21;5419:5;5416:32;5406:60;;5462:1;5459;5452:12;5406:60;5485:5;5219:277;-1:-1:-1;;;5219:277:11:o;6319:287::-;6448:3;6486:6;6480:13;6502:66;6561:6;6556:3;6549:4;6541:6;6537:17;6502:66;:::i;:::-;6584:16;;;;;6319:287;-1:-1:-1;;6319:287:11:o;6969:219::-;7118:2;7107:9;7100:21;7081:4;7138:44;7178:2;7167:9;7163:18;7155:6;7138:44;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"450200","executionCost":"infinite","totalCost":"infinite"},"external":{"execute(address,uint256,bytes)":"infinite","owner()":"2348","swapManager()":"2326","withdraw(address,uint256,address)":"infinite"}},"methodIdentifiers":{"execute(address,uint256,bytes)":"b61d27f6","owner()":"8da5cb5b","swapManager()":"709d039d","withdraw(address,uint256,address)":"69328dec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WorkerWallet.sol\":\"WorkerWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/WorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./interfaces/IWorkerWallet.sol\\\";\\nimport \\\"./interfaces/ISwapManager.sol\\\";\\n\\ncontract WorkerWallet is IWorkerWallet {\\n    using SafeERC20 for IERC20;\\n\\n    address public override owner;\\n    address public override swapManager;\\n    bool private initialized;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"WorkerWallet: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    modifier onlySwapManager() {\\n        require(msg.sender == swapManager, \\\"WorkerWallet: caller is not the swap manager\\\");\\n        _;\\n    }\\n\\n    constructor(address _owner, address _swapManager) {\\n        require(_owner != address(0), \\\"WorkerWallet: owner is zero address\\\");\\n        require(_swapManager != address(0), \\\"WorkerWallet: swap manager is zero address\\\");\\n        \\n        owner = _owner;\\n        swapManager = _swapManager;\\n    }\\n\\n    receive() external payable {}\\n\\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external override onlyOwner returns (bool success, bytes memory result) {\\n        (success, result) = target.call{value: value}(data);\\n        emit Executed(target, value, data, success);\\n    }\\n\\n    function withdraw(address token, uint256 amount, address to) external override onlyOwner {\\n        require(to != address(0), \\\"WorkerWallet: cannot withdraw to zero address\\\");\\n        \\n        if (token == address(0)) {\\n            (bool success, ) = to.call{value: amount}(\\\"\\\");\\n            require(success, \\\"WorkerWallet: ETH transfer failed\\\");\\n        } else {\\n            IERC20(token).safeTransfer(to, amount);\\n        }\\n        \\n        emit Withdrawn(token, amount, to);\\n    }\\n}\\n\",\"keccak256\":\"0xaf66df7911357536efec01ed1da116c560499107b75b27e5910a116172b675e4\",\"license\":\"MIT\"},\"contracts/interfaces/ISwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ISwapManager {\\n    struct SwapOrder {\\n        address initiator;\\n        address resolver;\\n        uint256 amountIn;\\n        uint256 amountOutMin;\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 deadline;\\n        bytes32 secretHash;\\n        bool isFulfilled;\\n        bool isRefunded;\\n    }\\n\\n    event OrderCreated(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n\\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        bytes32 secret\\n    );\\n\\n    event OrderRefunded(bytes32 indexed orderId);\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32);\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable;\\n\\n    function refundOrder(bytes32 orderId) external;\\n\\n    function registerWorkerWallet(address workerWallet) external;\\n    \\n    function getOrder(bytes32 orderId) external view returns (\\n        address initiator,\\n        address resolver,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 deadline,\\n        bytes32 secretHash,\\n        bool isFulfilled,\\n        bool isRefunded\\n    );\\n    \\n    /**\\n     * @notice Register a worker wallet that can be used to fulfill orders\\n     * @param workerWallet The address of the worker wallet to register\\n     */\\n}\\n\",\"keccak256\":\"0x29ca9e861fd2c3805cf6979bebd14111d3bb5adf435fa62ecf6b7904a85af20b\",\"license\":\"MIT\"},\"contracts/interfaces/IWorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IWorkerWallet {\\n    event Executed(address indexed target, uint256 value, bytes data, bool success);\\n    event Withdrawn(address token, uint256 amount, address to);\\n    \\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory result);\\n    \\n    function withdraw(address token, uint256 amount, address to) external;\\n    \\n    function owner() external view returns (address);\\n    \\n    function swapManager() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd06ff72662f22d4288875f589eb91c4cb09d28003282dce92e4cd56de351277c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1506,"contract":"contracts/WorkerWallet.sol:WorkerWallet","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":1509,"contract":"contracts/WorkerWallet.sol:WorkerWallet","label":"swapManager","offset":0,"slot":"1","type":"t_address"},{"astId":1511,"contract":"contracts/WorkerWallet.sol:WorkerWallet","label":"initialized","offset":20,"slot":"1","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/WorkerWalletFactory.sol":{"WorkerWalletFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"wallet","type":"address"}],"name":"WorkerWalletCreated","type":"event"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_swapManager","type":"address"}],"name":"computeWorkerWalletAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_swapManager","type":"address"}],"name":"createWorkerWallet","outputs":[{"internalType":"address","name":"workerWallet","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getWorkerWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isWorkerWallet","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610f5c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631ac38190146100515780631f6d2eac14610081578063aa2dead7146100b4578063af295f35146100dd575b600080fd5b61006461005f36600461042b565b6100f0565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a461008f36600461045e565b60016020526000908152604090205460ff1681565b6040519015158152602001610078565b6100646100c236600461045e565b6000602081905290815260409020546001600160a01b031681565b6100646100eb36600461042b565b6101ce565b6040516001600160601b0319606084811b8216602084015283901b16603482015242604882015260009081906001600160f81b0319903090606801604051602081830303815290604052805190602001206040518060200161015190610402565b6020820181038252601f19601f82011660405250805190602001206040516020016101ae94939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051808303601f190181529190528051602090910120949350505050565b6001600160a01b038281166000908152602081905260408120549091161561024f5760405162461bcd60e51b815260206004820152602a60248201527f576f726b657257616c6c6574466163746f72793a2077616c6c657420616c72656044820152696164792065786973747360b01b606482015260840160405180910390fd5b60006040518060200161026190610402565b601f1982820381018352601f9091011660408181526001600160a01b038781166020840152861681830152805180830382018152606083019091529192506000906102b290849084906080016104b0565b60408051601f19818403018152908290526001600160601b0319606089811b8216602085015288901b1660348301524260488301529150600090606801604051602081830303815290604052805190602001209050808251602084016000f59450843b61031e57600080fd5b6001600160a01b0387811660009081526020818152604080832080546001600160a01b0319168a861690811790915580845260019283905292819020805460ff191690921790915551636808d58760e01b8152600481019190915290871690636808d58790602401600060405180830381600087803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b50506040516001600160a01b0388811682528a1692507f2c91a2feb7f5c7e0c5681eb540d51f84de98235a2e0b6104fd4356684bd96f72915060200160405180910390a25050505092915050565b610a59806104ce83390190565b80356001600160a01b038116811461042657600080fd5b919050565b6000806040838503121561043e57600080fd5b6104478361040f565b91506104556020840161040f565b90509250929050565b60006020828403121561047057600080fd5b6104798261040f565b9392505050565b6000815160005b818110156104a15760208185018101518683015201610487565b50600093019283525090919050565b60006104c56104bf8386610480565b84610480565b94935050505056fe608060405234801561001057600080fd5b50604051610a59380380610a5983398101604081905261002f9161014c565b6001600160a01b0382166100965760405162461bcd60e51b815260206004820152602360248201527f576f726b657257616c6c65743a206f776e6572206973207a65726f206164647260448201526265737360e81b60648201526084015b60405180910390fd5b6001600160a01b0381166100ff5760405162461bcd60e51b815260206004820152602a60248201527f576f726b657257616c6c65743a2073776170206d616e61676572206973207a65604482015269726f206164647265737360b01b606482015260840161008d565b600080546001600160a01b039384166001600160a01b0319918216179091556001805492909316911617905561017f565b80516001600160a01b038116811461014757600080fd5b919050565b6000806040838503121561015f57600080fd5b61016883610130565b915061017660208401610130565b90509250929050565b6108cb8061018e6000396000f3fe6080604052600436106100435760003560e01c806369328dec1461004f578063709d039d146100715780638da5cb5b146100ae578063b61d27f6146100ce57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a36600461067a565b6100fc565b005b34801561007d57600080fd5b50600154610091906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ba57600080fd5b50600054610091906001600160a01b031681565b3480156100da57600080fd5b506100ee6100e93660046106b6565b6102bf565b6040516100a592919061078d565b6000546001600160a01b0316331461012f5760405162461bcd60e51b8152600401610126906107a8565b60405180910390fd5b6001600160a01b03811661019b5760405162461bcd60e51b815260206004820152602d60248201527f576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f60448201526c207a65726f206164647265737360981b6064820152608401610126565b6001600160a01b03831661025c576000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146101f6576040519150601f19603f3d011682016040523d82523d6000602084013e6101fb565b606091505b50509050806102565760405162461bcd60e51b815260206004820152602160248201527f576f726b657257616c6c65743a20455448207472616e73666572206661696c656044820152601960fa1b6064820152608401610126565b50610270565b6102706001600160a01b03841682846103a2565b604080516001600160a01b0385811682526020820185905283168183015290517fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9181900360600190a1505050565b600080546060906001600160a01b031633146102ed5760405162461bcd60e51b8152600401610126906107a8565b856001600160a01b03168585856040516103089291906107ed565b60006040518083038185875af1925050503d8060008114610345576040519150601f19603f3d011682016040523d82523d6000602084013e61034a565b606091505b5060405191935091506001600160a01b038716907f4232d48319210b7bc959a61fd7785051da1497df2a1400e3340f42a8a6efd541906103919088908890889088906107fd565b60405180910390a294509492505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103f49084906103f9565b505050565b600061044e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104ce9092919063ffffffff16565b905080516000148061046f57508080602001905181019061046f919061083d565b6103f45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610126565b60606104dd84846000856104e5565b949350505050565b6060824710156105465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610126565b600080866001600160a01b031685876040516105629190610866565b60006040518083038185875af1925050503d806000811461059f576040519150601f19603f3d011682016040523d82523d6000602084013e6105a4565b606091505b50915091506105b5878383876105c0565b979650505050505050565b6060831561062f578251600003610628576001600160a01b0385163b6106285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610126565b50816104dd565b6104dd83838151156106445781518083602001fd5b8060405162461bcd60e51b81526004016101269190610882565b80356001600160a01b038116811461067557600080fd5b919050565b60008060006060848603121561068f57600080fd5b6106988461065e565b9250602084013591506106ad6040850161065e565b90509250925092565b600080600080606085870312156106cc57600080fd5b6106d58561065e565b935060208501359250604085013567ffffffffffffffff808211156106f957600080fd5b818701915087601f83011261070d57600080fd5b81358181111561071c57600080fd5b88602082850101111561072e57600080fd5b95989497505060200194505050565b60005b83811015610758578181015183820152602001610740565b50506000910152565b6000815180845261077981602086016020860161073d565b601f01601f19169290920160200192915050565b82151581526040602082015260006104dd6040830184610761565b60208082526025908201527f576f726b657257616c6c65743a2063616c6c6572206973206e6f74207468652060408201526437bbb732b960d91b606082015260800190565b8183823760009101908152919050565b848152606060208201528260608201528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b60006020828403121561084f57600080fd5b8151801515811461085f57600080fd5b9392505050565b6000825161087881846020870161073d565b9190910192915050565b60208152600061085f602083018461076156fea2646970667358221220142139d47c8f89e7b9e607d51232e069a10870614ce5f565e2a6107b29954b6964736f6c63430008140033a264697066735822122024aa5d94f72e41c016e0ecbf36c9928b529a63d5da67b9a7e3972f74dbf4b63a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1AC38190 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x1F6D2EAC EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xAA2DEAD7 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xAF295F35 EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP4 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x48 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 ADDRESS SWAP1 PUSH1 0x68 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x151 SWAP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C6574466163746F72793A2077616C6C657420616C7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x61647920657869737473 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x261 SWAP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP1 PUSH2 0x2B2 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x80 ADD PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP10 DUP2 SHL DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x34 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x48 DUP4 ADD MSTORE SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x68 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP5 POP DUP5 EXTCODESIZE PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP11 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x1 SWAP3 DUP4 SWAP1 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH4 0x6808D587 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 AND SWAP1 PUSH4 0x6808D587 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE DUP11 AND SWAP3 POP PUSH32 0x2C91A2FEB7F5C7E0C5681EB540D51F84DE98235A2E0B6104FD4356684BD96F72 SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA59 DUP1 PUSH2 0x4CE DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 DUP4 PUSH2 0x40F JUMP JUMPDEST SWAP2 POP PUSH2 0x455 PUSH1 0x20 DUP5 ADD PUSH2 0x40F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x479 DUP3 PUSH2 0x40F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0x487 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C5 PUSH2 0x4BF DUP4 DUP7 PUSH2 0x480 JUMP JUMPDEST DUP5 PUSH2 0x480 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA59 CODESIZE SUB DUP1 PUSH2 0xA59 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x14C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A206F776E6572206973207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2073776170206D616E61676572206973207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x17F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168 DUP4 PUSH2 0x130 JUMP JUMPDEST SWAP2 POP PUSH2 0x176 PUSH1 0x20 DUP5 ADD PUSH2 0x130 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CB DUP1 PUSH2 0x18E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69328DEC EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x709D039D EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616E6E6F7420776974686472617720746F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25C JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A20455448207472616E73666572206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST POP PUSH2 0x270 JUMP JUMPDEST PUSH2 0x270 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xCBCDBDF10631A43CC99C80ACACE8232649421C3F4F73919F16013D47C83A687A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x308 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x4232D48319210B7BC959A61FD7785051DA1497DF2A1400E3340F42A8A6EFD541 SWAP1 PUSH2 0x391 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3F4 SWAP1 DUP5 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x46F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4DD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x5C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x62F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x628 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x126 JUMP JUMPDEST POP DUP2 PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x644 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x6AD PUSH1 0x40 DUP6 ADD PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D5 DUP6 PUSH2 0x65E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x740 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x779 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x73D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4DD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x878 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x85F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x761 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x21 CODECOPY 0xD4 PUSH29 0x8F89E7B9E607D51232E069A10870614CE5F565E2A6107B29954B696473 PUSH16 0x6C63430008140033A264697066735822 SLT KECCAK256 0x24 0xAA 0x5D SWAP5 0xF7 0x2E COINBASE 0xC0 AND 0xE0 0xEC 0xBF CALLDATASIZE 0xC9 SWAP3 DUP12 MSTORE SWAP11 PUSH4 0xD5DA67B9 0xA7 0xE3 SWAP8 0x2F PUSH21 0xDBF4B63A64736F6C63430008140033000000000000 ","sourceMap":"128:1952:7:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@computeWorkerWalletAddress_1823":{"entryPoint":240,"id":1823,"parameterSlots":2,"returnSlots":1},"@createWorkerWallet_1771":{"entryPoint":462,"id":1771,"parameterSlots":2,"returnSlots":1},"@getWorkerWallet_1685":{"entryPoint":null,"id":1685,"parameterSlots":0,"returnSlots":0},"@isWorkerWallet_1689":{"entryPoint":null,"id":1689,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":1039,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1067,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_bytes":{"entryPoint":1152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1200,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47df72e5deea8fdd3f5a86012c19a19aa8df1f9e3c75af6b7d82410051da9c1e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3207:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:11","statements":[{"nodeType":"YulAssignment","src":"73:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:11"},"nodeType":"YulFunctionCall","src":"82:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:11"}]},{"body":{"nodeType":"YulBlock","src":"165:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:11"},"nodeType":"YulFunctionCall","src":"167:12:11"},"nodeType":"YulExpressionStatement","src":"167:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:11"},"nodeType":"YulFunctionCall","src":"146:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:11"},"nodeType":"YulFunctionCall","src":"142:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:11"},"nodeType":"YulFunctionCall","src":"131:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:11"},"nodeType":"YulFunctionCall","src":"121:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:11"},"nodeType":"YulFunctionCall","src":"114:50:11"},"nodeType":"YulIf","src":"111:70:11"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:11","type":""}],"src":"14:173:11"},{"body":{"nodeType":"YulBlock","src":"279:173:11","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:11"},"nodeType":"YulFunctionCall","src":"327:12:11"},"nodeType":"YulExpressionStatement","src":"327:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:11"},"nodeType":"YulFunctionCall","src":"296:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:11"},"nodeType":"YulFunctionCall","src":"292:32:11"},"nodeType":"YulIf","src":"289:52:11"},{"nodeType":"YulAssignment","src":"350:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:11"},"nodeType":"YulFunctionCall","src":"360:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:11"}]},{"nodeType":"YulAssignment","src":"398:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"431:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"442:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"427:3:11"},"nodeType":"YulFunctionCall","src":"427:18:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"408:18:11"},"nodeType":"YulFunctionCall","src":"408:38:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:11","type":""}],"src":"192:260:11"},{"body":{"nodeType":"YulBlock","src":"558:102:11","statements":[{"nodeType":"YulAssignment","src":"568:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"580:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"591:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"576:3:11"},"nodeType":"YulFunctionCall","src":"576:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"568:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"610:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"625:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"641:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"646:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"637:3:11"},"nodeType":"YulFunctionCall","src":"637:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"650:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"633:3:11"},"nodeType":"YulFunctionCall","src":"633:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"621:3:11"},"nodeType":"YulFunctionCall","src":"621:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"603:6:11"},"nodeType":"YulFunctionCall","src":"603:51:11"},"nodeType":"YulExpressionStatement","src":"603:51:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"527:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"538:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"549:4:11","type":""}],"src":"457:203:11"},{"body":{"nodeType":"YulBlock","src":"735:116:11","statements":[{"body":{"nodeType":"YulBlock","src":"781:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"790:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"793:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"783:6:11"},"nodeType":"YulFunctionCall","src":"783:12:11"},"nodeType":"YulExpressionStatement","src":"783:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"756:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"765:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"752:3:11"},"nodeType":"YulFunctionCall","src":"752:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"777:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"748:3:11"},"nodeType":"YulFunctionCall","src":"748:32:11"},"nodeType":"YulIf","src":"745:52:11"},{"nodeType":"YulAssignment","src":"806:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"835:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"816:18:11"},"nodeType":"YulFunctionCall","src":"816:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"806:6:11"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"701:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"712:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"724:6:11","type":""}],"src":"665:186:11"},{"body":{"nodeType":"YulBlock","src":"951:92:11","statements":[{"nodeType":"YulAssignment","src":"961:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"973:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"984:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"969:3:11"},"nodeType":"YulFunctionCall","src":"969:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"961:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1003:9:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1028:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1021:6:11"},"nodeType":"YulFunctionCall","src":"1021:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1014:6:11"},"nodeType":"YulFunctionCall","src":"1014:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"996:6:11"},"nodeType":"YulFunctionCall","src":"996:41:11"},"nodeType":"YulExpressionStatement","src":"996:41:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"920:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"931:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"942:4:11","type":""}],"src":"856:187:11"},{"body":{"nodeType":"YulBlock","src":"1223:223:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1233:41:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1247:26:11","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1243:3:11"},"nodeType":"YulFunctionCall","src":"1243:31:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1237:2:11","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1290:3:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1303:2:11","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"1307:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1299:3:11"},"nodeType":"YulFunctionCall","src":"1299:15:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1316:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1295:3:11"},"nodeType":"YulFunctionCall","src":"1295:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1283:6:11"},"nodeType":"YulFunctionCall","src":"1283:37:11"},"nodeType":"YulExpressionStatement","src":"1283:37:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1340:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1345:2:11","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1336:3:11"},"nodeType":"YulFunctionCall","src":"1336:12:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1358:2:11","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"1362:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1354:3:11"},"nodeType":"YulFunctionCall","src":"1354:15:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1371:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1350:3:11"},"nodeType":"YulFunctionCall","src":"1350:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1329:6:11"},"nodeType":"YulFunctionCall","src":"1329:46:11"},"nodeType":"YulExpressionStatement","src":"1329:46:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1395:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1400:2:11","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1391:3:11"},"nodeType":"YulFunctionCall","src":"1391:12:11"},{"name":"value2","nodeType":"YulIdentifier","src":"1405:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1384:6:11"},"nodeType":"YulFunctionCall","src":"1384:28:11"},"nodeType":"YulExpressionStatement","src":"1384:28:11"},{"nodeType":"YulAssignment","src":"1421:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1432:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1437:2:11","type":"","value":"72"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1428:3:11"},"nodeType":"YulFunctionCall","src":"1428:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1421:3:11"}]}]},"name":"abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1183:3:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1188:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1196:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1204:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1215:3:11","type":""}],"src":"1048:398:11"},{"body":{"nodeType":"YulBlock","src":"1652:240:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1669:3:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1678:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1690:3:11","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"1695:3:11","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1686:3:11"},"nodeType":"YulFunctionCall","src":"1686:13:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1674:3:11"},"nodeType":"YulFunctionCall","src":"1674:26:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1662:6:11"},"nodeType":"YulFunctionCall","src":"1662:39:11"},"nodeType":"YulExpressionStatement","src":"1662:39:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1721:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:11"},"nodeType":"YulFunctionCall","src":"1717:11:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1738:2:11","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"1742:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1734:3:11"},"nodeType":"YulFunctionCall","src":"1734:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1755:26:11","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1751:3:11"},"nodeType":"YulFunctionCall","src":"1751:31:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1730:3:11"},"nodeType":"YulFunctionCall","src":"1730:53:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1710:6:11"},"nodeType":"YulFunctionCall","src":"1710:74:11"},"nodeType":"YulExpressionStatement","src":"1710:74:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1804:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1809:2:11","type":"","value":"21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1800:3:11"},"nodeType":"YulFunctionCall","src":"1800:12:11"},{"name":"value2","nodeType":"YulIdentifier","src":"1814:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1793:6:11"},"nodeType":"YulFunctionCall","src":"1793:28:11"},"nodeType":"YulExpressionStatement","src":"1793:28:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1841:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1846:2:11","type":"","value":"53"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1837:3:11"},"nodeType":"YulFunctionCall","src":"1837:12:11"},{"name":"value3","nodeType":"YulIdentifier","src":"1851:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1830:6:11"},"nodeType":"YulFunctionCall","src":"1830:28:11"},"nodeType":"YulExpressionStatement","src":"1830:28:11"},{"nodeType":"YulAssignment","src":"1867:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1878:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1883:2:11","type":"","value":"85"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:11"},"nodeType":"YulFunctionCall","src":"1874:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1867:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1604:3:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1609:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1617:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1625:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1633:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1644:3:11","type":""}],"src":"1451:441:11"},{"body":{"nodeType":"YulBlock","src":"2071:232:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2088:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2099:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2081:6:11"},"nodeType":"YulFunctionCall","src":"2081:21:11"},"nodeType":"YulExpressionStatement","src":"2081:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2122:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:11"},"nodeType":"YulFunctionCall","src":"2118:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"2138:2:11","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2111:6:11"},"nodeType":"YulFunctionCall","src":"2111:30:11"},"nodeType":"YulExpressionStatement","src":"2111:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2161:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2172:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2157:3:11"},"nodeType":"YulFunctionCall","src":"2157:18:11"},{"hexValue":"576f726b657257616c6c6574466163746f72793a2077616c6c657420616c7265","kind":"string","nodeType":"YulLiteral","src":"2177:34:11","type":"","value":"WorkerWalletFactory: wallet alre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2150:6:11"},"nodeType":"YulFunctionCall","src":"2150:62:11"},"nodeType":"YulExpressionStatement","src":"2150:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2232:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2243:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2228:3:11"},"nodeType":"YulFunctionCall","src":"2228:18:11"},{"hexValue":"61647920657869737473","kind":"string","nodeType":"YulLiteral","src":"2248:12:11","type":"","value":"ady exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:11"},"nodeType":"YulFunctionCall","src":"2221:40:11"},"nodeType":"YulExpressionStatement","src":"2221:40:11"},{"nodeType":"YulAssignment","src":"2270:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2282:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2293:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2278:3:11"},"nodeType":"YulFunctionCall","src":"2278:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2270:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_47df72e5deea8fdd3f5a86012c19a19aa8df1f9e3c75af6b7d82410051da9c1e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2048:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2062:4:11","type":""}],"src":"1897:406:11"},{"body":{"nodeType":"YulBlock","src":"2437:175:11","statements":[{"nodeType":"YulAssignment","src":"2447:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2459:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2470:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2455:3:11"},"nodeType":"YulFunctionCall","src":"2455:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2447:4:11"}]},{"nodeType":"YulVariableDeclaration","src":"2482:29:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2500:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2505:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2496:3:11"},"nodeType":"YulFunctionCall","src":"2496:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"2509:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2492:3:11"},"nodeType":"YulFunctionCall","src":"2492:19:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2486:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2527:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2542:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"2550:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2538:3:11"},"nodeType":"YulFunctionCall","src":"2538:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2520:6:11"},"nodeType":"YulFunctionCall","src":"2520:34:11"},"nodeType":"YulExpressionStatement","src":"2520:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2574:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2585:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2570:3:11"},"nodeType":"YulFunctionCall","src":"2570:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2594:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"2602:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2590:3:11"},"nodeType":"YulFunctionCall","src":"2590:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2563:6:11"},"nodeType":"YulFunctionCall","src":"2563:43:11"},"nodeType":"YulExpressionStatement","src":"2563:43:11"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2398:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2409:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2417:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2428:4:11","type":""}],"src":"2308:304:11"},{"body":{"nodeType":"YulBlock","src":"2666:273:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2676:26:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2696:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2690:5:11"},"nodeType":"YulFunctionCall","src":"2690:12:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2680:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2711:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2720:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2715:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2782:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2807:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"2812:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2803:3:11"},"nodeType":"YulFunctionCall","src":"2803:11:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2830:5:11"},{"name":"i","nodeType":"YulIdentifier","src":"2837:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2826:3:11"},"nodeType":"YulFunctionCall","src":"2826:13:11"},{"kind":"number","nodeType":"YulLiteral","src":"2841:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2822:3:11"},"nodeType":"YulFunctionCall","src":"2822:24:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2816:5:11"},"nodeType":"YulFunctionCall","src":"2816:31:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2796:6:11"},"nodeType":"YulFunctionCall","src":"2796:52:11"},"nodeType":"YulExpressionStatement","src":"2796:52:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2741:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"2744:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2738:2:11"},"nodeType":"YulFunctionCall","src":"2738:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2752:21:11","statements":[{"nodeType":"YulAssignment","src":"2754:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2763:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"2766:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2759:3:11"},"nodeType":"YulFunctionCall","src":"2759:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2754:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"2734:3:11","statements":[]},"src":"2730:128:11"},{"nodeType":"YulVariableDeclaration","src":"2867:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2881:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2886:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2877:3:11"},"nodeType":"YulFunctionCall","src":"2877:16:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2871:2:11","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2909:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"2913:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2902:6:11"},"nodeType":"YulFunctionCall","src":"2902:13:11"},"nodeType":"YulExpressionStatement","src":"2902:13:11"},{"nodeType":"YulAssignment","src":"2924:9:11","value":{"name":"_1","nodeType":"YulIdentifier","src":"2931:2:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2924:3:11"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2643:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2650:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2658:3:11","type":""}],"src":"2617:322:11"},{"body":{"nodeType":"YulBlock","src":"3127:78:11","statements":[{"nodeType":"YulAssignment","src":"3137:62:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3161:6:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3186:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"3194:3:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"3169:16:11"},"nodeType":"YulFunctionCall","src":"3169:29:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"3144:16:11"},"nodeType":"YulFunctionCall","src":"3144:55:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3137:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3095:3:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3100:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3108:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3119:3:11","type":""}],"src":"2944:261:11"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), value2)\n        end := add(pos, 72)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(value0, shl(248, 255)))\n        mstore(add(pos, 1), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 21), value2)\n        mstore(add(pos, 53), value3)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_stringliteral_47df72e5deea8fdd3f5a86012c19a19aa8df1f9e3c75af6b7d82410051da9c1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"WorkerWalletFactory: wallet alre\")\n        mstore(add(headStart, 96), \"ady exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_bytes(value1, abi_encode_bytes(value0, pos))\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80631ac38190146100515780631f6d2eac14610081578063aa2dead7146100b4578063af295f35146100dd575b600080fd5b61006461005f36600461042b565b6100f0565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a461008f36600461045e565b60016020526000908152604090205460ff1681565b6040519015158152602001610078565b6100646100c236600461045e565b6000602081905290815260409020546001600160a01b031681565b6100646100eb36600461042b565b6101ce565b6040516001600160601b0319606084811b8216602084015283901b16603482015242604882015260009081906001600160f81b0319903090606801604051602081830303815290604052805190602001206040518060200161015190610402565b6020820181038252601f19601f82011660405250805190602001206040516020016101ae94939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051808303601f190181529190528051602090910120949350505050565b6001600160a01b038281166000908152602081905260408120549091161561024f5760405162461bcd60e51b815260206004820152602a60248201527f576f726b657257616c6c6574466163746f72793a2077616c6c657420616c72656044820152696164792065786973747360b01b606482015260840160405180910390fd5b60006040518060200161026190610402565b601f1982820381018352601f9091011660408181526001600160a01b038781166020840152861681830152805180830382018152606083019091529192506000906102b290849084906080016104b0565b60408051601f19818403018152908290526001600160601b0319606089811b8216602085015288901b1660348301524260488301529150600090606801604051602081830303815290604052805190602001209050808251602084016000f59450843b61031e57600080fd5b6001600160a01b0387811660009081526020818152604080832080546001600160a01b0319168a861690811790915580845260019283905292819020805460ff191690921790915551636808d58760e01b8152600481019190915290871690636808d58790602401600060405180830381600087803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b50506040516001600160a01b0388811682528a1692507f2c91a2feb7f5c7e0c5681eb540d51f84de98235a2e0b6104fd4356684bd96f72915060200160405180910390a25050505092915050565b610a59806104ce83390190565b80356001600160a01b038116811461042657600080fd5b919050565b6000806040838503121561043e57600080fd5b6104478361040f565b91506104556020840161040f565b90509250929050565b60006020828403121561047057600080fd5b6104798261040f565b9392505050565b6000815160005b818110156104a15760208185018101518683015201610487565b50600093019283525090919050565b60006104c56104bf8386610480565b84610480565b94935050505056fe608060405234801561001057600080fd5b50604051610a59380380610a5983398101604081905261002f9161014c565b6001600160a01b0382166100965760405162461bcd60e51b815260206004820152602360248201527f576f726b657257616c6c65743a206f776e6572206973207a65726f206164647260448201526265737360e81b60648201526084015b60405180910390fd5b6001600160a01b0381166100ff5760405162461bcd60e51b815260206004820152602a60248201527f576f726b657257616c6c65743a2073776170206d616e61676572206973207a65604482015269726f206164647265737360b01b606482015260840161008d565b600080546001600160a01b039384166001600160a01b0319918216179091556001805492909316911617905561017f565b80516001600160a01b038116811461014757600080fd5b919050565b6000806040838503121561015f57600080fd5b61016883610130565b915061017660208401610130565b90509250929050565b6108cb8061018e6000396000f3fe6080604052600436106100435760003560e01c806369328dec1461004f578063709d039d146100715780638da5cb5b146100ae578063b61d27f6146100ce57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a36600461067a565b6100fc565b005b34801561007d57600080fd5b50600154610091906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ba57600080fd5b50600054610091906001600160a01b031681565b3480156100da57600080fd5b506100ee6100e93660046106b6565b6102bf565b6040516100a592919061078d565b6000546001600160a01b0316331461012f5760405162461bcd60e51b8152600401610126906107a8565b60405180910390fd5b6001600160a01b03811661019b5760405162461bcd60e51b815260206004820152602d60248201527f576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f60448201526c207a65726f206164647265737360981b6064820152608401610126565b6001600160a01b03831661025c576000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146101f6576040519150601f19603f3d011682016040523d82523d6000602084013e6101fb565b606091505b50509050806102565760405162461bcd60e51b815260206004820152602160248201527f576f726b657257616c6c65743a20455448207472616e73666572206661696c656044820152601960fa1b6064820152608401610126565b50610270565b6102706001600160a01b03841682846103a2565b604080516001600160a01b0385811682526020820185905283168183015290517fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9181900360600190a1505050565b600080546060906001600160a01b031633146102ed5760405162461bcd60e51b8152600401610126906107a8565b856001600160a01b03168585856040516103089291906107ed565b60006040518083038185875af1925050503d8060008114610345576040519150601f19603f3d011682016040523d82523d6000602084013e61034a565b606091505b5060405191935091506001600160a01b038716907f4232d48319210b7bc959a61fd7785051da1497df2a1400e3340f42a8a6efd541906103919088908890889088906107fd565b60405180910390a294509492505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103f49084906103f9565b505050565b600061044e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104ce9092919063ffffffff16565b905080516000148061046f57508080602001905181019061046f919061083d565b6103f45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610126565b60606104dd84846000856104e5565b949350505050565b6060824710156105465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610126565b600080866001600160a01b031685876040516105629190610866565b60006040518083038185875af1925050503d806000811461059f576040519150601f19603f3d011682016040523d82523d6000602084013e6105a4565b606091505b50915091506105b5878383876105c0565b979650505050505050565b6060831561062f578251600003610628576001600160a01b0385163b6106285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610126565b50816104dd565b6104dd83838151156106445781518083602001fd5b8060405162461bcd60e51b81526004016101269190610882565b80356001600160a01b038116811461067557600080fd5b919050565b60008060006060848603121561068f57600080fd5b6106988461065e565b9250602084013591506106ad6040850161065e565b90509250925092565b600080600080606085870312156106cc57600080fd5b6106d58561065e565b935060208501359250604085013567ffffffffffffffff808211156106f957600080fd5b818701915087601f83011261070d57600080fd5b81358181111561071c57600080fd5b88602082850101111561072e57600080fd5b95989497505060200194505050565b60005b83811015610758578181015183820152602001610740565b50506000910152565b6000815180845261077981602086016020860161073d565b601f01601f19169290920160200192915050565b82151581526040602082015260006104dd6040830184610761565b60208082526025908201527f576f726b657257616c6c65743a2063616c6c6572206973206e6f74207468652060408201526437bbb732b960d91b606082015260800190565b8183823760009101908152919050565b848152606060208201528260608201528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b60006020828403121561084f57600080fd5b8151801515811461085f57600080fd5b9392505050565b6000825161087881846020870161073d565b9190910192915050565b60208152600061085f602083018461076156fea2646970667358221220142139d47c8f89e7b9e607d51232e069a10870614ce5f565e2a6107b29954b6964736f6c63430008140033a264697066735822122024aa5d94f72e41c016e0ecbf36c9928b529a63d5da67b9a7e3972f74dbf4b63a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1AC38190 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x1F6D2EAC EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xAA2DEAD7 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xAF295F35 EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP4 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x48 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 ADDRESS SWAP1 PUSH1 0x68 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x151 SWAP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C6574466163746F72793A2077616C6C657420616C7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x61647920657869737473 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x261 SWAP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP1 PUSH2 0x2B2 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x80 ADD PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP10 DUP2 SHL DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x34 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x48 DUP4 ADD MSTORE SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x68 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP5 POP DUP5 EXTCODESIZE PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP11 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x1 SWAP3 DUP4 SWAP1 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH4 0x6808D587 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 AND SWAP1 PUSH4 0x6808D587 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE DUP11 AND SWAP3 POP PUSH32 0x2C91A2FEB7F5C7E0C5681EB540D51F84DE98235A2E0B6104FD4356684BD96F72 SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA59 DUP1 PUSH2 0x4CE DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 DUP4 PUSH2 0x40F JUMP JUMPDEST SWAP2 POP PUSH2 0x455 PUSH1 0x20 DUP5 ADD PUSH2 0x40F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x479 DUP3 PUSH2 0x40F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0x487 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C5 PUSH2 0x4BF DUP4 DUP7 PUSH2 0x480 JUMP JUMPDEST DUP5 PUSH2 0x480 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA59 CODESIZE SUB DUP1 PUSH2 0xA59 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x14C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A206F776E6572206973207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2073776170206D616E61676572206973207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x17F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168 DUP4 PUSH2 0x130 JUMP JUMPDEST SWAP2 POP PUSH2 0x176 PUSH1 0x20 DUP5 ADD PUSH2 0x130 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CB DUP1 PUSH2 0x18E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69328DEC EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x709D039D EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616E6E6F7420776974686472617720746F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25C JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A20455448207472616E73666572206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST POP PUSH2 0x270 JUMP JUMPDEST PUSH2 0x270 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xCBCDBDF10631A43CC99C80ACACE8232649421C3F4F73919F16013D47C83A687A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x308 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x4232D48319210B7BC959A61FD7785051DA1497DF2A1400E3340F42A8A6EFD541 SWAP1 PUSH2 0x391 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3F4 SWAP1 DUP5 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x46F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4DD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x5C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x62F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x628 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x126 JUMP JUMPDEST POP DUP2 PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x644 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x6AD PUSH1 0x40 DUP6 ADD PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D5 DUP6 PUSH2 0x65E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x740 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x779 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x73D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4DD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x878 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x85F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x761 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x21 CODECOPY 0xD4 PUSH29 0x8F89E7B9E607D51232E069A10870614CE5F565E2A6107B29954B696473 PUSH16 0x6C63430008140033A264697066735822 SLT KECCAK256 0x24 0xAA 0x5D SWAP5 0xF7 0x2E COINBASE 0xC0 AND 0xE0 0xEC 0xBF CALLDATASIZE 0xC9 SWAP3 DUP12 MSTORE SWAP11 PUSH4 0xD5DA67B9 0xA7 0xE3 SWAP8 0x2F PUSH21 0xDBF4B63A64736F6C63430008140033000000000000 ","sourceMap":"128:1952:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1626:452;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;621:32:11;;;603:51;;591:2;576:18;1626:452:7;;;;;;;;294:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1021:14:11;;1014:22;996:41;;984:2;969:18;294:46:7;856:187:11;238:50:7;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;238:50:7;;;351:1265;;;;;;:::i;:::-;;:::i;1626:452::-;1883:55;;-1:-1:-1;;;;;;1303:2:11;1299:15;;;1295:24;;1883:55:7;;;1283:37:11;1354:15;;;1350:24;1336:12;;;1329:46;1922:15:7;1391:12:11;;;1384:28;1721:7:7;;;;-1:-1:-1;;;;;;1812:12:7;1850:4;;1428:12:11;;1883:55:7;;;;;;;;;;;;1873:66;;;;;;1967:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1957:42;;;;;;1778:235;;;;;;;;;;-1:-1:-1;;;;;;1674:26:11;;;;1662:39;;1738:2;1734:15;;;;-1:-1:-1;;;;;;1730:53:11;1726:1;1717:11;;1710:74;1809:2;1800:12;;1793:28;1846:2;1837:12;;1830:28;1883:2;1874:12;;1451:441;1778:235:7;;;;;;;-1:-1:-1;;1778:235:7;;;;;;1755:268;;1778:235;1755:268;;;;;1626:452;-1:-1:-1;;;;1626:452:7:o;351:1265::-;-1:-1:-1;;;;;475:23:7;;;435:20;475:23;;;;;;;;;;;435:20;;475:23;:37;467:92;;;;-1:-1:-1;;;467:92:7;;2099:2:11;467:92:7;;;2081:21:11;2138:2;2118:18;;;2111:30;2177:34;2157:18;;;2150:62;-1:-1:-1;;;2228:18:11;;;2221:40;2278:19;;467:92:7;;;;;;;;627:21;651:31;;;;;;;;:::i;:::-;-1:-1:-1;;651:31:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2538:15:11;;;651:31:7;772:32;;2520:34:11;2590:15;;2570:18;;;2563:43;772:32:7;;;;;;;;;2455:18:11;;;772:32:7;;;651:31;;-1:-1:-1;;;906:43:7;;651:31;;772:32;;906:43;;;:::i;:::-;;;;-1:-1:-1;;906:43:7;;;;;;;;;;-1:-1:-1;;;;;;1303:2:11;1299:15;;;1295:24;;906:43:7;993:55;;1283:37:11;1354:15;;;1350:24;1336:12;;;1329:46;1032:15:7;1391:12:11;;;1384:28;906:43:7;-1:-1:-1;968:12:7;;1428::11;;993:55:7;;;;;;;;;;;;983:66;;;;;;968:81;;1156:4;1145:8;1139:15;1132:4;1122:8;1118:19;1115:1;1107:54;1091:70;;1196:12;1184:25;1174:81;;1239:1;1236;1229:12;1174:81;-1:-1:-1;;;;;1321:23:7;;;:15;:23;;;;;;;;;;;:38;;-1:-1:-1;;;;;;1321:38:7;;;;;;;;;;1369:28;;;-1:-1:-1;1369:28:7;;;;;;;;:35;;-1:-1:-1;;1369:35:7;;;;;;;1483:61;-1:-1:-1;;;1483:61:7;;;;;603:51:11;;;;1483:47:7;;;;;;576:18:11;;1483:61:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1568:41:7;;-1:-1:-1;;;;;621:32:11;;;603:51;;1568:41:7;;;-1:-1:-1;1568:41:7;;-1:-1:-1;591:2:11;576:18;1568:41:7;;;;;;;457:1159;;;;351:1265;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:173:11:-;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;665:186::-;724:6;777:2;765:9;756:7;752:23;748:32;745:52;;;793:1;790;783:12;745:52;816:29;835:9;816:29;:::i;:::-;806:39;665:186;-1:-1:-1;;;665:186:11:o;2617:322::-;2658:3;2696:5;2690:12;2720:1;2730:128;2744:6;2741:1;2738:13;2730:128;;;2841:4;2826:13;;;2822:24;;2816:31;2803:11;;;2796:52;2759:12;2730:128;;;-1:-1:-1;2913:1:11;2877:16;;2902:13;;;-1:-1:-1;2877:16:11;;2617:322;-1:-1:-1;2617:322:11:o;2944:261::-;3119:3;3144:55;3169:29;3194:3;3186:6;3169:29;:::i;:::-;3161:6;3144:55;:::i;:::-;3137:62;2944:261;-1:-1:-1;;;;2944:261:11:o"},"gasEstimates":{"creation":{"codeDepositCost":"786400","executionCost":"818","totalCost":"787218"},"external":{"computeWorkerWalletAddress(address,address)":"infinite","createWorkerWallet(address,address)":"infinite","getWorkerWallet(address)":"2572","isWorkerWallet(address)":"2531"}},"methodIdentifiers":{"computeWorkerWalletAddress(address,address)":"1ac38190","createWorkerWallet(address,address)":"af295f35","getWorkerWallet(address)":"aa2dead7","isWorkerWallet(address)":"1f6d2eac"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"WorkerWalletCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"name\":\"computeWorkerWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"name\":\"createWorkerWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"workerWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getWorkerWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWorkerWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WorkerWalletFactory.sol\":\"WorkerWalletFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/WorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./interfaces/IWorkerWallet.sol\\\";\\nimport \\\"./interfaces/ISwapManager.sol\\\";\\n\\ncontract WorkerWallet is IWorkerWallet {\\n    using SafeERC20 for IERC20;\\n\\n    address public override owner;\\n    address public override swapManager;\\n    bool private initialized;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"WorkerWallet: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    modifier onlySwapManager() {\\n        require(msg.sender == swapManager, \\\"WorkerWallet: caller is not the swap manager\\\");\\n        _;\\n    }\\n\\n    constructor(address _owner, address _swapManager) {\\n        require(_owner != address(0), \\\"WorkerWallet: owner is zero address\\\");\\n        require(_swapManager != address(0), \\\"WorkerWallet: swap manager is zero address\\\");\\n        \\n        owner = _owner;\\n        swapManager = _swapManager;\\n    }\\n\\n    receive() external payable {}\\n\\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external override onlyOwner returns (bool success, bytes memory result) {\\n        (success, result) = target.call{value: value}(data);\\n        emit Executed(target, value, data, success);\\n    }\\n\\n    function withdraw(address token, uint256 amount, address to) external override onlyOwner {\\n        require(to != address(0), \\\"WorkerWallet: cannot withdraw to zero address\\\");\\n        \\n        if (token == address(0)) {\\n            (bool success, ) = to.call{value: amount}(\\\"\\\");\\n            require(success, \\\"WorkerWallet: ETH transfer failed\\\");\\n        } else {\\n            IERC20(token).safeTransfer(to, amount);\\n        }\\n        \\n        emit Withdrawn(token, amount, to);\\n    }\\n}\\n\",\"keccak256\":\"0xaf66df7911357536efec01ed1da116c560499107b75b27e5910a116172b675e4\",\"license\":\"MIT\"},\"contracts/WorkerWalletFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./WorkerWallet.sol\\\";\\nimport \\\"./interfaces/ISwapManager.sol\\\";\\n\\ncontract WorkerWalletFactory {\\n    event WorkerWalletCreated(address indexed owner, address wallet);\\n    \\n    mapping(address => address) public getWorkerWallet;\\n    mapping(address => bool) public isWorkerWallet;\\n    \\n    function createWorkerWallet(address _owner, address _swapManager) external returns (address workerWallet) {\\n        require(getWorkerWallet[_owner] == address(0), \\\"WorkerWalletFactory: wallet already exists\\\");\\n        \\n        // Get the creation code of WorkerWallet\\n        bytes memory bytecode = type(WorkerWallet).creationCode;\\n        \\n        // Encode constructor arguments\\n        bytes memory constructorArgs = abi.encode(_owner, _swapManager);\\n        \\n        // Create the init code with constructor arguments\\n        bytes memory initCode = abi.encodePacked(bytecode, constructorArgs);\\n        \\n        bytes32 salt = keccak256(abi.encodePacked(_owner, _swapManager, block.timestamp));\\n        \\n        assembly {\\n            workerWallet := create2(0, add(initCode, 0x20), mload(initCode), salt)\\n            if iszero(extcodesize(workerWallet)) {\\n                revert(0, 0)\\n            }\\n        }\\n        \\n        // Register the worker wallet\\n        getWorkerWallet[_owner] = workerWallet;\\n        isWorkerWallet[workerWallet] = true;\\n        \\n        // Register the worker wallet with the swap manager\\n        ISwapManager(_swapManager).registerWorkerWallet(workerWallet);\\n        \\n        emit WorkerWalletCreated(_owner, workerWallet);\\n    }\\n    \\n    function computeWorkerWalletAddress(address _owner, address _swapManager) public view returns (address) {\\n        bytes32 hash = keccak256(\\n            abi.encodePacked(\\n                bytes1(0xff),\\n                address(this),\\n                keccak256(abi.encodePacked(_owner, _swapManager, block.timestamp)),\\n                keccak256(type(WorkerWallet).creationCode)\\n            )\\n        );\\n        return address(uint160(uint256(hash)));\\n    }\\n}\\n\",\"keccak256\":\"0x296a839af9d3d7dcb04322c0abf18d2755026358c99e03b92f38f8f7feaa6478\",\"license\":\"MIT\"},\"contracts/interfaces/ISwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ISwapManager {\\n    struct SwapOrder {\\n        address initiator;\\n        address resolver;\\n        uint256 amountIn;\\n        uint256 amountOutMin;\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 deadline;\\n        bytes32 secretHash;\\n        bool isFulfilled;\\n        bool isRefunded;\\n    }\\n\\n    event OrderCreated(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n\\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        bytes32 secret\\n    );\\n\\n    event OrderRefunded(bytes32 indexed orderId);\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32);\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable;\\n\\n    function refundOrder(bytes32 orderId) external;\\n\\n    function registerWorkerWallet(address workerWallet) external;\\n    \\n    function getOrder(bytes32 orderId) external view returns (\\n        address initiator,\\n        address resolver,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 deadline,\\n        bytes32 secretHash,\\n        bool isFulfilled,\\n        bool isRefunded\\n    );\\n    \\n    /**\\n     * @notice Register a worker wallet that can be used to fulfill orders\\n     * @param workerWallet The address of the worker wallet to register\\n     */\\n}\\n\",\"keccak256\":\"0x29ca9e861fd2c3805cf6979bebd14111d3bb5adf435fa62ecf6b7904a85af20b\",\"license\":\"MIT\"},\"contracts/interfaces/IWorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IWorkerWallet {\\n    event Executed(address indexed target, uint256 value, bytes data, bool success);\\n    event Withdrawn(address token, uint256 amount, address to);\\n    \\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory result);\\n    \\n    function withdraw(address token, uint256 amount, address to) external;\\n    \\n    function owner() external view returns (address);\\n    \\n    function swapManager() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd06ff72662f22d4288875f589eb91c4cb09d28003282dce92e4cd56de351277c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1685,"contract":"contracts/WorkerWalletFactory.sol:WorkerWalletFactory","label":"getWorkerWallet","offset":0,"slot":"0","type":"t_mapping(t_address,t_address)"},{"astId":1689,"contract":"contracts/WorkerWalletFactory.sol:WorkerWalletFactory","label":"isWorkerWallet","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ISwapManager.sol":{"ISwapManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"resolver","type":"address"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"OrderFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"OrderRefunded","type":"event"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"fulfillOrder","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getOrder","outputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"refundOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"workerWallet","type":"address"}],"name":"registerWorkerWallet","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createOrder(address,address,uint256,uint256,uint256,bytes32)":"7535f2df","fulfillOrder(bytes32,uint256,bytes32)":"f6dccf2e","getOrder(bytes32)":"5778472a","refundOrder(bytes32)":"116a1d9a","registerWorkerWallet(address)":"6808d587"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"OrderFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"OrderRefunded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"fulfillOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"refundOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"workerWallet\",\"type\":\"address\"}],\"name\":\"registerWorkerWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISwapManager.sol\":\"ISwapManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ISwapManager {\\n    struct SwapOrder {\\n        address initiator;\\n        address resolver;\\n        uint256 amountIn;\\n        uint256 amountOutMin;\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 deadline;\\n        bytes32 secretHash;\\n        bool isFulfilled;\\n        bool isRefunded;\\n    }\\n\\n    event OrderCreated(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n\\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        bytes32 secret\\n    );\\n\\n    event OrderRefunded(bytes32 indexed orderId);\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32);\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable;\\n\\n    function refundOrder(bytes32 orderId) external;\\n\\n    function registerWorkerWallet(address workerWallet) external;\\n    \\n    function getOrder(bytes32 orderId) external view returns (\\n        address initiator,\\n        address resolver,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 deadline,\\n        bytes32 secretHash,\\n        bool isFulfilled,\\n        bool isRefunded\\n    );\\n    \\n    /**\\n     * @notice Register a worker wallet that can be used to fulfill orders\\n     * @param workerWallet The address of the worker wallet to register\\n     */\\n}\\n\",\"keccak256\":\"0x29ca9e861fd2c3805cf6979bebd14111d3bb5adf435fa62ecf6b7904a85af20b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IWorkerWallet.sol":{"IWorkerWallet":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swapManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute(address,uint256,bytes)":"b61d27f6","owner()":"8da5cb5b","swapManager()":"709d039d","withdraw(address,uint256,address)":"69328dec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWorkerWallet.sol\":\"IWorkerWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IWorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IWorkerWallet {\\n    event Executed(address indexed target, uint256 value, bytes data, bool success);\\n    event Withdrawn(address token, uint256 amount, address to);\\n    \\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory result);\\n    \\n    function withdraw(address token, uint256 amount, address to) external;\\n    \\n    function owner() external view returns (address);\\n    \\n    function swapManager() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd06ff72662f22d4288875f589eb91c4cb09d28003282dce92e4cd56de351277c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mock/MockRelayer.sol":{"MockRelayer":{"abi":[{"inputs":[{"internalType":"address","name":"_swapManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"resolver","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"OrderFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"OrderReceived","type":"event"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"fulfillOrder","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"receiveOrder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"swapManager","outputs":[{"internalType":"contract ISwapManager","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2035":{"entryPoint":null,"id":2035,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":84,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:11","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:11"},"nodeType":"YulFunctionCall","src":"143:12:11"},"nodeType":"YulExpressionStatement","src":"143:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:11"},"nodeType":"YulFunctionCall","src":"112:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:11"},"nodeType":"YulFunctionCall","src":"108:32:11"},"nodeType":"YulIf","src":"105:52:11"},{"nodeType":"YulVariableDeclaration","src":"166:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:11"},"nodeType":"YulFunctionCall","src":"179:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:11"},"nodeType":"YulFunctionCall","src":"260:12:11"},"nodeType":"YulExpressionStatement","src":"260:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:11"},"nodeType":"YulFunctionCall","src":"239:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:11"},"nodeType":"YulFunctionCall","src":"235:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:11"},"nodeType":"YulFunctionCall","src":"224:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:11"},"nodeType":"YulFunctionCall","src":"214:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:11"},"nodeType":"YulFunctionCall","src":"207:50:11"},"nodeType":"YulIf","src":"204:70:11"},{"nodeType":"YulAssignment","src":"283:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:11"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:11","type":""}],"src":"14:290:11"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516105d63803806105d683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610543806100936000396000f3fe6080604052600436106100345760003560e01c8063709d039d14610039578063eb9bd09914610076578063f6dccf2e14610097575b600080fd5b34801561004557600080fd5b50600054610059906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61008961008436600461041b565b6100ac565b60405190815260200161006d565b6100aa6100a5366004610470565b6102cc565b005b60006001600160a01b038716156101ae576040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b038816906323b872dd906064016020604051808303816000875af1158015610110573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610134919061049c565b5060005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018790529088169063095ea7b3906044016020604051808303816000875af1158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac919061049c565b505b600080546001600160a01b0390811690637535f2df908a16156101d25760006101d4565b875b6040516001600160e01b031960e084901b1681526001600160a01b03808d1660048301528b166024820152604481018a9052606481018990526084810188905260a4810187905260c40160206040518083038185885af115801561023c573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061026191906104c5565b604080516001600160a01b038b811682528a1660208201529081018890526060810187905260808101859052909150339082907f49f29b9cfb3bb0783c26f435fe9808e8b7fd6958ebb9363de51f5b697c712c749060a00160405180910390a3979650505050505050565b600080546040516024810186905260448101859052606481018490526001600160a01b0390911690349060840160408051601f198184030181529181526020820180516001600160e01b0316637b6e679760e11b1790525161032e91906104de565b60006040518083038185875af1925050503d806000811461036b576040519150601f19603f3d011682016040523d82523d6000602084013e610370565b606091505b50509050806103bc5760405162461bcd60e51b8152602060048201526014602482015273119d5b199a5b1b081bdc99195c8819985a5b195960621b604482015260640160405180910390fd5b6040805184815260208101849052339186917fdafd13066d5a7c6b0591d8c19f57c75c45b8fa038153891c78a582507cbd18c7910160405180910390a350505050565b80356001600160a01b038116811461041657600080fd5b919050565b60008060008060008060c0878903121561043457600080fd5b61043d876103ff565b955061044b602088016103ff565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060006060848603121561048557600080fd5b505081359360208301359350604090920135919050565b6000602082840312156104ae57600080fd5b815180151581146104be57600080fd5b9392505050565b6000602082840312156104d757600080fd5b5051919050565b6000825160005b818110156104ff57602081860181015185830152016104e5565b50600092019182525091905056fea264697066735822122025c98ca6385de334f04371777aa164b6764e1e7f7764d7efd52b99cc65b1a75e64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5D6 CODESIZE SUB DUP1 PUSH2 0x5D6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x543 DUP1 PUSH2 0x93 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x709D039D EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xEB9BD099 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF6DCCF2E EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x59 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x84 CALLDATASIZE PUSH1 0x4 PUSH2 0x41B JUMP JUMPDEST PUSH2 0xAC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6D JUMP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x49C JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP9 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x188 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x49C JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH4 0x7535F2DF SWAP1 DUP11 AND ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 PUSH2 0x1D4 JUMP JUMPDEST DUP8 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x84 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xA4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xC4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE DUP11 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 DUP3 SWAP1 PUSH32 0x49F29B9CFB3BB0783C26F435FE9808E8B7FD6958EBB9363DE51F5B697C712C74 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x7B6E6797 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x370 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x119D5B199A5B1B081BDC99195C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 DUP7 SWAP2 PUSH32 0xDAFD13066D5A7C6B0591D8C19F57C75C45B8FA038153891C78A582507CBD18C7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43D DUP8 PUSH2 0x3FF JUMP JUMPDEST SWAP6 POP PUSH2 0x44B PUSH1 0x20 DUP9 ADD PUSH2 0x3FF JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x4E5 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xC9 DUP13 0xA6 CODESIZE 0x5D 0xE3 CALLVALUE CREATE NUMBER PUSH18 0x777AA164B6764E1E7F7764D7EFD52B99CC65 0xB1 0xA7 0x5E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"157:2399:10:-:0;;;655:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;699:11;:40;;-1:-1:-1;;;;;;699:40:10;-1:-1:-1;;;;;699:40:10;;;;;;;;;;157:2399;;14:290:11;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:11;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:11:o;:::-;157:2399:10;;;;;;"},"deployedBytecode":{"functionDebugData":{"@fulfillOrder_2162":{"entryPoint":716,"id":2162,"parameterSlots":3,"returnSlots":0},"@receiveOrder_2120":{"entryPoint":172,"id":2120,"parameterSlots":6,"returnSlots":1},"@swapManager_1997":{"entryPoint":null,"id":1997,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":1023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32":{"entryPoint":1051,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":1180,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":1221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint256t_bytes32":{"entryPoint":1136,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1246,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_bytes32__to_t_bytes32_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_contract$_ISwapManager_$1937__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_786164181b1dbf10e7134b576dc7774e946256bcc196a412825e802f7a01134d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes32__to_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5054:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"136:102:11","statements":[{"nodeType":"YulAssignment","src":"146:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"158:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"169:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"154:3:11"},"nodeType":"YulFunctionCall","src":"154:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"146:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"188:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"203:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"219:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"224:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"215:3:11"},"nodeType":"YulFunctionCall","src":"215:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"228:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"211:3:11"},"nodeType":"YulFunctionCall","src":"211:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"199:3:11"},"nodeType":"YulFunctionCall","src":"199:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"181:6:11"},"nodeType":"YulFunctionCall","src":"181:51:11"},"nodeType":"YulExpressionStatement","src":"181:51:11"}]},"name":"abi_encode_tuple_t_contract$_ISwapManager_$1937__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"105:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"116:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"127:4:11","type":""}],"src":"14:224:11"},{"body":{"nodeType":"YulBlock","src":"292:124:11","statements":[{"nodeType":"YulAssignment","src":"302:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"324:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"311:12:11"},"nodeType":"YulFunctionCall","src":"311:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"302:5:11"}]},{"body":{"nodeType":"YulBlock","src":"394:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"403:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"406:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"396:6:11"},"nodeType":"YulFunctionCall","src":"396:12:11"},"nodeType":"YulExpressionStatement","src":"396:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"353:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"364:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"379:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"384:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"375:3:11"},"nodeType":"YulFunctionCall","src":"375:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"388:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"371:3:11"},"nodeType":"YulFunctionCall","src":"371:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"360:3:11"},"nodeType":"YulFunctionCall","src":"360:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"350:2:11"},"nodeType":"YulFunctionCall","src":"350:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"343:6:11"},"nodeType":"YulFunctionCall","src":"343:50:11"},"nodeType":"YulIf","src":"340:70:11"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"271:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"282:5:11","type":""}],"src":"243:173:11"},{"body":{"nodeType":"YulBlock","src":"576:380:11","statements":[{"body":{"nodeType":"YulBlock","src":"623:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"632:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"635:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"625:6:11"},"nodeType":"YulFunctionCall","src":"625:12:11"},"nodeType":"YulExpressionStatement","src":"625:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"597:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"606:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"593:3:11"},"nodeType":"YulFunctionCall","src":"593:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"618:3:11","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"589:3:11"},"nodeType":"YulFunctionCall","src":"589:33:11"},"nodeType":"YulIf","src":"586:53:11"},{"nodeType":"YulAssignment","src":"648:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"677:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"658:18:11"},"nodeType":"YulFunctionCall","src":"658:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"648:6:11"}]},{"nodeType":"YulAssignment","src":"696:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"729:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"740:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"725:3:11"},"nodeType":"YulFunctionCall","src":"725:18:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"706:18:11"},"nodeType":"YulFunctionCall","src":"706:38:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"696:6:11"}]},{"nodeType":"YulAssignment","src":"753:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"780:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"791:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"776:3:11"},"nodeType":"YulFunctionCall","src":"776:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"763:12:11"},"nodeType":"YulFunctionCall","src":"763:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"753:6:11"}]},{"nodeType":"YulAssignment","src":"804:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"831:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"842:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"827:3:11"},"nodeType":"YulFunctionCall","src":"827:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"814:12:11"},"nodeType":"YulFunctionCall","src":"814:32:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"804:6:11"}]},{"nodeType":"YulAssignment","src":"855:43:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"882:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"893:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"878:3:11"},"nodeType":"YulFunctionCall","src":"878:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"865:12:11"},"nodeType":"YulFunctionCall","src":"865:33:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"855:6:11"}]},{"nodeType":"YulAssignment","src":"907:43:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"934:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"945:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"930:3:11"},"nodeType":"YulFunctionCall","src":"930:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"917:12:11"},"nodeType":"YulFunctionCall","src":"917:33:11"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"907:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"502:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"513:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"525:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"533:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"541:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"549:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"557:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"565:6:11","type":""}],"src":"421:535:11"},{"body":{"nodeType":"YulBlock","src":"1062:76:11","statements":[{"nodeType":"YulAssignment","src":"1072:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1084:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1095:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1080:3:11"},"nodeType":"YulFunctionCall","src":"1080:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1072:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1114:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"1125:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1107:6:11"},"nodeType":"YulFunctionCall","src":"1107:25:11"},"nodeType":"YulExpressionStatement","src":"1107:25:11"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1031:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1042:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1053:4:11","type":""}],"src":"961:177:11"},{"body":{"nodeType":"YulBlock","src":"1247:212:11","statements":[{"body":{"nodeType":"YulBlock","src":"1293:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1302:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1305:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1295:6:11"},"nodeType":"YulFunctionCall","src":"1295:12:11"},"nodeType":"YulExpressionStatement","src":"1295:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1268:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1277:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1264:3:11"},"nodeType":"YulFunctionCall","src":"1264:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1289:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1260:3:11"},"nodeType":"YulFunctionCall","src":"1260:32:11"},"nodeType":"YulIf","src":"1257:52:11"},{"nodeType":"YulAssignment","src":"1318:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1341:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1328:12:11"},"nodeType":"YulFunctionCall","src":"1328:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1318:6:11"}]},{"nodeType":"YulAssignment","src":"1360:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1398:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:11"},"nodeType":"YulFunctionCall","src":"1383:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1370:12:11"},"nodeType":"YulFunctionCall","src":"1370:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1360:6:11"}]},{"nodeType":"YulAssignment","src":"1411:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1438:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1449:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1434:3:11"},"nodeType":"YulFunctionCall","src":"1434:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1421:12:11"},"nodeType":"YulFunctionCall","src":"1421:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1411:6:11"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1197:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1208:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1220:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1228:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1236:6:11","type":""}],"src":"1143:316:11"},{"body":{"nodeType":"YulBlock","src":"1621:218:11","statements":[{"nodeType":"YulAssignment","src":"1631:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1643:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1654:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1639:3:11"},"nodeType":"YulFunctionCall","src":"1639:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1631:4:11"}]},{"nodeType":"YulVariableDeclaration","src":"1666:29:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1684:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1689:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1680:3:11"},"nodeType":"YulFunctionCall","src":"1680:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"1693:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1676:3:11"},"nodeType":"YulFunctionCall","src":"1676:19:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1670:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1711:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1726:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1734:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1722:3:11"},"nodeType":"YulFunctionCall","src":"1722:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1704:6:11"},"nodeType":"YulFunctionCall","src":"1704:34:11"},"nodeType":"YulExpressionStatement","src":"1704:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1758:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1769:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1754:3:11"},"nodeType":"YulFunctionCall","src":"1754:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1778:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1786:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1774:3:11"},"nodeType":"YulFunctionCall","src":"1774:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1747:6:11"},"nodeType":"YulFunctionCall","src":"1747:43:11"},"nodeType":"YulExpressionStatement","src":"1747:43:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1810:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1821:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1806:3:11"},"nodeType":"YulFunctionCall","src":"1806:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"1826:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1799:6:11"},"nodeType":"YulFunctionCall","src":"1799:34:11"},"nodeType":"YulExpressionStatement","src":"1799:34:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1574:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1585:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1593:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1601:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1612:4:11","type":""}],"src":"1464:375:11"},{"body":{"nodeType":"YulBlock","src":"1922:199:11","statements":[{"body":{"nodeType":"YulBlock","src":"1968:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1977:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1980:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1970:6:11"},"nodeType":"YulFunctionCall","src":"1970:12:11"},"nodeType":"YulExpressionStatement","src":"1970:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1943:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1952:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1939:3:11"},"nodeType":"YulFunctionCall","src":"1939:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1964:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1935:3:11"},"nodeType":"YulFunctionCall","src":"1935:32:11"},"nodeType":"YulIf","src":"1932:52:11"},{"nodeType":"YulVariableDeclaration","src":"1993:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2012:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2006:5:11"},"nodeType":"YulFunctionCall","src":"2006:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1997:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2075:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2084:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2077:6:11"},"nodeType":"YulFunctionCall","src":"2077:12:11"},"nodeType":"YulExpressionStatement","src":"2077:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2044:5:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2065:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2058:6:11"},"nodeType":"YulFunctionCall","src":"2058:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2051:6:11"},"nodeType":"YulFunctionCall","src":"2051:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2041:2:11"},"nodeType":"YulFunctionCall","src":"2041:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2034:6:11"},"nodeType":"YulFunctionCall","src":"2034:40:11"},"nodeType":"YulIf","src":"2031:60:11"},{"nodeType":"YulAssignment","src":"2100:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2110:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2100:6:11"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1888:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1899:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1911:6:11","type":""}],"src":"1844:277:11"},{"body":{"nodeType":"YulBlock","src":"2255:145:11","statements":[{"nodeType":"YulAssignment","src":"2265:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2277:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2288:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2273:3:11"},"nodeType":"YulFunctionCall","src":"2273:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2265:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2307:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2322:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2338:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2343:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2334:3:11"},"nodeType":"YulFunctionCall","src":"2334:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"2347:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2330:3:11"},"nodeType":"YulFunctionCall","src":"2330:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2318:3:11"},"nodeType":"YulFunctionCall","src":"2318:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2300:6:11"},"nodeType":"YulFunctionCall","src":"2300:51:11"},"nodeType":"YulExpressionStatement","src":"2300:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2371:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2382:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2367:3:11"},"nodeType":"YulFunctionCall","src":"2367:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"2387:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2360:6:11"},"nodeType":"YulFunctionCall","src":"2360:34:11"},"nodeType":"YulExpressionStatement","src":"2360:34:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2216:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2227:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2235:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2246:4:11","type":""}],"src":"2126:274:11"},{"body":{"nodeType":"YulBlock","src":"2646:350:11","statements":[{"nodeType":"YulAssignment","src":"2656:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2668:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2679:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2664:3:11"},"nodeType":"YulFunctionCall","src":"2664:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2656:4:11"}]},{"nodeType":"YulVariableDeclaration","src":"2692:29:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2710:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2715:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2706:3:11"},"nodeType":"YulFunctionCall","src":"2706:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"2719:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2702:3:11"},"nodeType":"YulFunctionCall","src":"2702:19:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2696:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2737:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2752:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"2760:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2748:3:11"},"nodeType":"YulFunctionCall","src":"2748:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2730:6:11"},"nodeType":"YulFunctionCall","src":"2730:34:11"},"nodeType":"YulExpressionStatement","src":"2730:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2784:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2795:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2780:3:11"},"nodeType":"YulFunctionCall","src":"2780:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2804:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"2812:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2800:3:11"},"nodeType":"YulFunctionCall","src":"2800:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2773:6:11"},"nodeType":"YulFunctionCall","src":"2773:43:11"},"nodeType":"YulExpressionStatement","src":"2773:43:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2836:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2847:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2832:3:11"},"nodeType":"YulFunctionCall","src":"2832:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"2852:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2825:6:11"},"nodeType":"YulFunctionCall","src":"2825:34:11"},"nodeType":"YulExpressionStatement","src":"2825:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2879:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2890:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2875:3:11"},"nodeType":"YulFunctionCall","src":"2875:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"2895:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2868:6:11"},"nodeType":"YulFunctionCall","src":"2868:34:11"},"nodeType":"YulExpressionStatement","src":"2868:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2922:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2933:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2918:3:11"},"nodeType":"YulFunctionCall","src":"2918:19:11"},{"name":"value4","nodeType":"YulIdentifier","src":"2939:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2911:6:11"},"nodeType":"YulFunctionCall","src":"2911:35:11"},"nodeType":"YulExpressionStatement","src":"2911:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2966:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2977:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2962:3:11"},"nodeType":"YulFunctionCall","src":"2962:19:11"},{"name":"value5","nodeType":"YulIdentifier","src":"2983:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2955:6:11"},"nodeType":"YulFunctionCall","src":"2955:35:11"},"nodeType":"YulExpressionStatement","src":"2955:35:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2575:9:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2586:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2594:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2602:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2610:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2618:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2626:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2637:4:11","type":""}],"src":"2405:591:11"},{"body":{"nodeType":"YulBlock","src":"3082:103:11","statements":[{"body":{"nodeType":"YulBlock","src":"3128:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3137:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3140:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3130:6:11"},"nodeType":"YulFunctionCall","src":"3130:12:11"},"nodeType":"YulExpressionStatement","src":"3130:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3103:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3112:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3099:3:11"},"nodeType":"YulFunctionCall","src":"3099:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3124:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3095:3:11"},"nodeType":"YulFunctionCall","src":"3095:32:11"},"nodeType":"YulIf","src":"3092:52:11"},{"nodeType":"YulAssignment","src":"3153:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3169:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3163:5:11"},"nodeType":"YulFunctionCall","src":"3163:16:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3153:6:11"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3048:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3059:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3071:6:11","type":""}],"src":"3001:184:11"},{"body":{"nodeType":"YulBlock","src":"3403:306:11","statements":[{"nodeType":"YulAssignment","src":"3413:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3425:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3436:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3421:3:11"},"nodeType":"YulFunctionCall","src":"3421:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3413:4:11"}]},{"nodeType":"YulVariableDeclaration","src":"3449:29:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3467:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3472:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3463:3:11"},"nodeType":"YulFunctionCall","src":"3463:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"3476:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3459:3:11"},"nodeType":"YulFunctionCall","src":"3459:19:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3453:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3494:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3509:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3517:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3505:3:11"},"nodeType":"YulFunctionCall","src":"3505:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3487:6:11"},"nodeType":"YulFunctionCall","src":"3487:34:11"},"nodeType":"YulExpressionStatement","src":"3487:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3541:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3552:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3537:3:11"},"nodeType":"YulFunctionCall","src":"3537:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3561:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3569:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3557:3:11"},"nodeType":"YulFunctionCall","src":"3557:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3530:6:11"},"nodeType":"YulFunctionCall","src":"3530:43:11"},"nodeType":"YulExpressionStatement","src":"3530:43:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3593:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3604:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3589:3:11"},"nodeType":"YulFunctionCall","src":"3589:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"3609:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3582:6:11"},"nodeType":"YulFunctionCall","src":"3582:34:11"},"nodeType":"YulExpressionStatement","src":"3582:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3636:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3647:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3632:3:11"},"nodeType":"YulFunctionCall","src":"3632:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"3652:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3625:6:11"},"nodeType":"YulFunctionCall","src":"3625:34:11"},"nodeType":"YulExpressionStatement","src":"3625:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3679:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3690:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3675:3:11"},"nodeType":"YulFunctionCall","src":"3675:19:11"},{"name":"value4","nodeType":"YulIdentifier","src":"3696:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3668:6:11"},"nodeType":"YulFunctionCall","src":"3668:35:11"},"nodeType":"YulExpressionStatement","src":"3668:35:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3340:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3351:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3359:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3367:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3375:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3383:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:11","type":""}],"src":"3190:519:11"},{"body":{"nodeType":"YulBlock","src":"3871:162:11","statements":[{"nodeType":"YulAssignment","src":"3881:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3893:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3904:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3889:3:11"},"nodeType":"YulFunctionCall","src":"3889:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3881:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3923:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"3934:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3916:6:11"},"nodeType":"YulFunctionCall","src":"3916:25:11"},"nodeType":"YulExpressionStatement","src":"3916:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3961:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3972:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3957:3:11"},"nodeType":"YulFunctionCall","src":"3957:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"3977:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3950:6:11"},"nodeType":"YulFunctionCall","src":"3950:34:11"},"nodeType":"YulExpressionStatement","src":"3950:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:11"},"nodeType":"YulFunctionCall","src":"4000:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"4020:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:11"},"nodeType":"YulFunctionCall","src":"3993:34:11"},"nodeType":"YulExpressionStatement","src":"3993:34:11"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_bytes32__to_t_bytes32_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3824:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3835:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3843:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3851:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3862:4:11","type":""}],"src":"3714:319:11"},{"body":{"nodeType":"YulBlock","src":"4175:275:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4185:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4205:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4199:5:11"},"nodeType":"YulFunctionCall","src":"4199:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4189:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4221:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4230:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4225:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4292:77:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4317:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"4322:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4313:3:11"},"nodeType":"YulFunctionCall","src":"4313:11:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4340:6:11"},{"name":"i","nodeType":"YulIdentifier","src":"4348:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4336:3:11"},"nodeType":"YulFunctionCall","src":"4336:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"4352:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4332:3:11"},"nodeType":"YulFunctionCall","src":"4332:25:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4326:5:11"},"nodeType":"YulFunctionCall","src":"4326:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4306:6:11"},"nodeType":"YulFunctionCall","src":"4306:53:11"},"nodeType":"YulExpressionStatement","src":"4306:53:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4251:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"4254:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4248:2:11"},"nodeType":"YulFunctionCall","src":"4248:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4262:21:11","statements":[{"nodeType":"YulAssignment","src":"4264:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4273:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"4276:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4269:3:11"},"nodeType":"YulFunctionCall","src":"4269:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4264:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"4244:3:11","statements":[]},"src":"4240:129:11"},{"nodeType":"YulVariableDeclaration","src":"4378:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4392:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"4397:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4388:3:11"},"nodeType":"YulFunctionCall","src":"4388:16:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4382:2:11","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4420:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"4424:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4413:6:11"},"nodeType":"YulFunctionCall","src":"4413:13:11"},"nodeType":"YulExpressionStatement","src":"4413:13:11"},{"nodeType":"YulAssignment","src":"4435:9:11","value":{"name":"_1","nodeType":"YulIdentifier","src":"4442:2:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4435:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4151:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4156:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4167:3:11","type":""}],"src":"4038:412:11"},{"body":{"nodeType":"YulBlock","src":"4629:170:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4646:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4657:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4639:6:11"},"nodeType":"YulFunctionCall","src":"4639:21:11"},"nodeType":"YulExpressionStatement","src":"4639:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4680:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4691:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4676:3:11"},"nodeType":"YulFunctionCall","src":"4676:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"4696:2:11","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4669:6:11"},"nodeType":"YulFunctionCall","src":"4669:30:11"},"nodeType":"YulExpressionStatement","src":"4669:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4719:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4730:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4715:3:11"},"nodeType":"YulFunctionCall","src":"4715:18:11"},{"hexValue":"46756c66696c6c206f72646572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"4735:22:11","type":"","value":"Fulfill order failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4708:6:11"},"nodeType":"YulFunctionCall","src":"4708:50:11"},"nodeType":"YulExpressionStatement","src":"4708:50:11"},{"nodeType":"YulAssignment","src":"4767:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4779:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4790:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4775:3:11"},"nodeType":"YulFunctionCall","src":"4775:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4767:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_786164181b1dbf10e7134b576dc7774e946256bcc196a412825e802f7a01134d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4606:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4620:4:11","type":""}],"src":"4455:344:11"},{"body":{"nodeType":"YulBlock","src":"4933:119:11","statements":[{"nodeType":"YulAssignment","src":"4943:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4955:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4966:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4951:3:11"},"nodeType":"YulFunctionCall","src":"4951:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4943:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4985:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"4996:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4978:6:11"},"nodeType":"YulFunctionCall","src":"4978:25:11"},"nodeType":"YulExpressionStatement","src":"4978:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5023:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5034:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5019:3:11"},"nodeType":"YulFunctionCall","src":"5019:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"5039:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5012:6:11"},"nodeType":"YulFunctionCall","src":"5012:34:11"},"nodeType":"YulExpressionStatement","src":"5012:34:11"}]},"name":"abi_encode_tuple_t_uint256_t_bytes32__to_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4894:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4905:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4913:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4924:4:11","type":""}],"src":"4804:248:11"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_contract$_ISwapManager_$1937__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes32__to_t_bytes32_t_uint256_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_786164181b1dbf10e7134b576dc7774e946256bcc196a412825e802f7a01134d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Fulfill order failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_bytes32__to_t_uint256_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100345760003560e01c8063709d039d14610039578063eb9bd09914610076578063f6dccf2e14610097575b600080fd5b34801561004557600080fd5b50600054610059906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61008961008436600461041b565b6100ac565b60405190815260200161006d565b6100aa6100a5366004610470565b6102cc565b005b60006001600160a01b038716156101ae576040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b038816906323b872dd906064016020604051808303816000875af1158015610110573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610134919061049c565b5060005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018790529088169063095ea7b3906044016020604051808303816000875af1158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac919061049c565b505b600080546001600160a01b0390811690637535f2df908a16156101d25760006101d4565b875b6040516001600160e01b031960e084901b1681526001600160a01b03808d1660048301528b166024820152604481018a9052606481018990526084810188905260a4810187905260c40160206040518083038185885af115801561023c573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061026191906104c5565b604080516001600160a01b038b811682528a1660208201529081018890526060810187905260808101859052909150339082907f49f29b9cfb3bb0783c26f435fe9808e8b7fd6958ebb9363de51f5b697c712c749060a00160405180910390a3979650505050505050565b600080546040516024810186905260448101859052606481018490526001600160a01b0390911690349060840160408051601f198184030181529181526020820180516001600160e01b0316637b6e679760e11b1790525161032e91906104de565b60006040518083038185875af1925050503d806000811461036b576040519150601f19603f3d011682016040523d82523d6000602084013e610370565b606091505b50509050806103bc5760405162461bcd60e51b8152602060048201526014602482015273119d5b199a5b1b081bdc99195c8819985a5b195960621b604482015260640160405180910390fd5b6040805184815260208101849052339186917fdafd13066d5a7c6b0591d8c19f57c75c45b8fa038153891c78a582507cbd18c7910160405180910390a350505050565b80356001600160a01b038116811461041657600080fd5b919050565b60008060008060008060c0878903121561043457600080fd5b61043d876103ff565b955061044b602088016103ff565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060006060848603121561048557600080fd5b505081359360208301359350604090920135919050565b6000602082840312156104ae57600080fd5b815180151581146104be57600080fd5b9392505050565b6000602082840312156104d757600080fd5b5051919050565b6000825160005b818110156104ff57602081860181015185830152016104e5565b50600092019182525091905056fea264697066735822122025c98ca6385de334f04371777aa164b6764e1e7f7764d7efd52b99cc65b1a75e64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x709D039D EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xEB9BD099 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF6DCCF2E EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x59 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x84 CALLDATASIZE PUSH1 0x4 PUSH2 0x41B JUMP JUMPDEST PUSH2 0xAC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6D JUMP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x49C JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP9 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x188 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x49C JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH4 0x7535F2DF SWAP1 DUP11 AND ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 PUSH2 0x1D4 JUMP JUMPDEST DUP8 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x84 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xA4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xC4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE DUP11 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 DUP3 SWAP1 PUSH32 0x49F29B9CFB3BB0783C26F435FE9808E8B7FD6958EBB9363DE51F5B697C712C74 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x7B6E6797 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x370 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x119D5B199A5B1B081BDC99195C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 DUP7 SWAP2 PUSH32 0xDAFD13066D5A7C6B0591D8C19F57C75C45B8FA038153891C78A582507CBD18C7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43D DUP8 PUSH2 0x3FF JUMP JUMPDEST SWAP6 POP PUSH2 0x44B PUSH1 0x20 DUP9 ADD PUSH2 0x3FF JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x4E5 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xC9 DUP13 0xA6 CODESIZE 0x5D 0xE3 CALLVALUE CREATE NUMBER PUSH18 0x777AA164B6764E1E7F7764D7EFD52B99CC65 0xB1 0xA7 0x5E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"157:2399:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;184:31;;;;;;;;;;-1:-1:-1;184:31:10;;;;-1:-1:-1;;;;;184:31:10;;;;;;-1:-1:-1;;;;;199:32:11;;;181:51;;169:2;154:18;184:31:10;;;;;;;;799:1112;;;;;;:::i;:::-;;:::i;:::-;;;1107:25:11;;;1095:2;1080:18;799:1112:10;961:177:11;1968:586:10;;;;;;:::i;:::-;;:::i;:::-;;799:1112;1014:7;-1:-1:-1;;;;;1101:21:10;;;1097:246;;1138:65;;-1:-1:-1;;;1138:65:10;;1167:10;1138:65;;;1704:34:11;1187:4:10;1754:18:11;;;1747:43;1806:18;;;1799:34;;;-1:-1:-1;;;;;1138:28:10;;;;;1639:18:11;;1138:65:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1309:11:10;;1277:55;;-1:-1:-1;;;1277:55:10;;-1:-1:-1;;;;;1309:11:10;;;1277:55;;;2300:51:11;2367:18;;;2360:34;;;1277:23:10;;;;;;2273:18:11;;1277:55:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1097:246;1409:15;1427:11;;-1:-1:-1;;;;;1427:11:10;;;;:23;;1471:21;;;:36;;1506:1;1471:36;;;1495:8;1471:36;1427:237;;-1:-1:-1;;;;;;1427:237:10;;;;;;;-1:-1:-1;;;;;2748:15:11;;;1427:237:10;;;2730:34:11;2800:15;;2780:18;;;2773:43;2832:18;;;2825:34;;;2875:18;;;2868:34;;;2918:19;;;2911:35;;;2962:19;;;2955:35;;;2664:19;;1427:237:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1688:183;;;-1:-1:-1;;;;;3505:15:11;;;3487:34;;3557:15;;3552:2;3537:18;;3530:43;3589:18;;;3582:34;;;3647:2;3632:18;;3625:34;;;3690:3;3675:19;;3668:35;;;1409:255:10;;-1:-1:-1;1736:10:10;;1409:255;;1688:183;;3436:3:11;3421:19;1688:183:10;;;;;;;1897:7;799:1112;-1:-1:-1;;;;;;;799:1112:10:o;1968:586::-;2173:12;2199:11;;2248:170;;;;;3916:25:11;;;3957:18;;;3950:34;;;4000:18;;;3993:34;;;-1:-1:-1;;;;;2199:11:10;;;;2224:9;;3889:18:11;;2248:170:10;;;-1:-1:-1;;2248:170:10;;;;;;;;;;;;;;-1:-1:-1;;;;;2248:170:10;-1:-1:-1;;;2248:170:10;;;2191:237;;;2248:170;2191:237;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:256;;;2446:7;2438:40;;;;-1:-1:-1;;;2438:40:10;;4657:2:11;2438:40:10;;;4639:21:11;4696:2;4676:18;;;4669:30;-1:-1:-1;;;4715:18:11;;;4708:50;4775:18;;2438:40:10;;;;;;;;2493:54;;;4978:25:11;;;5034:2;5019:18;;5012:34;;;2517:10:10;;2508:7;;2493:54;;4951:18:11;2493:54:10;;;;;;;2089:465;1968:586;;;:::o;243:173:11:-;311:20;;-1:-1:-1;;;;;360:31:11;;350:42;;340:70;;406:1;403;396:12;340:70;243:173;;;:::o;421:535::-;525:6;533;541;549;557;565;618:3;606:9;597:7;593:23;589:33;586:53;;;635:1;632;625:12;586:53;658:29;677:9;658:29;:::i;:::-;648:39;;706:38;740:2;729:9;725:18;706:38;:::i;:::-;421:535;;696:48;;-1:-1:-1;;;;791:2:11;776:18;;763:32;;842:2;827:18;;814:32;;893:3;878:19;;865:33;;-1:-1:-1;945:3:11;930:19;;;917:33;;-1:-1:-1;421:535:11:o;1143:316::-;1220:6;1228;1236;1289:2;1277:9;1268:7;1264:23;1260:32;1257:52;;;1305:1;1302;1295:12;1257:52;-1:-1:-1;;1328:23:11;;;1398:2;1383:18;;1370:32;;-1:-1:-1;1449:2:11;1434:18;;;1421:32;;1143:316;-1:-1:-1;1143:316:11:o;1844:277::-;1911:6;1964:2;1952:9;1943:7;1939:23;1935:32;1932:52;;;1980:1;1977;1970:12;1932:52;2012:9;2006:16;2065:5;2058:13;2051:21;2044:5;2041:32;2031:60;;2087:1;2084;2077:12;2031:60;2110:5;1844:277;-1:-1:-1;;;1844:277:11:o;3001:184::-;3071:6;3124:2;3112:9;3103:7;3099:23;3095:32;3092:52;;;3140:1;3137;3130:12;3092:52;-1:-1:-1;3163:16:11;;3001:184;-1:-1:-1;3001:184:11:o;4038:412::-;4167:3;4205:6;4199:13;4230:1;4240:129;4254:6;4251:1;4248:13;4240:129;;;4352:4;4336:14;;;4332:25;;4326:32;4313:11;;;4306:53;4269:12;4240:129;;;-1:-1:-1;4424:1:11;4388:16;;4413:13;;;-1:-1:-1;4388:16:11;4038:412;-1:-1:-1;4038:412:11:o"},"gasEstimates":{"creation":{"codeDepositCost":"269400","executionCost":"infinite","totalCost":"infinite"},"external":{"fulfillOrder(bytes32,uint256,bytes32)":"infinite","receiveOrder(address,address,uint256,uint256,uint256,bytes32)":"infinite","swapManager()":"2304"}},"methodIdentifiers":{"fulfillOrder(bytes32,uint256,bytes32)":"f6dccf2e","receiveOrder(address,address,uint256,uint256,uint256,bytes32)":"eb9bd099","swapManager()":"709d039d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"OrderFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"OrderReceived\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"fulfillOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"receiveOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapManager\",\"outputs\":[{\"internalType\":\"contract ISwapManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockRelayer.sol\":\"MockRelayer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/interfaces/ISwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ISwapManager {\\n    struct SwapOrder {\\n        address initiator;\\n        address resolver;\\n        uint256 amountIn;\\n        uint256 amountOutMin;\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 deadline;\\n        bytes32 secretHash;\\n        bool isFulfilled;\\n        bool isRefunded;\\n    }\\n\\n    event OrderCreated(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n\\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        bytes32 secret\\n    );\\n\\n    event OrderRefunded(bytes32 indexed orderId);\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32);\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable;\\n\\n    function refundOrder(bytes32 orderId) external;\\n\\n    function registerWorkerWallet(address workerWallet) external;\\n    \\n    function getOrder(bytes32 orderId) external view returns (\\n        address initiator,\\n        address resolver,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 deadline,\\n        bytes32 secretHash,\\n        bool isFulfilled,\\n        bool isRefunded\\n    );\\n    \\n    /**\\n     * @notice Register a worker wallet that can be used to fulfill orders\\n     * @param workerWallet The address of the worker wallet to register\\n     */\\n}\\n\",\"keccak256\":\"0x29ca9e861fd2c3805cf6979bebd14111d3bb5adf435fa62ecf6b7904a85af20b\",\"license\":\"MIT\"},\"contracts/mock/MockRelayer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/ISwapManager.sol\\\";\\n\\ncontract MockRelayer {\\n    ISwapManager public swapManager;\\n    \\n    // Events to track relayer actions\\n    event OrderReceived(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n    \\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        uint256 amountOut,\\n        bytes32 secret\\n    );\\n\\n    constructor(address _swapManager) {\\n        swapManager = ISwapManager(_swapManager);\\n    }\\n\\n    // Simulate receiving an order from a user\\n    function receiveOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32) {\\n        // Transfer tokens from the user to this contract first\\n        if (tokenIn != address(0)) {\\n            IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn);\\n            // Approve the swap manager to spend the tokens\\n            IERC20(tokenIn).approve(address(swapManager), amountIn);\\n        }\\n        \\n        // Create the order in the swap manager\\n        bytes32 orderId = swapManager.createOrder{\\n            value: tokenIn == address(0) ? amountIn : 0\\n        }(\\n            tokenIn,\\n            tokenOut,\\n            amountIn,\\n            amountOutMin,\\n            deadline,\\n            secretHash\\n        );\\n        \\n        emit OrderReceived(\\n            orderId,\\n            msg.sender,\\n            tokenIn,\\n            tokenOut,\\n            amountIn,\\n            amountOutMin,\\n            secretHash\\n        );\\n        \\n        return orderId;\\n    }\\n    \\n    // Simulate a resolver fulfilling an order\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable {\\n        // Forward any ETH sent with the transaction to the swap manager\\n        (bool success, ) = address(swapManager).call{value: msg.value}(\\n            abi.encodeWithSignature(\\n                \\\"fulfillOrder(bytes32,uint256,bytes32)\\\",\\n                orderId,\\n                amountOut,\\n                secret\\n            )\\n        );\\n        require(success, \\\"Fulfill order failed\\\");\\n        emit OrderFulfilled(orderId, msg.sender, amountOut, secret);\\n    }\\n}\\n\",\"keccak256\":\"0x786b4f50d290f883dbb1e1e114b79ef1cf5359d007c8db8364ba36076be4ea72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1997,"contract":"contracts/mock/MockRelayer.sol:MockRelayer","label":"swapManager","offset":0,"slot":"0","type":"t_contract(ISwapManager)1937"}],"types":{"t_contract(ISwapManager)1937":{"encoding":"inplace","label":"contract ISwapManager","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}