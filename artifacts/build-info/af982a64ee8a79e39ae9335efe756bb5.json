{"id":"af982a64ee8a79e39ae9335efe756bb5","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/interfaces/ISwapManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface ISwapManager {\n    struct SwapOrder {\n        address initiator;\n        address resolver;\n        uint256 amountIn;\n        uint256 amountOutMin;\n        address tokenIn;\n        address tokenOut;\n        uint256 deadline;\n        bytes32 secretHash;\n        bool isFulfilled;\n        bool isRefunded;\n    }\n\n    event OrderCreated(\n        bytes32 indexed orderId,\n        address indexed initiator,\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        bytes32 secretHash\n    );\n\n    event OrderFulfilled(\n        bytes32 indexed orderId,\n        address indexed resolver,\n        bytes32 secret\n    );\n\n    event OrderRefunded(bytes32 indexed orderId);\n\n    function createOrder(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        uint256 deadline,\n        bytes32 secretHash\n    ) external payable returns (bytes32);\n\n    function fulfillOrder(\n        bytes32 orderId,\n        uint256 amountOut,\n        bytes32 secret\n    ) external payable;\n\n    function refundOrder(bytes32 orderId) external;\n\n    function getOrder(bytes32 orderId) external view returns (SwapOrder memory);\n    \n    /**\n     * @notice Register a worker wallet that can be used to fulfill orders\n     * @param workerWallet The address of the worker wallet to register\n     */\n    function registerWorkerWallet(address workerWallet) external;\n}\n"},"contracts/interfaces/IWorkerWallet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface IWorkerWallet {\n    event Executed(address indexed target, uint256 value, bytes data, bool success);\n    event Withdrawn(address token, uint256 amount, address to);\n    \n    function execute(\n        address target,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bool success, bytes memory result);\n    \n    function withdraw(address token, uint256 amount, address to) external;\n    \n    function owner() external view returns (address);\n    \n    function swapManager() external view returns (address);\n}\n"},"contracts/mock/ERC20Mock.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract ERC20Mock is ERC20 {\n    uint8 private _decimals;\n\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply\n    ) ERC20(name, symbol) {\n        _mint(msg.sender, initialSupply);\n        _decimals = 18;\n    }\n\n    function mint(address to, uint256 amount) public {\n        _mint(to, amount);\n    }\n\n    function burn(address from, uint256 amount) public {\n        _burn(from, amount);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return _decimals;\n    }\n}\n"},"contracts/mock/MockRelayer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"../interfaces/ISwapManager.sol\";\n\ncontract MockRelayer {\n    ISwapManager public swapManager;\n    \n    // Events to track relayer actions\n    event OrderReceived(\n        bytes32 indexed orderId,\n        address indexed initiator,\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        bytes32 secretHash\n    );\n    \n    event OrderFulfilled(\n        bytes32 indexed orderId,\n        address indexed resolver,\n        uint256 amountOut,\n        bytes32 secret\n    );\n\n    constructor(address _swapManager) {\n        swapManager = ISwapManager(_swapManager);\n    }\n\n    // Simulate receiving an order from a user\n    function receiveOrder(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        uint256 deadline,\n        bytes32 secretHash\n    ) external payable returns (bytes32) {\n        bytes32 orderId = swapManager.createOrder{\n            value: tokenIn == address(0) ? amountIn : 0\n        }(\n            tokenIn,\n            tokenOut,\n            amountIn,\n            amountOutMin,\n            deadline,\n            secretHash\n        );\n        \n        emit OrderReceived(\n            orderId,\n            msg.sender,\n            tokenIn,\n            tokenOut,\n            amountIn,\n            amountOutMin,\n            secretHash\n        );\n        \n        return orderId;\n    }\n    \n    // Simulate a resolver fulfilling an order\n    function fulfillOrder(\n        bytes32 orderId,\n        uint256 amountOut,\n        bytes32 secret\n    ) external payable {\n        // Forward any ETH sent with the transaction to the swap manager\n        (bool success, ) = address(swapManager).call{value: msg.value}(\n            abi.encodeWithSignature(\n                \"fulfillOrder(bytes32,uint256,bytes32)\",\n                orderId,\n                amountOut,\n                secret\n            )\n        );\n        require(success, \"Fulfill order failed\");\n        emit OrderFulfilled(orderId, msg.sender, amountOut, secret);\n    }\n    \n    // Get order details\n    function getOrder(bytes32 orderId) external view returns (ISwapManager.SwapOrder memory) {\n        return swapManager.getOrder(orderId);\n    }\n}\n"},"contracts/mock/WETH9.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract WETH9 {\n    string public name = \"Wrapped Ether\";\n    string public symbol = \"WETH\";\n    uint8 public decimals = 18;\n\n    event Approval(address indexed src, address indexed guy, uint256 wad);\n    event Transfer(address indexed src, address indexed dst, uint256 wad);\n    event Deposit(address indexed dst, uint256 wad);\n    event Withdrawal(address indexed src, uint256 wad);\n\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    receive() external payable {\n        deposit();\n    }\n\n    function deposit() public payable {\n        balanceOf[msg.sender] += msg.value;\n        emit Deposit(msg.sender, msg.value);\n    }\n\n    function withdraw(uint256 wad) public {\n        require(balanceOf[msg.sender] >= wad);\n        balanceOf[msg.sender] -= wad;\n        payable(msg.sender).transfer(wad);\n        emit Withdrawal(msg.sender, wad);\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    function approve(address guy, uint256 wad) public returns (bool) {\n        allowance[msg.sender][guy] = wad;\n        emit Approval(msg.sender, guy, wad);\n        return true;\n    }\n\n    function transfer(address dst, uint256 wad) public returns (bool) {\n        return transferFrom(msg.sender, dst, wad);\n    }\n\n    function transferFrom(\n        address src,\n        address dst,\n        uint256 wad\n    ) public returns (bool) {\n        require(balanceOf[src] >= wad);\n\n        if (src != msg.sender && allowance[src][msg.sender] != type(uint256).max) {\n            require(allowance[src][msg.sender] >= wad);\n            allowance[src][msg.sender] -= wad;\n        }\n\n        balanceOf[src] -= wad;\n        balanceOf[dst] += wad;\n\n        emit Transfer(src, dst, wad);\n\n        return true;\n    }\n}\n"},"contracts/SwapManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./interfaces/ISwapManager.sol\";\nimport \"./interfaces/IWorkerWallet.sol\";\n\ncontract SwapManager is ISwapManager, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    mapping(bytes32 => SwapOrder) public orders;\n    mapping(bytes32 => bool) public usedSecrets;\n    mapping(address => bool) public isWorkerWallet;\n    \n    address public immutable WETH;\n    \n    constructor(address weth) {\n        WETH = weth;\n    }\n\n    receive() external payable {}\n\n    function createOrder(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 amountOutMin,\n        uint256 deadline,\n        bytes32 secretHash\n    ) external payable nonReentrant returns (bytes32) {\n        require(amountIn > 0, \"Zero amount\");\n        require(deadline > block.timestamp, \"Invalid deadline\");\n        require(secretHash != bytes32(0), \"Invalid secret hash\");\n\n        bytes32 orderId = keccak256(\n            abi.encodePacked(\n                msg.sender,\n                block.timestamp,\n                amountIn,\n                tokenIn,\n                tokenOut,\n                secretHash\n            )\n        );\n\n        require(orders[orderId].initiator == address(0), \"Order exists\");\n\n        if (tokenIn == address(0)) {\n            require(msg.value == amountIn, \"Incorrect ETH amount\");\n        } else {\n            IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn);\n        }\n\n        orders[orderId] = SwapOrder({\n            initiator: msg.sender,\n            resolver: address(0),\n            amountIn: amountIn,\n            amountOutMin: amountOutMin,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            deadline: deadline,\n            secretHash: secretHash,\n            isFulfilled: false,\n            isRefunded: false\n        });\n\n        emit OrderCreated(\n            orderId,\n            msg.sender,\n            tokenIn,\n            tokenOut,\n            amountIn,\n            amountOutMin,\n            secretHash\n        );\n\n        return orderId;\n    }\n\n    function registerWorkerWallet(address workerWallet) external override {\n        require(!isWorkerWallet[workerWallet], \"WorkerWallet already registered\");\n        isWorkerWallet[workerWallet] = true;\n    }\n\n    function fulfillOrder(\n        bytes32 orderId,\n        uint256 amountOut,\n        bytes32 secret\n    ) external payable nonReentrant {\n        SwapOrder storage order = orders[orderId];\n        require(order.initiator != address(0), \"Order not found\");\n        require(!order.isFulfilled, \"Order already fulfilled\");\n        require(!order.isRefunded, \"Order was refunded\");\n        require(block.timestamp <= order.deadline, \"Order expired\");\n        require(keccak256(abi.encodePacked(secret)) == order.secretHash, \"Invalid secret\");\n        require(!usedSecrets[secret], \"Secret already used\");\n        require(amountOut >= order.amountOutMin, \"Insufficient output amount\");\n        \n        // If called by a worker wallet, verify it's the owner of the wallet\n        if (isWorkerWallet[msg.sender]) {\n            IWorkerWallet workerWallet = IWorkerWallet(msg.sender);\n            require(workerWallet.owner() == tx.origin, \"Not worker wallet owner\");\n        }\n\n        order.isFulfilled = true;\n        order.resolver = msg.sender;\n        usedSecrets[secret] = true;\n\n        // Transfer tokens to resolver\n        if (order.tokenIn == address(0)) {\n            // For native ETH, the amount should be in the contract\n            require(address(this).balance >= order.amountIn, \"Insufficient ETH balance\");\n            (bool success, ) = msg.sender.call{value: order.amountIn}(\"\");\n            require(success, \"ETH transfer failed\");\n        } else {\n            IERC20(order.tokenIn).safeTransfer(msg.sender, order.amountIn);\n        }\n\n        // Transfer output tokens from resolver to initiator\n        if (order.tokenOut == address(0)) {\n            require(msg.value >= amountOut, \"Insufficient ETH sent\");\n            if (msg.value > amountOut) {\n                payable(msg.sender).transfer(msg.value - amountOut);\n            }\n            payable(order.initiator).transfer(amountOut);\n        } else {\n            IERC20(order.tokenOut).safeTransferFrom(\n                msg.sender,\n                order.initiator,\n                amountOut\n            );\n        }\n\n        emit OrderFulfilled(orderId, msg.sender, secret);\n    }\n\n    function refundOrder(bytes32 orderId) external nonReentrant {\n        SwapOrder storage order = orders[orderId];\n        require(order.initiator != address(0), \"Order not found\");\n        require(!order.isFulfilled, \"Order already fulfilled\");\n        require(!order.isRefunded, \"Already refunded\");\n        require(block.timestamp > order.deadline, \"Deadline not reached\");\n        require(msg.sender == order.initiator, \"Not order initiator\");\n\n        order.isRefunded = true;\n\n        if (order.tokenIn == address(0)) {\n            payable(order.initiator).transfer(order.amountIn);\n        } else {\n            IERC20(order.tokenIn).safeTransfer(order.initiator, order.amountIn);\n        }\n\n        emit OrderRefunded(orderId);\n    }\n\n    function getOrder(bytes32 orderId) external view returns (SwapOrder memory) {\n        return orders[orderId];\n    }\n}\n"},"contracts/WorkerWallet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./interfaces/IWorkerWallet.sol\";\nimport \"./interfaces/ISwapManager.sol\";\n\ncontract WorkerWallet is IWorkerWallet {\n    using SafeERC20 for IERC20;\n\n    address public override owner;\n    address public override swapManager;\n    bool private initialized;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"WorkerWallet: caller is not the owner\");\n        _;\n    }\n\n    modifier onlySwapManager() {\n        require(msg.sender == swapManager, \"WorkerWallet: caller is not the swap manager\");\n        _;\n    }\n\n    constructor(address _owner, address _swapManager) {\n        require(_owner != address(0), \"WorkerWallet: owner is zero address\");\n        require(_swapManager != address(0), \"WorkerWallet: swap manager is zero address\");\n        \n        owner = _owner;\n        swapManager = _swapManager;\n    }\n\n    receive() external payable {}\n\n    function execute(\n        address target,\n        uint256 value,\n        bytes calldata data\n    ) external override onlyOwner returns (bool success, bytes memory result) {\n        (success, result) = target.call{value: value}(data);\n        emit Executed(target, value, data, success);\n    }\n\n    function withdraw(address token, uint256 amount, address to) external override onlyOwner {\n        require(to != address(0), \"WorkerWallet: cannot withdraw to zero address\");\n        \n        if (token == address(0)) {\n            (bool success, ) = to.call{value: amount}(\"\");\n            require(success, \"WorkerWallet: ETH transfer failed\");\n        } else {\n            IERC20(token).safeTransfer(to, amount);\n        }\n        \n        emit Withdrawn(token, amount, to);\n    }\n}\n"},"contracts/WorkerWalletFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./WorkerWallet.sol\";\nimport \"./interfaces/ISwapManager.sol\";\n\ncontract WorkerWalletFactory {\n    event WorkerWalletCreated(address indexed owner, address wallet);\n    \n    mapping(address => address) public getWorkerWallet;\n    mapping(address => bool) public isWorkerWallet;\n    \n    function createWorkerWallet(address _owner, address _swapManager) external returns (address workerWallet) {\n        require(getWorkerWallet[_owner] == address(0), \"WorkerWalletFactory: wallet already exists\");\n        \n        // Get the creation code of WorkerWallet\n        bytes memory bytecode = type(WorkerWallet).creationCode;\n        \n        // Encode constructor arguments\n        bytes memory constructorArgs = abi.encode(_owner, _swapManager);\n        \n        // Create the init code with constructor arguments\n        bytes memory initCode = abi.encodePacked(bytecode, constructorArgs);\n        \n        bytes32 salt = keccak256(abi.encodePacked(_owner, _swapManager, block.timestamp));\n        \n        assembly {\n            workerWallet := create2(0, add(initCode, 0x20), mload(initCode), salt)\n            if iszero(extcodesize(workerWallet)) {\n                revert(0, 0)\n            }\n        }\n        \n        // Register the worker wallet\n        getWorkerWallet[_owner] = workerWallet;\n        isWorkerWallet[workerWallet] = true;\n        \n        // Register the worker wallet with the swap manager\n        ISwapManager(_swapManager).registerWorkerWallet(workerWallet);\n        \n        emit WorkerWalletCreated(_owner, workerWallet);\n    }\n    \n    function computeWorkerWalletAddress(address _owner, address _swapManager) public view returns (address) {\n        bytes32 hash = keccak256(\n            abi.encodePacked(\n                bytes1(0xff),\n                address(this),\n                keccak256(abi.encodePacked(_owner, _swapManager, block.timestamp)),\n                keccak256(type(WorkerWallet).creationCode)\n            )\n        );\n        return address(uint160(uint256(hash)));\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[64]},"id":65,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"137:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":64,"linearizedBaseContracts":[64],"name":"ReentrancyGuard","nameLocation":"906:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:0","nodeType":"VariableDeclaration","scope":64,"src":"1676:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:0","nodeType":"VariableDeclaration","scope":64,"src":"1723:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1783:7:0","nodeType":"VariableDeclaration","scope":64,"src":"1767:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":17,"nodeType":"Block","src":"1811:39:0","statements":[{"expression":{"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":13,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":14,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1831:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"nodeType":"ExpressionStatement","src":"1821:22:0"}]},"id":18,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1808:2:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1811:0:0"},"scope":64,"src":"1797:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":28,"nodeType":"Block","src":"2251:79:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":21,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2261:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":23,"nodeType":"ExpressionStatement","src":"2261:21:0"},{"id":24,"nodeType":"PlaceholderStatement","src":"2292:1:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":25,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2303:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"2303:20:0"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1856:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":29,"name":"nonReentrant","nameLocation":"2236:12:0","nodeType":"ModifierDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"2248:2:0"},"src":"2227:103:0","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"2375:248:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":33,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":34,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2479:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":32,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2460:63:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2608:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42,"nodeType":"ExpressionStatement","src":"2598:18:0"}]},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2364:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"2375:0:0"},"scope":64,"src":"2336:287:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":51,"nodeType":"Block","src":"2667:171:0","statements":[{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2809:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":48,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2819:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"2809:22:0"}]},"id":52,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2656:2:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2667:0:0"},"scope":64,"src":"2629:209:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":62,"nodeType":"Block","src":"3081:43:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"3098:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":59,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3109:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":57,"id":61,"nodeType":"Return","src":"3091:26:0"}]},"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2844:168:0","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":63,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"3049:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"3075:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:0"},"scope":64,"src":"3017:107:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":65,"src":"888:2238:0","usedErrors":[],"usedEvents":[]}],"src":"112:3015:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1526],"ERC20":[651],"IERC20":[729],"IERC20Metadata":[754]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":66,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":67,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"130:22:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":68,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":755,"src":"153:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":69,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":1527,"src":"195:33:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":71,"name":"Context","nameLocations":["1550:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1526,"src":"1550:7:1"},"id":72,"nodeType":"InheritanceSpecifier","src":"1550:7:1"},{"baseName":{"id":73,"name":"IERC20","nameLocations":["1559:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1559:6:1"},"id":74,"nodeType":"InheritanceSpecifier","src":"1559:6:1"},{"baseName":{"id":75,"name":"IERC20Metadata","nameLocations":["1567:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":754,"src":"1567:14:1"},"id":76,"nodeType":"InheritanceSpecifier","src":"1567:14:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"230:1301:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,754,729,1526],"name":"ERC20","nameLocation":"1541:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":80,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1588:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":79,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":86,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1640:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":85,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":84,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":88,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1714:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":90,"mutability":"mutable","name":"_name","nameLocation":"1764:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1749:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":89,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":92,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1775:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":91,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":108,"nodeType":"Block","src":"2036:57:1","statements":[{"expression":{"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":100,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2046:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":101,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2054:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":103,"nodeType":"ExpressionStatement","src":"2046:13:1"},{"expression":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":104,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":105,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2079:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":107,"nodeType":"ExpressionStatement","src":"2069:17:1"}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"1804:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":109,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"name_","nameLocation":"2006:5:1","nodeType":"VariableDeclaration","scope":109,"src":"1992:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":94,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:1","nodeType":"VariableDeclaration","scope":109,"src":"2013:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":96,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:1"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"2036:0:1"},"scope":651,"src":"1980:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[741],"body":{"id":118,"nodeType":"Block","src":"2227:29:1","statements":[{"expression":{"id":116,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2244:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":115,"id":117,"nodeType":"Return","src":"2237:12:1"}]},"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"2099:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":119,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:1","nodeType":"FunctionDefinition","overrides":{"id":112,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:1"},"parameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"2171:2:1"},"returnParameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":119,"src":"2212:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":113,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:1"},"scope":651,"src":"2158:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[747],"body":{"id":128,"nodeType":"Block","src":"2440:31:1","statements":[{"expression":{"id":126,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"2457:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":125,"id":127,"nodeType":"Return","src":"2450:14:1"}]},"documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"2262:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:1","nodeType":"FunctionDefinition","overrides":{"id":122,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:1"},"parameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"2384:2:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"2425:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":123,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:1"},"scope":651,"src":"2369:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[753],"body":{"id":138,"nodeType":"Block","src":"3169:26:1","statements":[{"expression":{"hexValue":"3138","id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":135,"id":137,"nodeType":"Return","src":"3179:9:1"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"2477:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":139,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:1","nodeType":"FunctionDefinition","overrides":{"id":132,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:1"},"parameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"3121:2:1"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":139,"src":"3162:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":133,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:1"},"scope":651,"src":"3104:91:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":148,"nodeType":"Block","src":"3325:36:1","statements":[{"expression":{"id":146,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"3342:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":145,"id":147,"nodeType":"Return","src":"3335:19:1"}]},"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"3201:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":149,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:1","nodeType":"FunctionDefinition","overrides":{"id":142,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:1"},"parameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"3275:2:1"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":149,"src":"3316:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:1"},"scope":651,"src":"3255:106:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":162,"nodeType":"Block","src":"3502:42:1","statements":[{"expression":{"baseExpression":{"id":158,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3519:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":160,"indexExpression":{"id":159,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"3529:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":157,"id":161,"nodeType":"Return","src":"3512:25:1"}]},"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"3367:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":163,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:1","nodeType":"FunctionDefinition","overrides":{"id":154,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:1"},"parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"3446:7:1","nodeType":"VariableDeclaration","scope":163,"src":"3438:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:1"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":163,"src":"3493:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:1"},"scope":651,"src":"3419:125:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":187,"nodeType":"Block","src":"3825:104:1","statements":[{"assignments":[175],"declarations":[{"constant":false,"id":175,"mutability":"mutable","name":"owner","nameLocation":"3843:5:1","nodeType":"VariableDeclaration","scope":187,"src":"3835:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":178,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"3851:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:1"},{"expression":{"arguments":[{"id":180,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"3883:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":181,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"3890:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":182,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"3894:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":179,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3873:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"3873:28:1"},{"expression":{"hexValue":"74727565","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":173,"id":186,"nodeType":"Return","src":"3911:11:1"}]},"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"3550:185:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":188,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:1","nodeType":"FunctionDefinition","overrides":{"id":170,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:1"},"parameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"to","nameLocation":"3766:2:1","nodeType":"VariableDeclaration","scope":188,"src":"3758:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"amount","nameLocation":"3778:6:1","nodeType":"VariableDeclaration","scope":188,"src":"3770:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":188,"src":"3819:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":171,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:1"},"scope":651,"src":"3740:189:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":205,"nodeType":"Block","src":"4085:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":199,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"4102:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":201,"indexExpression":{"id":200,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"4114:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":203,"indexExpression":{"id":202,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"4121:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":198,"id":204,"nodeType":"Return","src":"4095:34:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"3935:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:1","nodeType":"FunctionDefinition","overrides":{"id":195,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:1"},"parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"owner","nameLocation":"4014:5:1","nodeType":"VariableDeclaration","scope":206,"src":"4006:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"spender","nameLocation":"4029:7:1","nodeType":"VariableDeclaration","scope":206,"src":"4021:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:1"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"4076:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:1"},"scope":651,"src":"3987:149:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":230,"nodeType":"Block","src":"4533:108:1","statements":[{"assignments":[218],"declarations":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"4551:5:1","nodeType":"VariableDeclaration","scope":230,"src":"4543:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":221,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":219,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"4559:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:1"},{"expression":{"arguments":[{"id":223,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"4590:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":224,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4597:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":225,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4606:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":222,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4581:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":227,"nodeType":"ExpressionStatement","src":"4581:32:1"},{"expression":{"hexValue":"74727565","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":216,"id":229,"nodeType":"Return","src":"4623:11:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"4142:297:1","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":231,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:1","nodeType":"FunctionDefinition","overrides":{"id":213,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:1"},"parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"4469:7:1","nodeType":"VariableDeclaration","scope":231,"src":"4461:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"amount","nameLocation":"4486:6:1","nodeType":"VariableDeclaration","scope":231,"src":"4478:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:1"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":231,"src":"4527:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":214,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:1"},"scope":651,"src":"4444:197:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":263,"nodeType":"Block","src":"5306:153:1","statements":[{"assignments":[245],"declarations":[{"constant":false,"id":245,"mutability":"mutable","name":"spender","nameLocation":"5324:7:1","nodeType":"VariableDeclaration","scope":263,"src":"5316:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":248,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":246,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"5334:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:1"},{"expression":{"arguments":[{"id":250,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"5372:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":251,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"5378:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":252,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"5387:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":249,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5356:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":254,"nodeType":"ExpressionStatement","src":"5356:38:1"},{"expression":{"arguments":[{"id":256,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"5414:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":257,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"5420:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":258,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"5424:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":255,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5404:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":260,"nodeType":"ExpressionStatement","src":"5404:27:1"},{"expression":{"hexValue":"74727565","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":243,"id":262,"nodeType":"Return","src":"5441:11:1"}]},"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4647:551:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":264,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:1","nodeType":"FunctionDefinition","overrides":{"id":240,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:1"},"parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"from","nameLocation":"5233:4:1","nodeType":"VariableDeclaration","scope":264,"src":"5225:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"to","nameLocation":"5247:2:1","nodeType":"VariableDeclaration","scope":264,"src":"5239:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"amount","nameLocation":"5259:6:1","nodeType":"VariableDeclaration","scope":264,"src":"5251:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:1"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"5300:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":241,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:1"},"scope":651,"src":"5203:256:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":292,"nodeType":"Block","src":"5948:140:1","statements":[{"assignments":[275],"declarations":[{"constant":false,"id":275,"mutability":"mutable","name":"owner","nameLocation":"5966:5:1","nodeType":"VariableDeclaration","scope":292,"src":"5958:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":278,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"5974:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:1"},{"expression":{"arguments":[{"id":280,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"6005:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":281,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"6012:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":283,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"6031:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":284,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"6038:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":282,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"6021:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":286,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"6049:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":279,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"5996:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"5996:64:1"},{"expression":{"hexValue":"74727565","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":273,"id":291,"nodeType":"Return","src":"6070:11:1"}]},"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"5465:384:1","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":293,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:1","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"spender","nameLocation":"5889:7:1","nodeType":"VariableDeclaration","scope":293,"src":"5881:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:1","nodeType":"VariableDeclaration","scope":293,"src":"5898:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:1"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":293,"src":"5942:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":271,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:1"},"scope":651,"src":"5854:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":333,"nodeType":"Block","src":"6674:328:1","statements":[{"assignments":[304],"declarations":[{"constant":false,"id":304,"mutability":"mutable","name":"owner","nameLocation":"6692:5:1","nodeType":"VariableDeclaration","scope":333,"src":"6684:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":307,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"6700:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:1"},{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:1","nodeType":"VariableDeclaration","scope":333,"src":"6722:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":314,"initialValue":{"arguments":[{"id":311,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"6759:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":312,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"6766:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":310,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"6749:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":316,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6792:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"6812:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":321,"nodeType":"ExpressionStatement","src":"6784:85:1"},{"id":330,"nodeType":"UncheckedBlock","src":"6879:95:1","statements":[{"expression":{"arguments":[{"id":323,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"6912:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":324,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"6919:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":325,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6928:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":326,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"6947:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":322,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"6903:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"6903:60:1"}]},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":302,"id":332,"nodeType":"Return","src":"6984:11:1"}]},"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"6094:476:1","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:1","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"spender","nameLocation":"6610:7:1","nodeType":"VariableDeclaration","scope":334,"src":"6602:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:1","nodeType":"VariableDeclaration","scope":334,"src":"6619:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:1"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"6668:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":300,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:1"},"scope":651,"src":"6575:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":410,"nodeType":"Block","src":"7534:710:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":345,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"7552:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:1","typeDescriptions":{}}},"id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"ExpressionStatement","src":"7544:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7630:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:1","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"7622:64:1"},{"expression":{"arguments":[{"id":365,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"7718:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":366,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7724:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":367,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"7728:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":364,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"7697:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"7697:38:1"},{"assignments":[371],"declarations":[{"constant":false,"id":371,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:1","nodeType":"VariableDeclaration","scope":410,"src":"7746:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":375,"initialValue":{"baseExpression":{"id":372,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"7768:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":374,"indexExpression":{"id":373,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"7778:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":377,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"7801:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":378,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"7816:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":376,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":382,"nodeType":"ExpressionStatement","src":"7793:72:1"},{"id":397,"nodeType":"UncheckedBlock","src":"7875:273:1","statements":[{"expression":{"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":383,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"7899:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":385,"indexExpression":{"id":384,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"7909:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":386,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"7917:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":387,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"7931:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":390,"nodeType":"ExpressionStatement","src":"7899:38:1"},{"expression":{"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":391,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"8114:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":393,"indexExpression":{"id":392,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"8124:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":394,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"8131:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":396,"nodeType":"ExpressionStatement","src":"8114:23:1"}]},{"eventCall":{"arguments":[{"id":399,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8172:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":400,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"8178:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":401,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"8182:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":398,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"8163:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"EmitStatement","src":"8158:31:1"},{"expression":{"arguments":[{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8220:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":406,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"8226:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":407,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"8230:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":404,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"8200:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"8200:37:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"7008:443:1","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":411,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"7483:4:1","nodeType":"VariableDeclaration","scope":411,"src":"7475:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"7497:2:1","nodeType":"VariableDeclaration","scope":411,"src":"7489:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"amount","nameLocation":"7509:6:1","nodeType":"VariableDeclaration","scope":411,"src":"7501:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"7534:0:1"},"scope":651,"src":"7456:788:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":467,"nodeType":"Block","src":"8585:470:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":420,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"8603:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:1","typeDescriptions":{}}},"id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"8595:65:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:1","typeDescriptions":{}}},"id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":434,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"8704:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"8713:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":429,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"8671:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"8671:49:1"},{"expression":{"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":438,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"8731:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":439,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"8747:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":441,"nodeType":"ExpressionStatement","src":"8731:22:1"},{"id":448,"nodeType":"UncheckedBlock","src":"8763:175:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"8899:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"8909:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"8921:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"8899:28:1"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:1","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"8973:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":455,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"8982:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":449,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"8952:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"EmitStatement","src":"8947:42:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:1","typeDescriptions":{}}},"id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":463,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"9032:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":464,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"9041:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":458,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"9000:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"9000:48:1"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"8250:265:1","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":468,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:1","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"account","nameLocation":"8543:7:1","nodeType":"VariableDeclaration","scope":468,"src":"8535:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"amount","nameLocation":"8560:6:1","nodeType":"VariableDeclaration","scope":468,"src":"8552:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:1"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8585:0:1"},"scope":651,"src":"8520:535:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":539,"nodeType":"Block","src":"9440:594:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":477,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"9458:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:1","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":476,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"9450:67:1"},{"expression":{"arguments":[{"id":487,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"9549:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:1","typeDescriptions":{}}},"id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"9570:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":486,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"9528:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"9528:49:1"},{"assignments":[496],"declarations":[{"constant":false,"id":496,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:1","nodeType":"VariableDeclaration","scope":539,"src":"9588:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":500,"initialValue":{"baseExpression":{"id":497,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"9613:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":499,"indexExpression":{"id":498,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"9623:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":502,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"9649:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"9667:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":501,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"ExpressionStatement","src":"9641:71:1"},{"id":520,"nodeType":"UncheckedBlock","src":"9722:194:1","statements":[{"expression":{"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":508,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"9746:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":510,"indexExpression":{"id":509,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"9756:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":511,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"9767:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"9784:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":515,"nodeType":"ExpressionStatement","src":"9746:44:1"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":516,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"9883:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":517,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"9899:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":519,"nodeType":"ExpressionStatement","src":"9883:22:1"}]},{"eventCall":{"arguments":[{"id":522,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"9940:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:1","typeDescriptions":{}}},"id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"9961:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":521,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"9931:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"EmitStatement","src":"9926:42:1"},{"expression":{"arguments":[{"id":531,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:1","typeDescriptions":{}}},"id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"10020:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":530,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"9979:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"9979:48:1"}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"9061:309:1","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":540,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:1","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"account","nameLocation":"9398:7:1","nodeType":"VariableDeclaration","scope":540,"src":"9390:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"amount","nameLocation":"9415:6:1","nodeType":"VariableDeclaration","scope":540,"src":"9407:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:1"},"returnParameters":{"id":475,"nodeType":"ParameterList","parameters":[],"src":"9440:0:1"},"scope":651,"src":"9375:659:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"10540:257:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":551,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"10558:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:1","typeDescriptions":{}}},"id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"10550:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":561,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10636:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:1","typeDescriptions":{}}},"id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":560,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"ExpressionStatement","src":"10628:68:1"},{"expression":{"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":570,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"10707:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":573,"indexExpression":{"id":571,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"10719:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":574,"indexExpression":{"id":572,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10726:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10737:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":577,"nodeType":"ExpressionStatement","src":"10707:36:1"},{"eventCall":{"arguments":[{"id":579,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"10767:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":580,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10774:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":581,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10783:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10758:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":583,"nodeType":"EmitStatement","src":"10753:37:1"}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"10040:412:1","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:1","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"owner","nameLocation":"10483:5:1","nodeType":"VariableDeclaration","scope":585,"src":"10475:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"spender","nameLocation":"10498:7:1","nodeType":"VariableDeclaration","scope":585,"src":"10490:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"amount","nameLocation":"10515:6:1","nodeType":"VariableDeclaration","scope":585,"src":"10507:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:1"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"10540:0:1"},"scope":651,"src":"10457:340:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":627,"nodeType":"Block","src":"11168:321:1","statements":[{"assignments":[596],"declarations":[{"constant":false,"id":596,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:1","nodeType":"VariableDeclaration","scope":627,"src":"11178:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":601,"initialValue":{"arguments":[{"id":598,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"11215:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":599,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"11222:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":597,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"11205:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":602,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"11244:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":603,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:1","memberName":"max","nodeType":"MemberAccess","src":"11264:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":626,"nodeType":"IfStatement","src":"11240:243:1","trueBody":{"id":625,"nodeType":"Block","src":"11283:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":610,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"11305:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"11325:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":609,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":615,"nodeType":"ExpressionStatement","src":"11297:68:1"},{"id":624,"nodeType":"UncheckedBlock","src":"11379:94:1","statements":[{"expression":{"arguments":[{"id":617,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"11416:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"11423:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"11432:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":620,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"11451:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"11407:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"ExpressionStatement","src":"11407:51:1"}]}]}}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"10803:270:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":628,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:1","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"owner","nameLocation":"11111:5:1","nodeType":"VariableDeclaration","scope":628,"src":"11103:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"spender","nameLocation":"11126:7:1","nodeType":"VariableDeclaration","scope":628,"src":"11118:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"amount","nameLocation":"11143:6:1","nodeType":"VariableDeclaration","scope":628,"src":"11135:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:1"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"11168:0:1"},"scope":651,"src":"11078:411:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"12162:2:1","statements":[]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"11495:573:1","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:1","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"from","nameLocation":"12111:4:1","nodeType":"VariableDeclaration","scope":639,"src":"12103:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"to","nameLocation":"12125:2:1","nodeType":"VariableDeclaration","scope":639,"src":"12117:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"amount","nameLocation":"12137:6:1","nodeType":"VariableDeclaration","scope":639,"src":"12129:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:1"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[],"src":"12162:0:1"},"scope":651,"src":"12073:91:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"12840:2:1","statements":[]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"12170:577:1","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:1","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"from","nameLocation":"12789:4:1","nodeType":"VariableDeclaration","scope":650,"src":"12781:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"to","nameLocation":"12803:2:1","nodeType":"VariableDeclaration","scope":650,"src":"12795:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"amount","nameLocation":"12815:6:1","nodeType":"VariableDeclaration","scope":650,"src":"12807:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:1"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"12840:0:1"},"scope":651,"src":"12752:90:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1532:11312:1","usedErrors":[],"usedEvents":[663,672]}],"src":"105:12740:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":663,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":663,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":663,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":672,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":672,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":672,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":729,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":686,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":729,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":696,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":729,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":729,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":716,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":729,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2676:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2668:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2690:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2682:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"amount","nameLocation":"2702:6:2","nodeType":"VariableDeclaration","scope":728,"src":"2694:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2728:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:2"},"scope":729,"src":"2646:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"202:2534:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2631:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[754]},"id":755,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":732,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":755,"sourceUnit":730,"src":"135:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":734,"name":"IERC20","nameLocations":["305:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"305:6:3"},"id":735,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"160:116:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":754,"linearizedBaseContracts":[754,729],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":736,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":741,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":741,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":738,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":754,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":747,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":744,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":754,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":753,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":750,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":754,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":755,"src":"277:405:3","usedErrors":[],"usedEvents":[663,672]}],"src":"110:573:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[790]},"id":791,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":756,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"148:1963:4","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":790,"linearizedBaseContracts":[790],"name":"IERC20Permit","nameLocation":"2122:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"2141:850:4","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":775,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:4","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"owner","nameLocation":"3029:5:4","nodeType":"VariableDeclaration","scope":775,"src":"3021:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"spender","nameLocation":"3052:7:4","nodeType":"VariableDeclaration","scope":775,"src":"3044:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"value","nameLocation":"3077:5:4","nodeType":"VariableDeclaration","scope":775,"src":"3069:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:4","nodeType":"VariableDeclaration","scope":775,"src":"3092:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"v","nameLocation":"3124:1:4","nodeType":"VariableDeclaration","scope":775,"src":"3118:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":767,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"r","nameLocation":"3143:1:4","nodeType":"VariableDeclaration","scope":775,"src":"3135:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"s","nameLocation":"3162:1:4","nodeType":"VariableDeclaration","scope":775,"src":"3154:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:4"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[],"src":"3178:0:4"},"scope":790,"src":"2996:183:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"3185:294:4","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":783,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:4","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"3508:5:4","nodeType":"VariableDeclaration","scope":783,"src":"3500:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:4"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"3538:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:4"},"scope":790,"src":"3484:63:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"3553:128:4","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":789,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:4","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"3764:2:4"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"3790:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:4"},"scope":790,"src":"3739:60:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":791,"src":"2112:1689:4","usedErrors":[],"usedEvents":[]}],"src":"123:3679:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1496],"IERC20":[729],"IERC20Permit":[790],"SafeERC20":[1166]},"id":1167,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":792,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":793,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1167,"sourceUnit":730,"src":"140:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1167,"sourceUnit":791,"src":"164:40:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":795,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1167,"sourceUnit":1497,"src":"205:36:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"243:457:5","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1166,"linearizedBaseContracts":[1166],"name":"SafeERC20","nameLocation":"709:9:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":799,"libraryName":{"id":797,"name":"Address","nameLocations":["731:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1496,"src":"731:7:5"},"nodeType":"UsingForDirective","src":"725:26:5","typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":822,"nodeType":"Block","src":"1013:103:5","statements":[{"expression":{"arguments":[{"id":811,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"1043:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":814,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"1073:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":696,"src":"1073:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:5","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":817,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"1098:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"1102:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":812,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":810,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"1023:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"ExpressionStatement","src":"1023:86:5"}]},"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"757:179:5","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:5","nodeType":"FunctionDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"token","nameLocation":"970:5:5","nodeType":"VariableDeclaration","scope":823,"src":"963:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":802,"nodeType":"UserDefinedTypeName","pathNode":{"id":801,"name":"IERC20","nameLocations":["963:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"963:6:5"},"referencedDeclaration":729,"src":"963:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"to","nameLocation":"985:2:5","nodeType":"VariableDeclaration","scope":823,"src":"977:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"mutability":"mutable","name":"value","nameLocation":"997:5:5","nodeType":"VariableDeclaration","scope":823,"src":"989:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:5"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[],"src":"1013:0:5"},"scope":1166,"src":"941:175:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":849,"nodeType":"Block","src":"1445:113:5","statements":[{"expression":{"arguments":[{"id":837,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"1475:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":840,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"1505:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":728,"src":"1505:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:5","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":843,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"1534:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"1540:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"1544:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":838,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":836,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"1455:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":848,"nodeType":"ExpressionStatement","src":"1455:96:5"}]},"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"1122:228:5","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":850,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:5","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"token","nameLocation":"1388:5:5","nodeType":"VariableDeclaration","scope":850,"src":"1381:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":826,"nodeType":"UserDefinedTypeName","pathNode":{"id":825,"name":"IERC20","nameLocations":["1381:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1381:6:5"},"referencedDeclaration":729,"src":"1381:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"from","nameLocation":"1403:4:5","nodeType":"VariableDeclaration","scope":850,"src":"1395:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"to","nameLocation":"1417:2:5","nodeType":"VariableDeclaration","scope":850,"src":"1409:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"value","nameLocation":"1429:5:5","nodeType":"VariableDeclaration","scope":850,"src":"1421:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:5"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"1445:0:5"},"scope":1166,"src":"1355:203:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"1894:497:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2143:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":870,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1166","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1166","typeString":"library SafeERC20"}],"id":869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:5","typeDescriptions":{}}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":872,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"2190:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":866,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2159:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":706,"src":"2159:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":861,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":880,"nodeType":"ExpressionStatement","src":"2121:163:5"},{"expression":{"arguments":[{"id":882,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2314:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":885,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2344:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":716,"src":"2344:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:5","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":888,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"2368:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2377:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":883,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":881,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"2294:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"2294:90:5"}]},"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"1564:249:5","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:5","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"token","nameLocation":"1846:5:5","nodeType":"VariableDeclaration","scope":894,"src":"1839:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":853,"nodeType":"UserDefinedTypeName","pathNode":{"id":852,"name":"IERC20","nameLocations":["1839:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1839:6:5"},"referencedDeclaration":729,"src":"1839:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"spender","nameLocation":"1861:7:5","nodeType":"VariableDeclaration","scope":894,"src":"1853:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"value","nameLocation":"1878:5:5","nodeType":"VariableDeclaration","scope":894,"src":"1870:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:5"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[],"src":"1894:0:5"},"scope":1166,"src":"1818:573:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":930,"nodeType":"Block","src":"2668:194:5","statements":[{"assignments":[906],"declarations":[{"constant":false,"id":906,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:5","nodeType":"VariableDeclaration","scope":930,"src":"2678:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":915,"initialValue":{"arguments":[{"arguments":[{"id":911,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1166","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1166","typeString":"library SafeERC20"}],"id":910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:5","typeDescriptions":{}}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2732:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":907,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"2701:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":706,"src":"2701:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:5"},{"expression":{"arguments":[{"id":917,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"2770:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":920,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"2800:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":716,"src":"2800:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:5","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":923,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2824:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2833:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2848:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":918,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":916,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"2750:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"ExpressionStatement","src":"2750:105:5"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"2397:180:5","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":931,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:5","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"token","nameLocation":"2620:5:5","nodeType":"VariableDeclaration","scope":931,"src":"2613:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":897,"nodeType":"UserDefinedTypeName","pathNode":{"id":896,"name":"IERC20","nameLocations":["2613:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"2613:6:5"},"referencedDeclaration":729,"src":"2613:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"spender","nameLocation":"2635:7:5","nodeType":"VariableDeclaration","scope":931,"src":"2627:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"value","nameLocation":"2652:5:5","nodeType":"VariableDeclaration","scope":931,"src":"2644:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:5"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"2668:0:5"},"scope":1166,"src":"2582:280:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"3139:321:5","statements":[{"id":974,"nodeType":"UncheckedBlock","src":"3149:305:5","statements":[{"assignments":[943],"declarations":[{"constant":false,"id":943,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:5","nodeType":"VariableDeclaration","scope":974,"src":"3173:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":952,"initialValue":{"arguments":[{"arguments":[{"id":948,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1166","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1166","typeString":"library SafeERC20"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:5","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3227:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":944,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"3196:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":706,"src":"3196:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":954,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"3257:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3273:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":953,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":959,"nodeType":"ExpressionStatement","src":"3249:75:5"},{"expression":{"arguments":[{"id":961,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"3358:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":964,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"3388:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":716,"src":"3388:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:5","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":967,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3412:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"3421:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3436:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":962,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":960,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"3338:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"ExpressionStatement","src":"3338:105:5"}]}]},"documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"2868:180:5","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:5","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"token","nameLocation":"3091:5:5","nodeType":"VariableDeclaration","scope":976,"src":"3084:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":934,"nodeType":"UserDefinedTypeName","pathNode":{"id":933,"name":"IERC20","nameLocations":["3084:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"3084:6:5"},"referencedDeclaration":729,"src":"3084:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"spender","nameLocation":"3106:7:5","nodeType":"VariableDeclaration","scope":976,"src":"3098:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"value","nameLocation":"3123:5:5","nodeType":"VariableDeclaration","scope":976,"src":"3115:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:5"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"3139:0:5"},"scope":1166,"src":"3053:407:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1022,"nodeType":"Block","src":"3856:333:5","statements":[{"assignments":[988],"declarations":[{"constant":false,"id":988,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:5","nodeType":"VariableDeclaration","scope":1022,"src":"3866:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":987,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":997,"initialValue":{"arguments":[{"expression":{"expression":{"id":991,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"3917:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":716,"src":"3917:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:5","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":994,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"3941:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3950:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":989,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:5"},{"condition":{"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:5","subExpression":{"arguments":[{"id":999,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"3996:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"id":1000,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"4003:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":998,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3972:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1021,"nodeType":"IfStatement","src":"3967:216:5","trueBody":{"id":1020,"nodeType":"Block","src":"4018:165:5","statements":[{"expression":{"arguments":[{"id":1004,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"4052:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1007,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"4082:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":716,"src":"4082:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:5","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1010,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"4106:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1005,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1003,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"4032:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"ExpressionStatement","src":"4032:86:5"},{"expression":{"arguments":[{"id":1016,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"4152:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"id":1017,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"4159:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1015,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"4132:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1019,"nodeType":"ExpressionStatement","src":"4132:40:5"}]}}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"3466:308:5","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1023,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:5","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"token","nameLocation":"3808:5:5","nodeType":"VariableDeclaration","scope":1023,"src":"3801:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":979,"nodeType":"UserDefinedTypeName","pathNode":{"id":978,"name":"IERC20","nameLocations":["3801:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"3801:6:5"},"referencedDeclaration":729,"src":"3801:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"spender","nameLocation":"3823:7:5","nodeType":"VariableDeclaration","scope":1023,"src":"3815:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"value","nameLocation":"3840:5:5","nodeType":"VariableDeclaration","scope":1023,"src":"3832:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:5"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"3856:0:5"},"scope":1166,"src":"3779:410:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1079,"nodeType":"Block","src":"4556:257:5","statements":[{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:5","nodeType":"VariableDeclaration","scope":1079,"src":"4566:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1050,"initialValue":{"arguments":[{"id":1048,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"4601:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1046,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"4588:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$790","typeString":"contract IERC20Permit"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":783,"src":"4588:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:5"},{"expression":{"arguments":[{"id":1054,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"4630:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"4637:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"4646:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1057,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"4653:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1058,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"4663:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1059,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"4666:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1060,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"4669:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1051,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"4617:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$790","typeString":"contract IERC20Permit"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:5","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":775,"src":"4617:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1062,"nodeType":"ExpressionStatement","src":"4617:54:5"},{"assignments":[1064],"declarations":[{"constant":false,"id":1064,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:5","nodeType":"VariableDeclaration","scope":1079,"src":"4681:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1069,"initialValue":{"arguments":[{"id":1067,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"4715:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1065,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"4702:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$790","typeString":"contract IERC20Permit"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":783,"src":"4702:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"4739:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1072,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"4753:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"4731:75:5"}]},"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"4195:141:5","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1080,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:5","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"token","nameLocation":"4383:5:5","nodeType":"VariableDeclaration","scope":1080,"src":"4370:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$790","typeString":"contract IERC20Permit"},"typeName":{"id":1026,"nodeType":"UserDefinedTypeName","pathNode":{"id":1025,"name":"IERC20Permit","nameLocations":["4370:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":790,"src":"4370:12:5"},"referencedDeclaration":790,"src":"4370:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$790","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"owner","nameLocation":"4406:5:5","nodeType":"VariableDeclaration","scope":1080,"src":"4398:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"spender","nameLocation":"4429:7:5","nodeType":"VariableDeclaration","scope":1080,"src":"4421:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"value","nameLocation":"4454:5:5","nodeType":"VariableDeclaration","scope":1080,"src":"4446:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:5","nodeType":"VariableDeclaration","scope":1080,"src":"4469:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"v","nameLocation":"4501:1:5","nodeType":"VariableDeclaration","scope":1080,"src":"4495:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1036,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"r","nameLocation":"4520:1:5","nodeType":"VariableDeclaration","scope":1080,"src":"4512:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"s","nameLocation":"4539:1:5","nodeType":"VariableDeclaration","scope":1080,"src":"4531:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:5"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[],"src":"4556:0:5"},"scope":1166,"src":"4341:472:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1116,"nodeType":"Block","src":"5266:572:5","statements":[{"assignments":[1090],"declarations":[{"constant":false,"id":1090,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:5","nodeType":"VariableDeclaration","scope":1116,"src":"5615:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1089,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1099,"initialValue":{"arguments":[{"id":1096,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"5669:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1093,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"5649:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}],"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:5","typeDescriptions":{}}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:5","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1256,"src":"5641:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1101,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"5728:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:5","memberName":"length","nodeType":"MemberAccess","src":"5728:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1107,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"5765:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1108,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:5","typeDescriptions":{}}}],"id":1110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1105,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:5","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1100,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"ExpressionStatement","src":"5720:111:5"}]},"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"4819:372:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:5","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"token","nameLocation":"5232:5:5","nodeType":"VariableDeclaration","scope":1117,"src":"5225:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":1083,"nodeType":"UserDefinedTypeName","pathNode":{"id":1082,"name":"IERC20","nameLocations":["5225:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"5225:6:5"},"referencedDeclaration":729,"src":"5225:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"data","nameLocation":"5252:4:5","nodeType":"VariableDeclaration","scope":1117,"src":"5239:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1085,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:5"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"5266:0:5"},"scope":1166,"src":"5196:642:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1164,"nodeType":"Block","src":"6428:505:5","statements":[{"assignments":[1129,1131],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"success","nameLocation":"6729:7:5","nodeType":"VariableDeclaration","scope":1164,"src":"6724:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1128,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:5","nodeType":"VariableDeclaration","scope":1164,"src":"6738:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1130,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1139,"initialValue":{"arguments":[{"id":1137,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6785:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1134,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6773:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}],"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:5","typeDescriptions":{}}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:5","memberName":"call","nodeType":"MemberAccess","src":"6765:19:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:5"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1140,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"6819:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1141,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"6831:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:5","memberName":"length","nodeType":"MemberAccess","src":"6831:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1147,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"6868:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1148,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:5","typeDescriptions":{}}}],"id":1150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1145,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:5","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1153,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1159,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6919:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}],"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:5","typeDescriptions":{}}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1155,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"6892:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1496_$","typeString":"type(library Address)"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"6892:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1127,"id":1163,"nodeType":"Return","src":"6800:126:5"}]},"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"5844:490:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1165,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:5","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"token","nameLocation":"6379:5:5","nodeType":"VariableDeclaration","scope":1165,"src":"6372:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":1120,"nodeType":"UserDefinedTypeName","pathNode":{"id":1119,"name":"IERC20","nameLocations":["6372:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"6372:6:5"},"referencedDeclaration":729,"src":"6372:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"data","nameLocation":"6399:4:5","nodeType":"VariableDeclaration","scope":1165,"src":"6386:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1122,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:5"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1165,"src":"6422:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1125,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:5"},"scope":1166,"src":"6339:594:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1167,"src":"701:6234:5","usedErrors":[],"usedEvents":[]}],"src":"115:6821:5"},"id":5},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1496]},"id":1497,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1168,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"126:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1496,"linearizedBaseContracts":[1496],"name":"Address","nameLocation":"202:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1183,"nodeType":"Block","src":"1478:254:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1177,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"1702:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:6","memberName":"code","nodeType":"MemberAccess","src":"1702:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:6","memberName":"length","nodeType":"MemberAccess","src":"1702:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1176,"id":1182,"nodeType":"Return","src":"1695:30:6"}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"216:1191:6","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:6","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"account","nameLocation":"1440:7:6","nodeType":"VariableDeclaration","scope":1184,"src":"1432:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:6"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1184,"src":"1472:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1174,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:6"},"scope":1496,"src":"1412:320:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1217,"nodeType":"Block","src":"2718:241:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1195,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1496","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1496","typeString":"library Address"}],"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:6","typeDescriptions":{}}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:6","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1198,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2761:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"2728:73:6"},{"assignments":[1204,null],"declarations":[{"constant":false,"id":1204,"mutability":"mutable","name":"success","nameLocation":"2818:7:6","nodeType":"VariableDeclaration","scope":1217,"src":"2813:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1203,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1211,"initialValue":{"arguments":[{"hexValue":"","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1205,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"2831:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:6","memberName":"call","nodeType":"MemberAccess","src":"2831:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1207,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2853:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:6"},{"expression":{"arguments":[{"id":1213,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"2882:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"ExpressionStatement","src":"2874:78:6"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"1738:904:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1218,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:6","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:6","nodeType":"VariableDeclaration","scope":1218,"src":"2666:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"amount","nameLocation":"2701:6:6","nodeType":"VariableDeclaration","scope":1218,"src":"2693:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:6"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[],"src":"2718:0:6"},"scope":1496,"src":"2647:312:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1235,"nodeType":"Block","src":"3790:96:6","statements":[{"expression":{"arguments":[{"id":1229,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"3829:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1230,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"3837:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1228,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1276,1320],"referencedDeclaration":1320,"src":"3807:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1227,"id":1234,"nodeType":"Return","src":"3800:79:6"}]},"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"2965:731:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:6","nodeType":"FunctionDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"target","nameLocation":"3731:6:6","nodeType":"VariableDeclaration","scope":1236,"src":"3723:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"data","nameLocation":"3752:4:6","nodeType":"VariableDeclaration","scope":1236,"src":"3739:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1222,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:6"},"returnParameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1236,"src":"3776:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1225,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:6"},"scope":1496,"src":"3701:185:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1255,"nodeType":"Block","src":"4255:76:6","statements":[{"expression":{"arguments":[{"id":1249,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"4294:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1250,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"4302:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1252,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"4311:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1248,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1276,1320],"referencedDeclaration":1320,"src":"4272:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1247,"id":1254,"nodeType":"Return","src":"4265:59:6"}]},"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"3892:211:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1256,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:6","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"target","nameLocation":"4147:6:6","nodeType":"VariableDeclaration","scope":1256,"src":"4139:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"data","nameLocation":"4176:4:6","nodeType":"VariableDeclaration","scope":1256,"src":"4163:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1240,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:6","nodeType":"VariableDeclaration","scope":1256,"src":"4190:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1242,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:6"},"returnParameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1256,"src":"4241:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1245,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:6"},"scope":1496,"src":"4108:223:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"4806:111:6","statements":[{"expression":{"arguments":[{"id":1269,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4845:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1270,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"4853:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"4859:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1268,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1276,1320],"referencedDeclaration":1320,"src":"4823:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1267,"id":1274,"nodeType":"Return","src":"4816:94:6"}]},"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"4337:351:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:6","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"target","nameLocation":"4732:6:6","nodeType":"VariableDeclaration","scope":1276,"src":"4724:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"data","nameLocation":"4753:4:6","nodeType":"VariableDeclaration","scope":1276,"src":"4740:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1260,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"value","nameLocation":"4767:5:6","nodeType":"VariableDeclaration","scope":1276,"src":"4759:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:6"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"4792:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1265,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:6"},"scope":1496,"src":"4693:224:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1319,"nodeType":"Block","src":"5344:267:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1293,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1496","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1496","typeString":"library Address"}],"id":1292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:6","typeDescriptions":{}}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:6","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"5387:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1300,"nodeType":"ExpressionStatement","src":"5354:81:6"},{"assignments":[1302,1304],"declarations":[{"constant":false,"id":1302,"mutability":"mutable","name":"success","nameLocation":"5451:7:6","nodeType":"VariableDeclaration","scope":1319,"src":"5446:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1301,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:6","nodeType":"VariableDeclaration","scope":1319,"src":"5460:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1311,"initialValue":{"arguments":[{"id":1309,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"5513:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1305,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"5487:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:6","memberName":"call","nodeType":"MemberAccess","src":"5487:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"5506:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:6"},{"expression":{"arguments":[{"id":1313,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"5562:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"5570:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1315,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"5579:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1316,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"5591:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1312,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"5535:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1289,"id":1318,"nodeType":"Return","src":"5528:76:6"}]},"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"4923:237:6","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1320,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:6","nodeType":"FunctionDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"target","nameLocation":"5213:6:6","nodeType":"VariableDeclaration","scope":1320,"src":"5205:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"data","nameLocation":"5242:4:6","nodeType":"VariableDeclaration","scope":1320,"src":"5229:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1280,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"5264:5:6","nodeType":"VariableDeclaration","scope":1320,"src":"5256:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:6","nodeType":"VariableDeclaration","scope":1320,"src":"5279:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1284,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:6"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1320,"src":"5330:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1287,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:6"},"scope":1496,"src":"5165:446:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1336,"nodeType":"Block","src":"5888:97:6","statements":[{"expression":{"arguments":[{"id":1331,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"5924:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1332,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"5932:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1330,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1337,1366],"referencedDeclaration":1366,"src":"5905:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1329,"id":1335,"nodeType":"Return","src":"5898:80:6"}]},"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"5617:166:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:6","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"target","nameLocation":"5824:6:6","nodeType":"VariableDeclaration","scope":1337,"src":"5816:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"data","nameLocation":"5845:4:6","nodeType":"VariableDeclaration","scope":1337,"src":"5832:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1324,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:6"},"returnParameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1337,"src":"5874:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1327,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:6"},"scope":1496,"src":"5788:197:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1365,"nodeType":"Block","src":"6327:168:6","statements":[{"assignments":[1350,1352],"declarations":[{"constant":false,"id":1350,"mutability":"mutable","name":"success","nameLocation":"6343:7:6","nodeType":"VariableDeclaration","scope":1365,"src":"6338:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1349,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:6","nodeType":"VariableDeclaration","scope":1365,"src":"6352:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1351,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1357,"initialValue":{"arguments":[{"id":1355,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"6397:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1353,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6379:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:6"},{"expression":{"arguments":[{"id":1359,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6446:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1360,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"6454:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1361,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"6463:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1362,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"6475:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1358,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"6419:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1348,"id":1364,"nodeType":"Return","src":"6412:76:6"}]},"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"5991:173:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1366,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:6","nodeType":"FunctionDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"target","nameLocation":"6214:6:6","nodeType":"VariableDeclaration","scope":1366,"src":"6206:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"data","nameLocation":"6243:4:6","nodeType":"VariableDeclaration","scope":1366,"src":"6230:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:6","nodeType":"VariableDeclaration","scope":1366,"src":"6257:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1343,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:6"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1366,"src":"6313:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1346,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:6"},"scope":1496,"src":"6169:326:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1382,"nodeType":"Block","src":"6771:101:6","statements":[{"expression":{"arguments":[{"id":1377,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"6809:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1378,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"6817:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1376,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1383,1412],"referencedDeclaration":1412,"src":"6788:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1375,"id":1381,"nodeType":"Return","src":"6781:84:6"}]},"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"6501:168:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1383,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:6","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"target","nameLocation":"6712:6:6","nodeType":"VariableDeclaration","scope":1383,"src":"6704:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"data","nameLocation":"6733:4:6","nodeType":"VariableDeclaration","scope":1383,"src":"6720:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1370,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:6"},"returnParameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1383,"src":"6757:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1373,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:6"},"scope":1496,"src":"6674:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1411,"nodeType":"Block","src":"7213:170:6","statements":[{"assignments":[1396,1398],"declarations":[{"constant":false,"id":1396,"mutability":"mutable","name":"success","nameLocation":"7229:7:6","nodeType":"VariableDeclaration","scope":1411,"src":"7224:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1395,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:6","nodeType":"VariableDeclaration","scope":1411,"src":"7238:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1397,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1403,"initialValue":{"arguments":[{"id":1401,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7285:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1399,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7265:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:6","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:6"},{"expression":{"arguments":[{"id":1405,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7334:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1406,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"7342:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1407,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"7351:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1408,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"7363:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1404,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"7307:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1394,"id":1410,"nodeType":"Return","src":"7300:76:6"}]},"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"6878:175:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1412,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:6","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"target","nameLocation":"7105:6:6","nodeType":"VariableDeclaration","scope":1412,"src":"7097:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"data","nameLocation":"7134:4:6","nodeType":"VariableDeclaration","scope":1412,"src":"7121:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1387,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:6","nodeType":"VariableDeclaration","scope":1412,"src":"7148:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1389,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:6"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1412,"src":"7199:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1392,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:6"},"scope":1496,"src":"7058:325:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1450,"nodeType":"Block","src":"7865:434:6","statements":[{"condition":{"id":1426,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"7879:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1448,"nodeType":"Block","src":"8235:58:6","statements":[{"expression":{"arguments":[{"id":1444,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"8257:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1445,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"8269:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1443,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8249:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1447,"nodeType":"ExpressionStatement","src":"8249:33:6"}]},"id":1449,"nodeType":"IfStatement","src":"7875:418:6","trueBody":{"id":1442,"nodeType":"Block","src":"7888:341:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1427,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"7906:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:6","memberName":"length","nodeType":"MemberAccess","src":"7906:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1439,"nodeType":"IfStatement","src":"7902:286:6","trueBody":{"id":1438,"nodeType":"Block","src":"7930:258:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1433,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"8132:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1432,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"8121:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1431,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1437,"nodeType":"ExpressionStatement","src":"8113:60:6"}]}},{"expression":{"id":1440,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"8208:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1425,"id":1441,"nodeType":"Return","src":"8201:17:6"}]}}]},"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"7389:277:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:6","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"target","nameLocation":"7724:6:6","nodeType":"VariableDeclaration","scope":1451,"src":"7716:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"success","nameLocation":"7745:7:6","nodeType":"VariableDeclaration","scope":1451,"src":"7740:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1416,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:6","nodeType":"VariableDeclaration","scope":1451,"src":"7762:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1418,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:6","nodeType":"VariableDeclaration","scope":1451,"src":"7795:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1420,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:6"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"7851:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1423,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:6"},"scope":1496,"src":"7671:628:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1474,"nodeType":"Block","src":"8680:135:6","statements":[{"condition":{"id":1463,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"8694:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1472,"nodeType":"Block","src":"8751:58:6","statements":[{"expression":{"arguments":[{"id":1468,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"8773:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1469,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8785:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1467,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8765:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1471,"nodeType":"ExpressionStatement","src":"8765:33:6"}]},"id":1473,"nodeType":"IfStatement","src":"8690:119:6","trueBody":{"id":1466,"nodeType":"Block","src":"8703:42:6","statements":[{"expression":{"id":1464,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"8724:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1462,"id":1465,"nodeType":"Return","src":"8717:17:6"}]}}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"8305:210:6","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1475,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:6","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"success","nameLocation":"8560:7:6","nodeType":"VariableDeclaration","scope":1475,"src":"8555:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1453,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:6","nodeType":"VariableDeclaration","scope":1475,"src":"8577:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1455,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:6","nodeType":"VariableDeclaration","scope":1475,"src":"8610:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1457,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:6"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1475,"src":"8666:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1460,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:6"},"scope":1496,"src":"8520:295:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1494,"nodeType":"Block","src":"8904:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1482,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"8980:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:6","memberName":"length","nodeType":"MemberAccess","src":"8980:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1492,"nodeType":"Block","src":"9310:45:6","statements":[{"expression":{"arguments":[{"id":1489,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"9331:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1488,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1491,"nodeType":"ExpressionStatement","src":"9324:20:6"}]},"id":1493,"nodeType":"IfStatement","src":"8976:379:6","trueBody":{"id":1487,"nodeType":"Block","src":"9003:301:6","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:6","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:6"},"nodeType":"YulFunctionCall","src":"9202:17:6"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:6","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:6"},"nodeType":"YulFunctionCall","src":"9243:19:6"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:6"},"nodeType":"YulFunctionCall","src":"9236:44:6"},"nodeType":"YulExpressionStatement","src":"9236:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1477,"isOffset":false,"isSlot":false,"src":"9208:10:6","valueSize":1},{"declaration":1477,"isOffset":false,"isSlot":false,"src":"9251:10:6","valueSize":1}],"id":1486,"nodeType":"InlineAssembly","src":"9152:142:6"}]}}]},"id":1495,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:6","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:6","nodeType":"VariableDeclaration","scope":1495,"src":"8838:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1476,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:6","nodeType":"VariableDeclaration","scope":1495,"src":"8863:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1478,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:6"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[],"src":"8904:0:6"},"scope":1496,"src":"8821:540:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1497,"src":"194:9169:6","usedErrors":[],"usedEvents":[]}],"src":"101:9263:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1526]},"id":1527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1498,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"126:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1526,"linearizedBaseContracts":[1526],"name":"Context","nameLocation":"641:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1507,"nodeType":"Block","src":"717:34:7","statements":[{"expression":{"expression":{"id":1504,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:7","memberName":"sender","nodeType":"MemberAccess","src":"734:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1503,"id":1506,"nodeType":"Return","src":"727:17:7"}]},"id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:7","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[],"src":"674:2:7"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"708:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:7"},"scope":1526,"src":"655:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1516,"nodeType":"Block","src":"824:32:7","statements":[{"expression":{"expression":{"id":1513,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:7","memberName":"data","nodeType":"MemberAccess","src":"841:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1512,"id":1515,"nodeType":"Return","src":"834:15:7"}]},"id":1517,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:7","nodeType":"FunctionDefinition","parameters":{"id":1509,"nodeType":"ParameterList","parameters":[],"src":"774:2:7"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1517,"src":"808:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1510,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:7"},"scope":1526,"src":"757:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1524,"nodeType":"Block","src":"934:25:7","statements":[{"expression":{"hexValue":"30","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1521,"id":1523,"nodeType":"Return","src":"944:8:7"}]},"id":1525,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:7","nodeType":"FunctionDefinition","parameters":{"id":1518,"nodeType":"ParameterList","parameters":[],"src":"891:2:7"},"returnParameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1525,"src":"925:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:7"},"scope":1526,"src":"862:97:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1527,"src":"623:338:7","usedErrors":[],"usedEvents":[]}],"src":"101:861:7"},"id":7},"contracts/SwapManager.sol":{"ast":{"absolutePath":"contracts/SwapManager.sol","exportedSymbols":{"Address":[1496],"IERC20":[729],"IERC20Permit":[790],"ISwapManager":[2510],"IWorkerWallet":[2563],"ReentrancyGuard":[64],"SafeERC20":[1166],"SwapManager":[2080]},"id":2081,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2081,"sourceUnit":730,"src":"58:56:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2081,"sourceUnit":1167,"src":"115:65:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":1531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2081,"sourceUnit":65,"src":"181:62:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISwapManager.sol","file":"./interfaces/ISwapManager.sol","id":1532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2081,"sourceUnit":2511,"src":"244:39:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IWorkerWallet.sol","file":"./interfaces/IWorkerWallet.sol","id":1533,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2081,"sourceUnit":2564,"src":"284:40:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1534,"name":"ISwapManager","nameLocations":["350:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2510,"src":"350:12:8"},"id":1535,"nodeType":"InheritanceSpecifier","src":"350:12:8"},{"baseName":{"id":1536,"name":"ReentrancyGuard","nameLocations":["364:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":64,"src":"364:15:8"},"id":1537,"nodeType":"InheritanceSpecifier","src":"364:15:8"}],"canonicalName":"SwapManager","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2080,"linearizedBaseContracts":[2080,64,2510],"name":"SwapManager","nameLocation":"335:11:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1541,"libraryName":{"id":1538,"name":"SafeERC20","nameLocations":["392:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"392:9:8"},"nodeType":"UsingForDirective","src":"386:27:8","typeName":{"id":1540,"nodeType":"UserDefinedTypeName","pathNode":{"id":1539,"name":"IERC20","nameLocations":["406:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"406:6:8"},"referencedDeclaration":729,"src":"406:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"9c3f1e90","id":1546,"mutability":"mutable","name":"orders","nameLocation":"456:6:8","nodeType":"VariableDeclaration","scope":2080,"src":"419:43:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$2436_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder)"},"typeName":{"id":1545,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"427:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"419:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$2436_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1544,"nodeType":"UserDefinedTypeName","pathNode":{"id":1543,"name":"SwapOrder","nameLocations":["438:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2436,"src":"438:9:8"},"referencedDeclaration":2436,"src":"438:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder"}}},"visibility":"public"},{"constant":false,"functionSelector":"a4516c48","id":1550,"mutability":"mutable","name":"usedSecrets","nameLocation":"500:11:8","nodeType":"VariableDeclaration","scope":2080,"src":"468:43:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1549,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"476:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"468:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1548,"name":"bool","nodeType":"ElementaryTypeName","src":"487:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"1f6d2eac","id":1554,"mutability":"mutable","name":"isWorkerWallet","nameLocation":"549:14:8","nodeType":"VariableDeclaration","scope":2080,"src":"517:46:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1553,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"517:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1552,"name":"bool","nodeType":"ElementaryTypeName","src":"536:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"ad5c4648","id":1556,"mutability":"immutable","name":"WETH","nameLocation":"599:4:8","nodeType":"VariableDeclaration","scope":2080,"src":"574:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"574:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":1565,"nodeType":"Block","src":"640:28:8","statements":[{"expression":{"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1561,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"650:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1562,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"657:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"650:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1564,"nodeType":"ExpressionStatement","src":"650:11:8"}]},"id":1566,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"weth","nameLocation":"634:4:8","nodeType":"VariableDeclaration","scope":1566,"src":"626:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"626:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"625:14:8"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[],"src":"640:0:8"},"scope":2080,"src":"614:54:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1569,"nodeType":"Block","src":"701:2:8","statements":[]},"id":1570,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[],"src":"681:2:8"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[],"src":"701:0:8"},"scope":2080,"src":"674:29:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2481],"body":{"id":1707,"nodeType":"Block","src":"945:1340:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1590,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"963:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"974:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"963:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f20616d6f756e74","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"977:13:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4","typeString":"literal_string \"Zero amount\""},"value":"Zero amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4","typeString":"literal_string \"Zero amount\""}],"id":1589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"955:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1595,"nodeType":"ExpressionStatement","src":"955:36:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1597,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"1009:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1598,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"1020:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1009:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420646561646c696e65","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1037:18:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77","typeString":"literal_string \"Invalid deadline\""},"value":"Invalid deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77","typeString":"literal_string \"Invalid deadline\""}],"id":1596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1001:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1001:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1603,"nodeType":"ExpressionStatement","src":"1001:55:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"1074:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1096:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1088:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1088:7:8","typeDescriptions":{}}},"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1088:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1074:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207365637265742068617368","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1100:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_29a9499b24c7c1c30de658e39e1b3b85bfcb2ce57b413521c2a3cb2388c5d10e","typeString":"literal_string \"Invalid secret hash\""},"value":"Invalid secret hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_29a9499b24c7c1c30de658e39e1b3b85bfcb2ce57b413521c2a3cb2388c5d10e","typeString":"literal_string \"Invalid secret hash\""}],"id":1604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1066:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1066:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1613,"nodeType":"ExpressionStatement","src":"1066:56:8"},{"assignments":[1615],"declarations":[{"constant":false,"id":1615,"mutability":"mutable","name":"orderId","nameLocation":"1141:7:8","nodeType":"VariableDeclaration","scope":1707,"src":"1133:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1133:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1629,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1619,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1208:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1212:6:8","memberName":"sender","nodeType":"MemberAccess","src":"1208:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1621,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1236:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1242:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"1236:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1623,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1269:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1624,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1295:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1625,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1320:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1626,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"1346:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1617,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1174:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1178:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"1174:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1174:196:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1616,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1151:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:229:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1133:247:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1631,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1399:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$2436_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder storage ref)"}},"id":1633,"indexExpression":{"id":1632,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"1406:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1399:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"id":1634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1415:9:8","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"1399:25:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1428:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"1428:7:8","typeDescriptions":{}}},"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1399:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657220657869737473","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1440:14:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1d924f126c3222497ebba66a9b4321d9b6a8b8b39b3938bb6a4a6dbe0bdc4e0","typeString":"literal_string \"Order exists\""},"value":"Order exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c1d924f126c3222497ebba66a9b4321d9b6a8b8b39b3938bb6a4a6dbe0bdc4e0","typeString":"literal_string \"Order exists\""}],"id":1630,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1391:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1391:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1642,"nodeType":"ExpressionStatement","src":"1391:64:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1643,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1470:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1489:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1481:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"1481:7:8","typeDescriptions":{}}},"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1481:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1470:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1671,"nodeType":"Block","src":"1578:94:8","statements":[{"expression":{"arguments":[{"expression":{"id":1662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1625:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1629:6:8","memberName":"sender","nodeType":"MemberAccess","src":"1625:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1666,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1645:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SwapManager_$2080","typeString":"contract SwapManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SwapManager_$2080","typeString":"contract SwapManager"}],"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1637:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1664,"name":"address","nodeType":"ElementaryTypeName","src":"1637:7:8","typeDescriptions":{}}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1637:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1668,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1652:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1659,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1599:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1658,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1592:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1592:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1608:16:8","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":850,"src":"1592:32:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1592:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1670,"nodeType":"ExpressionStatement","src":"1592:69:8"}]},"id":1672,"nodeType":"IfStatement","src":"1466:206:8","trueBody":{"id":1657,"nodeType":"Block","src":"1493:79:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1650,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1515:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1519:5:8","memberName":"value","nodeType":"MemberAccess","src":"1515:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1652,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1528:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1515:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f72726563742045544820616d6f756e74","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1538:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""},"value":"Incorrect ETH amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""}],"id":1649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1507:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1656,"nodeType":"ExpressionStatement","src":"1507:54:8"}]}},{"expression":{"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1673,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1682:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$2436_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder storage ref)"}},"id":1675,"indexExpression":{"id":1674,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"1689:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1682:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1677,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"1735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1769:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1679,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:8","typeDescriptions":{}}},"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1683,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1803:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1684,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"1839:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1685,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1874:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1686,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1905:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1687,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"1937:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1688,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"1971:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2008:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2039:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1676,"name":"SwapOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"1700:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SwapOrder_$2436_storage_ptr_$","typeString":"type(struct ISwapManager.SwapOrder storage pointer)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1724:9:8","1759:8:8","1793:8:8","1825:12:8","1865:7:8","1895:8:8","1927:8:8","1959:10:8","1995:11:8","2027:10:8"],"names":["initiator","resolver","amountIn","amountOutMin","tokenIn","tokenOut","deadline","secretHash","isFulfilled","isRefunded"],"nodeType":"FunctionCall","src":"1700:355:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_memory_ptr","typeString":"struct ISwapManager.SwapOrder memory"}},"src":"1682:373:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"id":1693,"nodeType":"ExpressionStatement","src":"1682:373:8"},{"eventCall":{"arguments":[{"id":1695,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"2097:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1696,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2118:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2122:6:8","memberName":"sender","nodeType":"MemberAccess","src":"2118:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1698,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2142:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1699,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2163:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1700,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"2185:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1701,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2207:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1702,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"2233:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1694,"name":"OrderCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"2071:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,address,address,uint256,uint256,bytes32)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:182:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1704,"nodeType":"EmitStatement","src":"2066:187:8"},{"expression":{"id":1705,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"2271:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1588,"id":1706,"nodeType":"Return","src":"2264:14:8"}]},"functionSelector":"7535f2df","id":1708,"implemented":true,"kind":"function","modifiers":[{"id":1585,"kind":"modifierInvocation","modifierName":{"id":1584,"name":"nonReentrant","nameLocations":["914:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"914:12:8"},"nodeType":"ModifierInvocation","src":"914:12:8"}],"name":"createOrder","nameLocation":"718:11:8","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"tokenIn","nameLocation":"747:7:8","nodeType":"VariableDeclaration","scope":1708,"src":"739:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"739:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"tokenOut","nameLocation":"772:8:8","nodeType":"VariableDeclaration","scope":1708,"src":"764:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"764:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"amountIn","nameLocation":"798:8:8","nodeType":"VariableDeclaration","scope":1708,"src":"790:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"amountOutMin","nameLocation":"824:12:8","nodeType":"VariableDeclaration","scope":1708,"src":"816:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"816:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"deadline","nameLocation":"854:8:8","nodeType":"VariableDeclaration","scope":1708,"src":"846:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"846:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"secretHash","nameLocation":"880:10:8","nodeType":"VariableDeclaration","scope":1708,"src":"872:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"872:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"729:167:8"},"returnParameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1708,"src":"936:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"936:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"935:9:8"},"scope":2080,"src":"709:1576:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2509],"body":{"id":1728,"nodeType":"Block","src":"2361:135:8","statements":[{"expression":{"arguments":[{"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2379:29:8","subExpression":{"baseExpression":{"id":1715,"name":"isWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2380:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1717,"indexExpression":{"id":1716,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"2395:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2380:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c657420616c72656164792072656769737465726564","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2410:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_08c77cb49204932981fc3b304c521ce64119bfd2a60ef913c832a1417c23d11f","typeString":"literal_string \"WorkerWallet already registered\""},"value":"WorkerWallet already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08c77cb49204932981fc3b304c521ce64119bfd2a60ef913c832a1417c23d11f","typeString":"literal_string \"WorkerWallet already registered\""}],"id":1714,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2371:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1721,"nodeType":"ExpressionStatement","src":"2371:73:8"},{"expression":{"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1722,"name":"isWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2454:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1724,"indexExpression":{"id":1723,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"2469:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2454:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2485:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2454:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1727,"nodeType":"ExpressionStatement","src":"2454:35:8"}]},"functionSelector":"6808d587","id":1729,"implemented":true,"kind":"function","modifiers":[],"name":"registerWorkerWallet","nameLocation":"2300:20:8","nodeType":"FunctionDefinition","overrides":{"id":1712,"nodeType":"OverrideSpecifier","overrides":[],"src":"2352:8:8"},"parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"workerWallet","nameLocation":"2329:12:8","nodeType":"VariableDeclaration","scope":1729,"src":"2321:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1709,"name":"address","nodeType":"ElementaryTypeName","src":"2321:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2320:22:8"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[],"src":"2361:0:8"},"scope":2080,"src":"2291:205:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2490],"body":{"id":1966,"nodeType":"Block","src":"2636:2018:8","statements":[{"assignments":[1742],"declarations":[{"constant":false,"id":1742,"mutability":"mutable","name":"order","nameLocation":"2664:5:8","nodeType":"VariableDeclaration","scope":1966,"src":"2646:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder"},"typeName":{"id":1741,"nodeType":"UserDefinedTypeName","pathNode":{"id":1740,"name":"SwapOrder","nameLocations":["2646:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2436,"src":"2646:9:8"},"referencedDeclaration":2436,"src":"2646:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder"}},"visibility":"internal"}],"id":1746,"initialValue":{"baseExpression":{"id":1743,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"2672:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$2436_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder storage ref)"}},"id":1745,"indexExpression":{"id":1744,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2679:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2672:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2646:41:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1748,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2705:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2711:9:8","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"2705:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2732:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2724:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"2724:7:8","typeDescriptions":{}}},"id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2705:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f72646572206e6f7420666f756e64","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2736:17:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc","typeString":"literal_string \"Order not found\""},"value":"Order not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc","typeString":"literal_string \"Order not found\""}],"id":1747,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2697:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2697:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1757,"nodeType":"ExpressionStatement","src":"2697:57:8"},{"expression":{"arguments":[{"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2772:18:8","subExpression":{"expression":{"id":1759,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2773:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2779:11:8","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"2773:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657220616c72656164792066756c66696c6c6564","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2792:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970","typeString":"literal_string \"Order already fulfilled\""},"value":"Order already fulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970","typeString":"literal_string \"Order already fulfilled\""}],"id":1758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2764:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2764:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1764,"nodeType":"ExpressionStatement","src":"2764:54:8"},{"expression":{"arguments":[{"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2836:17:8","subExpression":{"expression":{"id":1766,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2837:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2843:10:8","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":2435,"src":"2837:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465722077617320726566756e646564","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2855:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_890a6771b112b68c8156f7e98f853dfb4045cf1cc9f5289e3c6a09bc0e92fbd6","typeString":"literal_string \"Order was refunded\""},"value":"Order was refunded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_890a6771b112b68c8156f7e98f853dfb4045cf1cc9f5289e3c6a09bc0e92fbd6","typeString":"literal_string \"Order was refunded\""}],"id":1765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2828:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2828:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1771,"nodeType":"ExpressionStatement","src":"2828:48:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1773,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2894:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2900:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"2894:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1775,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2913:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2919:8:8","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":2429,"src":"2913:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2894:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465722065787069726564","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2929:15:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2f4bfb2dcf7e06902cf8f2c0c97f84cc4c3e789bd0a5ba2698f8afbe21430ae","typeString":"literal_string \"Order expired\""},"value":"Order expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2f4bfb2dcf7e06902cf8f2c0c97f84cc4c3e789bd0a5ba2698f8afbe21430ae","typeString":"literal_string \"Order expired\""}],"id":1772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2886:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2886:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1780,"nodeType":"ExpressionStatement","src":"2886:59:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1785,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"2990:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1783,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2973:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2977:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"2973:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2973:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1782,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2963:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2963:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1788,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"3002:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3008:10:8","memberName":"secretHash","nodeType":"MemberAccess","referencedDeclaration":2431,"src":"3002:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2963:55:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736563726574","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3020:16:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_22a9a99eda58e74c6eba1e99e395e307fd14f51f225afd0fed99c1a0493e28e5","typeString":"literal_string \"Invalid secret\""},"value":"Invalid secret"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22a9a99eda58e74c6eba1e99e395e307fd14f51f225afd0fed99c1a0493e28e5","typeString":"literal_string \"Invalid secret\""}],"id":1781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2955:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2955:82:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1793,"nodeType":"ExpressionStatement","src":"2955:82:8"},{"expression":{"arguments":[{"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3055:20:8","subExpression":{"baseExpression":{"id":1795,"name":"usedSecrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"3056:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1797,"indexExpression":{"id":1796,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3068:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3056:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656372657420616c72656164792075736564","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3077:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaa3ec15dceb626e10a70b0d9e8ba2711073f6106230fded9f2d7cf060f5b71d","typeString":"literal_string \"Secret already used\""},"value":"Secret already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eaa3ec15dceb626e10a70b0d9e8ba2711073f6106230fded9f2d7cf060f5b71d","typeString":"literal_string \"Secret already used\""}],"id":1794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3047:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1801,"nodeType":"ExpressionStatement","src":"3047:52:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"3117:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1804,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"3130:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3136:12:8","memberName":"amountOutMin","nodeType":"MemberAccess","referencedDeclaration":2423,"src":"3130:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3117:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206f757470757420616d6f756e74","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3150:28:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90","typeString":"literal_string \"Insufficient output amount\""},"value":"Insufficient output amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90","typeString":"literal_string \"Insufficient output amount\""}],"id":1802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3109:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3109:70:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1809,"nodeType":"ExpressionStatement","src":"3109:70:8"},{"condition":{"baseExpression":{"id":1810,"name":"isWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3279:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1813,"indexExpression":{"expression":{"id":1811,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3294:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3298:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3294:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3279:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1833,"nodeType":"IfStatement","src":"3275:194:8","trueBody":{"id":1832,"nodeType":"Block","src":"3307:162:8","statements":[{"assignments":[1816],"declarations":[{"constant":false,"id":1816,"mutability":"mutable","name":"workerWallet","nameLocation":"3335:12:8","nodeType":"VariableDeclaration","scope":1832,"src":"3321:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWorkerWallet_$2563","typeString":"contract IWorkerWallet"},"typeName":{"id":1815,"nodeType":"UserDefinedTypeName","pathNode":{"id":1814,"name":"IWorkerWallet","nameLocations":["3321:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":2563,"src":"3321:13:8"},"referencedDeclaration":2563,"src":"3321:13:8","typeDescriptions":{"typeIdentifier":"t_contract$_IWorkerWallet_$2563","typeString":"contract IWorkerWallet"}},"visibility":"internal"}],"id":1821,"initialValue":{"arguments":[{"expression":{"id":1818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3364:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3364:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1817,"name":"IWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"3350:13:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWorkerWallet_$2563_$","typeString":"type(contract IWorkerWallet)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3350:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWorkerWallet_$2563","typeString":"contract IWorkerWallet"}},"nodeType":"VariableDeclarationStatement","src":"3321:54:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1823,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"3397:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IWorkerWallet_$2563","typeString":"contract IWorkerWallet"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3410:5:8","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2557,"src":"3397:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1826,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"3421:2:8","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3424:6:8","memberName":"origin","nodeType":"MemberAccess","src":"3421:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3397:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420776f726b65722077616c6c6574206f776e6572","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3432:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9235c93776d67cf588408e5134192cf89ff8ca3094db508a3dc1361854cb73d4","typeString":"literal_string \"Not worker wallet owner\""},"value":"Not worker wallet owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9235c93776d67cf588408e5134192cf89ff8ca3094db508a3dc1361854cb73d4","typeString":"literal_string \"Not worker wallet owner\""}],"id":1822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3389:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3389:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1831,"nodeType":"ExpressionStatement","src":"3389:69:8"}]}},{"expression":{"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1834,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"3479:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3485:11:8","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"3479:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3499:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3479:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1839,"nodeType":"ExpressionStatement","src":"3479:24:8"},{"expression":{"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1840,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"3513:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3519:8:8","memberName":"resolver","nodeType":"MemberAccess","referencedDeclaration":2419,"src":"3513:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1843,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3530:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3534:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3530:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3513:27:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1846,"nodeType":"ExpressionStatement","src":"3513:27:8"},{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1847,"name":"usedSecrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"3550:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1849,"indexExpression":{"id":1848,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3562:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3550:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3572:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3550:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1852,"nodeType":"ExpressionStatement","src":"3550:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1853,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"3630:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3636:7:8","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"3630:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3655:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3647:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1855,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:8","typeDescriptions":{}}},"id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3647:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3630:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1900,"nodeType":"Block","src":"3962:87:8","statements":[{"expression":{"arguments":[{"expression":{"id":1894,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4011:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4015:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4011:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1896,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4023:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4029:8:8","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":2421,"src":"4023:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1890,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"3983:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3989:7:8","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"3983:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1889,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"3976:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3976:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3998:12:8","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":823,"src":"3976:34:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3976:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1899,"nodeType":"ExpressionStatement","src":"3976:62:8"}]},"id":1901,"nodeType":"IfStatement","src":"3626:423:8","trueBody":{"id":1888,"nodeType":"Block","src":"3659:297:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1863,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3757:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SwapManager_$2080","typeString":"contract SwapManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SwapManager_$2080","typeString":"contract SwapManager"}],"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3749:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"3749:7:8","typeDescriptions":{}}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3749:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3763:7:8","memberName":"balance","nodeType":"MemberAccess","src":"3749:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1866,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"3774:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3780:8:8","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":2421,"src":"3774:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3749:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204554482062616c616e6365","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3790:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e","typeString":"literal_string \"Insufficient ETH balance\""},"value":"Insufficient ETH balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e","typeString":"literal_string \"Insufficient ETH balance\""}],"id":1860,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3741:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3741:76:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1871,"nodeType":"ExpressionStatement","src":"3741:76:8"},{"assignments":[1873,null],"declarations":[{"constant":false,"id":1873,"mutability":"mutable","name":"success","nameLocation":"3837:7:8","nodeType":"VariableDeclaration","scope":1888,"src":"3832:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1872,"name":"bool","nodeType":"ElementaryTypeName","src":"3832:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1882,"initialValue":{"arguments":[{"hexValue":"","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3889:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1874,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3850:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3854:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3850:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3861:4:8","memberName":"call","nodeType":"MemberAccess","src":"3850:15:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1877,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"3873:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3879:8:8","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":2421,"src":"3873:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3850:38:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3850:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3831:61:8"},{"expression":{"arguments":[{"id":1884,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"3914:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3923:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":1883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3906:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3906:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1887,"nodeType":"ExpressionStatement","src":"3906:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1902,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4124:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4130:8:8","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"4124:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4150:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1904,"name":"address","nodeType":"ElementaryTypeName","src":"4142:7:8","typeDescriptions":{}}},"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4124:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1957,"nodeType":"Block","src":"4423:166:8","statements":[{"expression":{"arguments":[{"expression":{"id":1950,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4494:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4498:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4494:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1952,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4522:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4528:9:8","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"4522:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1954,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"4555:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1946,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4444:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4450:8:8","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"4444:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1945,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4437:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4437:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4460:16:8","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":850,"src":"4437:39:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4437:141:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"ExpressionStatement","src":"4437:141:8"}]},"id":1958,"nodeType":"IfStatement","src":"4120:469:8","trueBody":{"id":1944,"nodeType":"Block","src":"4154:263:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1910,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4176:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4180:5:8","memberName":"value","nodeType":"MemberAccess","src":"4176:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1912,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"4189:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4176:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204554482073656e74","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4200:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","typeString":"literal_string \"Insufficient ETH sent\""},"value":"Insufficient ETH sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","typeString":"literal_string \"Insufficient ETH sent\""}],"id":1909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4168:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4168:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1916,"nodeType":"ExpressionStatement","src":"4168:56:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1917,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4242:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4246:5:8","memberName":"value","nodeType":"MemberAccess","src":"4242:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1919,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"4254:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4242:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1934,"nodeType":"IfStatement","src":"4238:111:8","trueBody":{"id":1933,"nodeType":"Block","src":"4265:84:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1927,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4312:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4316:5:8","memberName":"value","nodeType":"MemberAccess","src":"4312:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1929,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"4324:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4312:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1923,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4291:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4295:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4291:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4283:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"4283:8:8","stateMutability":"payable","typeDescriptions":{}}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4303:8:8","memberName":"transfer","nodeType":"MemberAccess","src":"4283:28:8","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1932,"nodeType":"ExpressionStatement","src":"4283:51:8"}]}},{"expression":{"arguments":[{"id":1941,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"4396:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1937,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4370:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4376:9:8","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"4370:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4362:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"4362:8:8","stateMutability":"payable","typeDescriptions":{}}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4362:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4387:8:8","memberName":"transfer","nodeType":"MemberAccess","src":"4362:33:8","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4362:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1943,"nodeType":"ExpressionStatement","src":"4362:44:8"}]}},{"eventCall":{"arguments":[{"id":1960,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"4619:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1961,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4628:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4632:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4628:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1963,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"4640:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1959,"name":"OrderFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"4604:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,bytes32)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4604:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"EmitStatement","src":"4599:48:8"}]},"functionSelector":"f6dccf2e","id":1967,"implemented":true,"kind":"function","modifiers":[{"id":1738,"kind":"modifierInvocation","modifierName":{"id":1737,"name":"nonReentrant","nameLocations":["2623:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"2623:12:8"},"nodeType":"ModifierInvocation","src":"2623:12:8"}],"name":"fulfillOrder","nameLocation":"2511:12:8","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"orderId","nameLocation":"2541:7:8","nodeType":"VariableDeclaration","scope":1967,"src":"2533:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2533:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1733,"mutability":"mutable","name":"amountOut","nameLocation":"2566:9:8","nodeType":"VariableDeclaration","scope":1967,"src":"2558:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"secret","nameLocation":"2593:6:8","nodeType":"VariableDeclaration","scope":1967,"src":"2585:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2585:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2523:82:8"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[],"src":"2636:0:8"},"scope":2080,"src":"2502:2152:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2495],"body":{"id":2065,"nodeType":"Block","src":"4720:678:8","statements":[{"assignments":[1976],"declarations":[{"constant":false,"id":1976,"mutability":"mutable","name":"order","nameLocation":"4748:5:8","nodeType":"VariableDeclaration","scope":2065,"src":"4730:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder"},"typeName":{"id":1975,"nodeType":"UserDefinedTypeName","pathNode":{"id":1974,"name":"SwapOrder","nameLocations":["4730:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2436,"src":"4730:9:8"},"referencedDeclaration":2436,"src":"4730:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder"}},"visibility":"internal"}],"id":1980,"initialValue":{"baseExpression":{"id":1977,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"4756:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$2436_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder storage ref)"}},"id":1979,"indexExpression":{"id":1978,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"4763:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4756:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4730:41:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1982,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"4789:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4795:9:8","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"4789:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4816:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:8","typeDescriptions":{}}},"id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4789:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f72646572206e6f7420666f756e64","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4820:17:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc","typeString":"literal_string \"Order not found\""},"value":"Order not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc","typeString":"literal_string \"Order not found\""}],"id":1981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4781:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4781:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1991,"nodeType":"ExpressionStatement","src":"4781:57:8"},{"expression":{"arguments":[{"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4856:18:8","subExpression":{"expression":{"id":1993,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"4857:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":1994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4863:11:8","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"4857:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657220616c72656164792066756c66696c6c6564","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4876:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970","typeString":"literal_string \"Order already fulfilled\""},"value":"Order already fulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970","typeString":"literal_string \"Order already fulfilled\""}],"id":1992,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4848:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4848:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"ExpressionStatement","src":"4848:54:8"},{"expression":{"arguments":[{"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4920:17:8","subExpression":{"expression":{"id":2000,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"4921:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":2001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4927:10:8","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":2435,"src":"4921:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920726566756e646564","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4939:18:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f","typeString":"literal_string \"Already refunded\""},"value":"Already refunded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f","typeString":"literal_string \"Already refunded\""}],"id":1999,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4912:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4912:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2005,"nodeType":"ExpressionStatement","src":"4912:46:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2007,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4976:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4982:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"4976:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2009,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"4994:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":2010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5000:8:8","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":2429,"src":"4994:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4976:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e65206e6f742072656163686564","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5010:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""},"value":"Deadline not reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""}],"id":2006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4968:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4968:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2014,"nodeType":"ExpressionStatement","src":"4968:65:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5051:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5055:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5051:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2018,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5065:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":2019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5071:9:8","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"5065:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5051:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f7264657220696e69746961746f72","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5082:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_101deeb84a7b30c3ba1b40b0f7f4c505ac09a1a50e6d9ef928905ad230187381","typeString":"literal_string \"Not order initiator\""},"value":"Not order initiator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_101deeb84a7b30c3ba1b40b0f7f4c505ac09a1a50e6d9ef928905ad230187381","typeString":"literal_string \"Not order initiator\""}],"id":2015,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5043:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5043:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"ExpressionStatement","src":"5043:61:8"},{"expression":{"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2024,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5115:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":2026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5121:10:8","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":2435,"src":"5115:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5134:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5115:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2029,"nodeType":"ExpressionStatement","src":"5115:23:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2030,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5153:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":2031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5159:7:8","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"5153:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5170:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"5170:7:8","typeDescriptions":{}}},"id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5170:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5153:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2059,"nodeType":"Block","src":"5262:92:8","statements":[{"expression":{"arguments":[{"expression":{"id":2053,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5311:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":2054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5317:9:8","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"5311:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2055,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5328:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":2056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5334:8:8","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":2421,"src":"5328:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2049,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5283:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":2050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5289:7:8","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"5283:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2048,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"5276:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5298:12:8","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":823,"src":"5276:34:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2058,"nodeType":"ExpressionStatement","src":"5276:67:8"}]},"id":2060,"nodeType":"IfStatement","src":"5149:205:8","trueBody":{"id":2047,"nodeType":"Block","src":"5182:74:8","statements":[{"expression":{"arguments":[{"expression":{"id":2043,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5230:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":2044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5236:8:8","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":2421,"src":"5230:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2039,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5204:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder storage pointer"}},"id":2040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5210:9:8","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"5204:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5196:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2037,"name":"address","nodeType":"ElementaryTypeName","src":"5196:8:8","stateMutability":"payable","typeDescriptions":{}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5196:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5221:8:8","memberName":"transfer","nodeType":"MemberAccess","src":"5196:33:8","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5196:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2046,"nodeType":"ExpressionStatement","src":"5196:49:8"}]}},{"eventCall":{"arguments":[{"id":2062,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"5383:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2061,"name":"OrderRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"5369:13:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5369:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2064,"nodeType":"EmitStatement","src":"5364:27:8"}]},"functionSelector":"116a1d9a","id":2066,"implemented":true,"kind":"function","modifiers":[{"id":1972,"kind":"modifierInvocation","modifierName":{"id":1971,"name":"nonReentrant","nameLocations":["4707:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"4707:12:8"},"nodeType":"ModifierInvocation","src":"4707:12:8"}],"name":"refundOrder","nameLocation":"4669:11:8","nodeType":"FunctionDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"orderId","nameLocation":"4689:7:8","nodeType":"VariableDeclaration","scope":2066,"src":"4681:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4681:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4680:17:8"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"4720:0:8"},"scope":2080,"src":"4660:738:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2503],"body":{"id":2078,"nodeType":"Block","src":"5480:39:8","statements":[{"expression":{"baseExpression":{"id":2074,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"5497:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SwapOrder_$2436_storage_$","typeString":"mapping(bytes32 => struct ISwapManager.SwapOrder storage ref)"}},"id":2076,"indexExpression":{"id":2075,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"5504:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5497:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage","typeString":"struct ISwapManager.SwapOrder storage ref"}},"functionReturnParameters":2073,"id":2077,"nodeType":"Return","src":"5490:22:8"}]},"functionSelector":"5778472a","id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"getOrder","nameLocation":"5413:8:8","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"orderId","nameLocation":"5430:7:8","nodeType":"VariableDeclaration","scope":2079,"src":"5422:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5422:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5421:17:8"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2079,"src":"5462:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_memory_ptr","typeString":"struct ISwapManager.SwapOrder"},"typeName":{"id":2071,"nodeType":"UserDefinedTypeName","pathNode":{"id":2070,"name":"SwapOrder","nameLocations":["5462:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2436,"src":"5462:9:8"},"referencedDeclaration":2436,"src":"5462:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder"}},"visibility":"internal"}],"src":"5461:18:8"},"scope":2080,"src":"5404:115:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2081,"src":"326:5195:8","usedErrors":[],"usedEvents":[2452,2460,2464]}],"src":"32:5490:8"},"id":8},"contracts/WorkerWallet.sol":{"ast":{"absolutePath":"contracts/WorkerWallet.sol","exportedSymbols":{"Address":[1496],"IERC20":[729],"IERC20Permit":[790],"ISwapManager":[2510],"IWorkerWallet":[2563],"SafeERC20":[1166],"WorkerWallet":[2260]},"id":2261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2082,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2083,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2261,"sourceUnit":730,"src":"58:56:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2084,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2261,"sourceUnit":1167,"src":"115:65:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IWorkerWallet.sol","file":"./interfaces/IWorkerWallet.sol","id":2085,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2261,"sourceUnit":2564,"src":"181:40:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISwapManager.sol","file":"./interfaces/ISwapManager.sol","id":2086,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2261,"sourceUnit":2511,"src":"222:39:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2087,"name":"IWorkerWallet","nameLocations":["288:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":2563,"src":"288:13:9"},"id":2088,"nodeType":"InheritanceSpecifier","src":"288:13:9"}],"canonicalName":"WorkerWallet","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2260,"linearizedBaseContracts":[2260,2563],"name":"WorkerWallet","nameLocation":"272:12:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2092,"libraryName":{"id":2089,"name":"SafeERC20","nameLocations":["314:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"314:9:9"},"nodeType":"UsingForDirective","src":"308:27:9","typeName":{"id":2091,"nodeType":"UserDefinedTypeName","pathNode":{"id":2090,"name":"IERC20","nameLocations":["328:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"328:6:9"},"referencedDeclaration":729,"src":"328:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}},{"baseFunctions":[2557],"constant":false,"functionSelector":"8da5cb5b","id":2095,"mutability":"mutable","name":"owner","nameLocation":"365:5:9","nodeType":"VariableDeclaration","overrides":{"id":2094,"nodeType":"OverrideSpecifier","overrides":[],"src":"356:8:9"},"scope":2260,"src":"341:29:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"341:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[2562],"constant":false,"functionSelector":"709d039d","id":2098,"mutability":"mutable","name":"swapManager","nameLocation":"400:11:9","nodeType":"VariableDeclaration","overrides":{"id":2097,"nodeType":"OverrideSpecifier","overrides":[],"src":"391:8:9"},"scope":2260,"src":"376:35:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"376:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2100,"mutability":"mutable","name":"initialized","nameLocation":"430:11:9","nodeType":"VariableDeclaration","scope":2260,"src":"417:24:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2099,"name":"bool","nodeType":"ElementaryTypeName","src":"417:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":2111,"nodeType":"Block","src":"469:97:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"487:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"491:6:9","memberName":"sender","nodeType":"MemberAccess","src":"487:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2105,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"501:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"487:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a2063616c6c6572206973206e6f7420746865206f776e6572","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"508:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_506443333bcaabf6bbdd18bc57ac25e5a604386cc920f2333665e0320024f142","typeString":"literal_string \"WorkerWallet: caller is not the owner\""},"value":"WorkerWallet: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_506443333bcaabf6bbdd18bc57ac25e5a604386cc920f2333665e0320024f142","typeString":"literal_string \"WorkerWallet: caller is not the owner\""}],"id":2102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"479:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"479:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2109,"nodeType":"ExpressionStatement","src":"479:69:9"},{"id":2110,"nodeType":"PlaceholderStatement","src":"558:1:9"}]},"id":2112,"name":"onlyOwner","nameLocation":"457:9:9","nodeType":"ModifierDefinition","parameters":{"id":2101,"nodeType":"ParameterList","parameters":[],"src":"466:2:9"},"src":"448:118:9","virtual":false,"visibility":"internal"},{"body":{"id":2123,"nodeType":"Block","src":"599:110:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"617:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"621:6:9","memberName":"sender","nodeType":"MemberAccess","src":"617:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2117,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"631:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"617:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a2063616c6c6572206973206e6f74207468652073776170206d616e61676572","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"644:46:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_567c7e766e1bebc5df072187512e864a0ecb532ec137042df7eb54afc40a7e6d","typeString":"literal_string \"WorkerWallet: caller is not the swap manager\""},"value":"WorkerWallet: caller is not the swap manager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_567c7e766e1bebc5df072187512e864a0ecb532ec137042df7eb54afc40a7e6d","typeString":"literal_string \"WorkerWallet: caller is not the swap manager\""}],"id":2114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"609:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"609:82:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2121,"nodeType":"ExpressionStatement","src":"609:82:9"},{"id":2122,"nodeType":"PlaceholderStatement","src":"701:1:9"}]},"id":2124,"name":"onlySwapManager","nameLocation":"581:15:9","nodeType":"ModifierDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"596:2:9"},"src":"572:137:9","virtual":false,"visibility":"internal"},{"body":{"id":2159,"nodeType":"Block","src":"765:245:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2132,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"783:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"801:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"793:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2133,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:9","typeDescriptions":{}}},"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"793:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"783:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a206f776e6572206973207a65726f2061646472657373","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"805:37:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_388b26b8752cb9bc2935bdbdaaff189c636297a6151c254979ebb6679c000647","typeString":"literal_string \"WorkerWallet: owner is zero address\""},"value":"WorkerWallet: owner is zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_388b26b8752cb9bc2935bdbdaaff189c636297a6151c254979ebb6679c000647","typeString":"literal_string \"WorkerWallet: owner is zero address\""}],"id":2131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"775:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"775:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2140,"nodeType":"ExpressionStatement","src":"775:68:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2142,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"861:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"885:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"877:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:9","typeDescriptions":{}}},"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"861:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a2073776170206d616e61676572206973207a65726f2061646472657373","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"889:44:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ccdfc9ccc81f068aea89db7f9732f839acfc5c72bb0c0b89415226633ad9254","typeString":"literal_string \"WorkerWallet: swap manager is zero address\""},"value":"WorkerWallet: swap manager is zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ccdfc9ccc81f068aea89db7f9732f839acfc5c72bb0c0b89415226633ad9254","typeString":"literal_string \"WorkerWallet: swap manager is zero address\""}],"id":2141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"853:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"853:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2150,"nodeType":"ExpressionStatement","src":"853:81:9"},{"expression":{"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2151,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"953:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2152,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"961:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"953:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2154,"nodeType":"ExpressionStatement","src":"953:14:9"},{"expression":{"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2155,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"977:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2156,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"991:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"977:26:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2158,"nodeType":"ExpressionStatement","src":"977:26:9"}]},"id":2160,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"_owner","nameLocation":"735:6:9","nodeType":"VariableDeclaration","scope":2160,"src":"727:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2125,"name":"address","nodeType":"ElementaryTypeName","src":"727:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"_swapManager","nameLocation":"751:12:9","nodeType":"VariableDeclaration","scope":2160,"src":"743:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2127,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"726:38:9"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[],"src":"765:0:9"},"scope":2260,"src":"715:295:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2163,"nodeType":"Block","src":"1043:2:9","statements":[]},"id":2164,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[],"src":"1023:2:9"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"1043:0:9"},"scope":2260,"src":"1016:29:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2543],"body":{"id":2198,"nodeType":"Block","src":"1222:121:9","statements":[{"expression":{"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2180,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"1242:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":2182,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1232:17:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2187,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"1278:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":2183,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"1252:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1259:4:9","memberName":"call","nodeType":"MemberAccess","src":"1252:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"1271:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1252:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1252:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"1232:51:9","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2190,"nodeType":"ExpressionStatement","src":"1232:51:9"},{"eventCall":{"arguments":[{"id":2192,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"1307:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"1315:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2194,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"1322:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2195,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"1328:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2191,"name":"Executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"1298:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,uint256,bytes memory,bool)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1298:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2197,"nodeType":"EmitStatement","src":"1293:43:9"}]},"functionSelector":"b61d27f6","id":2199,"implemented":true,"kind":"function","modifiers":[{"id":2174,"kind":"modifierInvocation","modifierName":{"id":2173,"name":"onlyOwner","nameLocations":["1168:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":2112,"src":"1168:9:9"},"nodeType":"ModifierInvocation","src":"1168:9:9"}],"name":"execute","nameLocation":"1060:7:9","nodeType":"FunctionDefinition","overrides":{"id":2172,"nodeType":"OverrideSpecifier","overrides":[],"src":"1159:8:9"},"parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"target","nameLocation":"1085:6:9","nodeType":"VariableDeclaration","scope":2199,"src":"1077:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2165,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"value","nameLocation":"1109:5:9","nodeType":"VariableDeclaration","scope":2199,"src":"1101:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"data","nameLocation":"1139:4:9","nodeType":"VariableDeclaration","scope":2199,"src":"1124:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2169,"name":"bytes","nodeType":"ElementaryTypeName","src":"1124:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1067:82:9"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"success","nameLocation":"1192:7:9","nodeType":"VariableDeclaration","scope":2199,"src":"1187:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2175,"name":"bool","nodeType":"ElementaryTypeName","src":"1187:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"result","nameLocation":"1214:6:9","nodeType":"VariableDeclaration","scope":2199,"src":"1201:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2177,"name":"bytes","nodeType":"ElementaryTypeName","src":"1201:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1186:35:9"},"scope":2260,"src":"1051:292:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2552],"body":{"id":2258,"nodeType":"Block","src":"1438:392:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"1456:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1470:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2213,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:9","typeDescriptions":{}}},"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1456:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f207a65726f2061646472657373","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1474:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_32dd410984bef2bdfdef125880368ec1269daa3858f98485cbe6ef6fe38878fb","typeString":"literal_string \"WorkerWallet: cannot withdraw to zero address\""},"value":"WorkerWallet: cannot withdraw to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32dd410984bef2bdfdef125880368ec1269daa3858f98485cbe6ef6fe38878fb","typeString":"literal_string \"WorkerWallet: cannot withdraw to zero address\""}],"id":2211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1448:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1448:74:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2220,"nodeType":"ExpressionStatement","src":"1448:74:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"1545:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1562:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1554:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2222,"name":"address","nodeType":"ElementaryTypeName","src":"1554:7:9","typeDescriptions":{}}},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1545:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2250,"nodeType":"Block","src":"1709:63:9","statements":[{"expression":{"arguments":[{"id":2246,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"1750:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2247,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"1754:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2243,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"1730:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2242,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1723:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1723:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1737:12:9","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":823,"src":"1723:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1723:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2249,"nodeType":"ExpressionStatement","src":"1723:38:9"}]},"id":2251,"nodeType":"IfStatement","src":"1541:231:9","trueBody":{"id":2241,"nodeType":"Block","src":"1566:137:9","statements":[{"assignments":[2228,null],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"success","nameLocation":"1586:7:9","nodeType":"VariableDeclaration","scope":2241,"src":"1581:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2227,"name":"bool","nodeType":"ElementaryTypeName","src":"1581:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2235,"initialValue":{"arguments":[{"hexValue":"","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2229,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"1599:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1602:4:9","memberName":"call","nodeType":"MemberAccess","src":"1599:7:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2231,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"1614:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1599:22:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1599:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1580:45:9"},{"expression":{"arguments":[{"id":2237,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"1647:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c65743a20455448207472616e73666572206661696c6564","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1656:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ad542fc758949f2eac41186c24b6c7c9118aa12ce89931fcbcd70c2a1bcf2ed","typeString":"literal_string \"WorkerWallet: ETH transfer failed\""},"value":"WorkerWallet: ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ad542fc758949f2eac41186c24b6c7c9118aa12ce89931fcbcd70c2a1bcf2ed","typeString":"literal_string \"WorkerWallet: ETH transfer failed\""}],"id":2236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1639:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2240,"nodeType":"ExpressionStatement","src":"1639:53:9"}]}},{"eventCall":{"arguments":[{"id":2253,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"1805:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2254,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"1812:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2255,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"1820:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2252,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"1795:9:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1795:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2257,"nodeType":"EmitStatement","src":"1790:33:9"}]},"functionSelector":"69328dec","id":2259,"implemented":true,"kind":"function","modifiers":[{"id":2209,"kind":"modifierInvocation","modifierName":{"id":2208,"name":"onlyOwner","nameLocations":["1428:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":2112,"src":"1428:9:9"},"nodeType":"ModifierInvocation","src":"1428:9:9"}],"name":"withdraw","nameLocation":"1358:8:9","nodeType":"FunctionDefinition","overrides":{"id":2207,"nodeType":"OverrideSpecifier","overrides":[],"src":"1419:8:9"},"parameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"token","nameLocation":"1375:5:9","nodeType":"VariableDeclaration","scope":2259,"src":"1367:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"1367:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"amount","nameLocation":"1390:6:9","nodeType":"VariableDeclaration","scope":2259,"src":"1382:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"to","nameLocation":"1406:2:9","nodeType":"VariableDeclaration","scope":2259,"src":"1398:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2204,"name":"address","nodeType":"ElementaryTypeName","src":"1398:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1366:43:9"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[],"src":"1438:0:9"},"scope":2260,"src":"1349:481:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2261,"src":"263:1569:9","usedErrors":[],"usedEvents":[2522,2530]}],"src":"32:1801:9"},"id":9},"contracts/WorkerWalletFactory.sol":{"ast":{"absolutePath":"contracts/WorkerWalletFactory.sol","exportedSymbols":{"Address":[1496],"IERC20":[729],"IERC20Permit":[790],"ISwapManager":[2510],"IWorkerWallet":[2563],"SafeERC20":[1166],"WorkerWallet":[2260],"WorkerWalletFactory":[2413]},"id":2414,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2262,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:10"},{"absolutePath":"contracts/WorkerWallet.sol","file":"./WorkerWallet.sol","id":2263,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2414,"sourceUnit":2261,"src":"58:28:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISwapManager.sol","file":"./interfaces/ISwapManager.sol","id":2264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2414,"sourceUnit":2511,"src":"87:39:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"WorkerWalletFactory","contractDependencies":[2260],"contractKind":"contract","fullyImplemented":true,"id":2413,"linearizedBaseContracts":[2413],"name":"WorkerWalletFactory","nameLocation":"137:19:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2c91a2feb7f5c7e0c5681eb540d51f84de98235a2e0b6104fd4356684bd96f72","id":2270,"name":"WorkerWalletCreated","nameLocation":"169:19:10","nodeType":"EventDefinition","parameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"205:5:10","nodeType":"VariableDeclaration","scope":2270,"src":"189:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"189:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2268,"indexed":false,"mutability":"mutable","name":"wallet","nameLocation":"220:6:10","nodeType":"VariableDeclaration","scope":2270,"src":"212:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"212:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"188:39:10"},"src":"163:65:10"},{"constant":false,"functionSelector":"aa2dead7","id":2274,"mutability":"mutable","name":"getWorkerWallet","nameLocation":"273:15:10","nodeType":"VariableDeclaration","scope":2413,"src":"238:50:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":2273,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"246:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"238:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2272,"name":"address","nodeType":"ElementaryTypeName","src":"257:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"1f6d2eac","id":2278,"mutability":"mutable","name":"isWorkerWallet","nameLocation":"326:14:10","nodeType":"VariableDeclaration","scope":2413,"src":"294:46:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2277,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2275,"name":"address","nodeType":"ElementaryTypeName","src":"302:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"294:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2276,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":2359,"nodeType":"Block","src":"457:1159:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2288,"name":"getWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"475:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2290,"indexExpression":{"id":2289,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"491:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"475:23:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"510:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"502:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"502:7:10","typeDescriptions":{}}},"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"502:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"475:37:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f726b657257616c6c6574466163746f72793a2077616c6c657420616c726561647920657869737473","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"514:44:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_47df72e5deea8fdd3f5a86012c19a19aa8df1f9e3c75af6b7d82410051da9c1e","typeString":"literal_string \"WorkerWalletFactory: wallet already exists\""},"value":"WorkerWalletFactory: wallet already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47df72e5deea8fdd3f5a86012c19a19aa8df1f9e3c75af6b7d82410051da9c1e","typeString":"literal_string \"WorkerWalletFactory: wallet already exists\""}],"id":2287,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"467:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"467:92:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2298,"nodeType":"ExpressionStatement","src":"467:92:10"},{"assignments":[2300],"declarations":[{"constant":false,"id":2300,"mutability":"mutable","name":"bytecode","nameLocation":"640:8:10","nodeType":"VariableDeclaration","scope":2359,"src":"627:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2299,"name":"bytes","nodeType":"ElementaryTypeName","src":"627:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2305,"initialValue":{"expression":{"arguments":[{"id":2302,"name":"WorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"656:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkerWallet_$2260_$","typeString":"type(contract WorkerWallet)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_WorkerWallet_$2260_$","typeString":"type(contract WorkerWallet)"}],"id":2301,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"651:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"651:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_WorkerWallet_$2260","typeString":"type(contract WorkerWallet)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"670:12:10","memberName":"creationCode","nodeType":"MemberAccess","src":"651:31:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"627:55:10"},{"assignments":[2307],"declarations":[{"constant":false,"id":2307,"mutability":"mutable","name":"constructorArgs","nameLocation":"754:15:10","nodeType":"VariableDeclaration","scope":2359,"src":"741:28:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2306,"name":"bytes","nodeType":"ElementaryTypeName","src":"741:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2313,"initialValue":{"arguments":[{"id":2310,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"783:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2311,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"791:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2308,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"772:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"776:6:10","memberName":"encode","nodeType":"MemberAccess","src":"772:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"772:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"741:63:10"},{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"initCode","nameLocation":"895:8:10","nodeType":"VariableDeclaration","scope":2359,"src":"882:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2314,"name":"bytes","nodeType":"ElementaryTypeName","src":"882:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2321,"initialValue":{"arguments":[{"id":2318,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"923:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2319,"name":"constructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"933:15:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2316,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"906:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"910:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"906:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"906:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"882:67:10"},{"assignments":[2323],"declarations":[{"constant":false,"id":2323,"mutability":"mutable","name":"salt","nameLocation":"976:4:10","nodeType":"VariableDeclaration","scope":2359,"src":"968:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"968:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2333,"initialValue":{"arguments":[{"arguments":[{"id":2327,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"1010:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2328,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"1018:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2329,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1032:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1038:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"1032:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2325,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"993:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"997:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"993:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"993:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2324,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"983:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"983:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"968:81:10"},{"AST":{"nodeType":"YulBlock","src":"1077:188:10","statements":[{"nodeType":"YulAssignment","src":"1091:70:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1115:1:10","type":"","value":"0"},{"arguments":[{"name":"initCode","nodeType":"YulIdentifier","src":"1122:8:10"},{"kind":"number","nodeType":"YulLiteral","src":"1132:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1118:3:10"},"nodeType":"YulFunctionCall","src":"1118:19:10"},{"arguments":[{"name":"initCode","nodeType":"YulIdentifier","src":"1145:8:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1139:5:10"},"nodeType":"YulFunctionCall","src":"1139:15:10"},{"name":"salt","nodeType":"YulIdentifier","src":"1156:4:10"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1107:7:10"},"nodeType":"YulFunctionCall","src":"1107:54:10"},"variableNames":[{"name":"workerWallet","nodeType":"YulIdentifier","src":"1091:12:10"}]},{"body":{"nodeType":"YulBlock","src":"1211:44:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1236:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1239:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1229:6:10"},"nodeType":"YulFunctionCall","src":"1229:12:10"},"nodeType":"YulExpressionStatement","src":"1229:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"workerWallet","nodeType":"YulIdentifier","src":"1196:12:10"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1184:11:10"},"nodeType":"YulFunctionCall","src":"1184:25:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1177:6:10"},"nodeType":"YulFunctionCall","src":"1177:33:10"},"nodeType":"YulIf","src":"1174:81:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"1122:8:10","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"1145:8:10","valueSize":1},{"declaration":2323,"isOffset":false,"isSlot":false,"src":"1156:4:10","valueSize":1},{"declaration":2285,"isOffset":false,"isSlot":false,"src":"1091:12:10","valueSize":1},{"declaration":2285,"isOffset":false,"isSlot":false,"src":"1196:12:10","valueSize":1}],"id":2334,"nodeType":"InlineAssembly","src":"1068:197:10"},{"expression":{"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2335,"name":"getWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"1321:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2337,"indexExpression":{"id":2336,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"1337:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1321:23:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2338,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"1347:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1321:38:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2340,"nodeType":"ExpressionStatement","src":"1321:38:10"},{"expression":{"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2341,"name":"isWorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"1369:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2343,"indexExpression":{"id":2342,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"1384:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1369:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1400:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1369:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2346,"nodeType":"ExpressionStatement","src":"1369:35:10"},{"expression":{"arguments":[{"id":2351,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"1531:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2348,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"1496:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2347,"name":"ISwapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"1483:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapManager_$2510_$","typeString":"type(contract ISwapManager)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1483:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$2510","typeString":"contract ISwapManager"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1510:20:10","memberName":"registerWorkerWallet","nodeType":"MemberAccess","referencedDeclaration":2509,"src":"1483:47:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1483:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2353,"nodeType":"ExpressionStatement","src":"1483:61:10"},{"eventCall":{"arguments":[{"id":2355,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"1588:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2356,"name":"workerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"1596:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2354,"name":"WorkerWalletCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"1568:19:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1568:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2358,"nodeType":"EmitStatement","src":"1563:46:10"}]},"functionSelector":"af295f35","id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"createWorkerWallet","nameLocation":"360:18:10","nodeType":"FunctionDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"_owner","nameLocation":"387:6:10","nodeType":"VariableDeclaration","scope":2360,"src":"379:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2279,"name":"address","nodeType":"ElementaryTypeName","src":"379:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"_swapManager","nameLocation":"403:12:10","nodeType":"VariableDeclaration","scope":2360,"src":"395:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2281,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"378:38:10"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"workerWallet","nameLocation":"443:12:10","nodeType":"VariableDeclaration","scope":2360,"src":"435:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"434:22:10"},"scope":2413,"src":"351:1265:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2411,"nodeType":"Block","src":"1730:348:10","statements":[{"assignments":[2370],"declarations":[{"constant":false,"id":2370,"mutability":"mutable","name":"hash","nameLocation":"1748:4:10","nodeType":"VariableDeclaration","scope":2411,"src":"1740:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1740:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2399,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30786666","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1819:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}],"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2374,"name":"bytes1","nodeType":"ElementaryTypeName","src":"1812:6:10","typeDescriptions":{}}},"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"arguments":[{"id":2380,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1850:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_WorkerWalletFactory_$2413","typeString":"contract WorkerWalletFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WorkerWalletFactory_$2413","typeString":"contract WorkerWalletFactory"}],"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1842:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2378,"name":"address","nodeType":"ElementaryTypeName","src":"1842:7:10","typeDescriptions":{}}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":2385,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"1900:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2386,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"1908:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2387,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1922:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"1922:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2383,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1883:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1887:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"1883:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1883:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2382,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1873:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"arguments":[{"id":2393,"name":"WorkerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"1972:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkerWallet_$2260_$","typeString":"type(contract WorkerWallet)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_WorkerWallet_$2260_$","typeString":"type(contract WorkerWallet)"}],"id":2392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1967:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1967:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_WorkerWallet_$2260","typeString":"type(contract WorkerWallet)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1986:12:10","memberName":"creationCode","nodeType":"MemberAccess","src":"1967:31:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2391,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1957:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2372,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1778:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1782:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"1778:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:235:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2371,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1755:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1755:268:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1740:283:10"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2406,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2064:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2056:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:10","typeDescriptions":{}}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2048:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2402,"name":"uint160","nodeType":"ElementaryTypeName","src":"2048:7:10","typeDescriptions":{}}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2040:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"2040:7:10","typeDescriptions":{}}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2368,"id":2410,"nodeType":"Return","src":"2033:38:10"}]},"functionSelector":"1ac38190","id":2412,"implemented":true,"kind":"function","modifiers":[],"name":"computeWorkerWalletAddress","nameLocation":"1635:26:10","nodeType":"FunctionDefinition","parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"_owner","nameLocation":"1670:6:10","nodeType":"VariableDeclaration","scope":2412,"src":"1662:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2361,"name":"address","nodeType":"ElementaryTypeName","src":"1662:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"_swapManager","nameLocation":"1686:12:10","nodeType":"VariableDeclaration","scope":2412,"src":"1678:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"1678:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1661:38:10"},"returnParameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2412,"src":"1721:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2366,"name":"address","nodeType":"ElementaryTypeName","src":"1721:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1720:9:10"},"scope":2413,"src":"1626:452:10","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2414,"src":"128:1952:10","usedErrors":[],"usedEvents":[2270]}],"src":"32:2049:10"},"id":10},"contracts/interfaces/ISwapManager.sol":{"ast":{"absolutePath":"contracts/interfaces/ISwapManager.sol","exportedSymbols":{"ISwapManager":[2510]},"id":2511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2415,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"ISwapManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2510,"linearizedBaseContracts":[2510],"name":"ISwapManager","nameLocation":"68:12:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapManager.SwapOrder","id":2436,"members":[{"constant":false,"id":2417,"mutability":"mutable","name":"initiator","nameLocation":"122:9:11","nodeType":"VariableDeclaration","scope":2436,"src":"114:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"114:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"resolver","nameLocation":"149:8:11","nodeType":"VariableDeclaration","scope":2436,"src":"141:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2418,"name":"address","nodeType":"ElementaryTypeName","src":"141:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"amountIn","nameLocation":"175:8:11","nodeType":"VariableDeclaration","scope":2436,"src":"167:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"167:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"amountOutMin","nameLocation":"201:12:11","nodeType":"VariableDeclaration","scope":2436,"src":"193:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"193:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"tokenIn","nameLocation":"231:7:11","nodeType":"VariableDeclaration","scope":2436,"src":"223:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2424,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"tokenOut","nameLocation":"256:8:11","nodeType":"VariableDeclaration","scope":2436,"src":"248:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2426,"name":"address","nodeType":"ElementaryTypeName","src":"248:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2429,"mutability":"mutable","name":"deadline","nameLocation":"282:8:11","nodeType":"VariableDeclaration","scope":2436,"src":"274:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"274:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2431,"mutability":"mutable","name":"secretHash","nameLocation":"308:10:11","nodeType":"VariableDeclaration","scope":2436,"src":"300:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"300:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"isFulfilled","nameLocation":"333:11:11","nodeType":"VariableDeclaration","scope":2436,"src":"328:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2432,"name":"bool","nodeType":"ElementaryTypeName","src":"328:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"isRefunded","nameLocation":"359:10:11","nodeType":"VariableDeclaration","scope":2436,"src":"354:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2434,"name":"bool","nodeType":"ElementaryTypeName","src":"354:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SwapOrder","nameLocation":"94:9:11","nodeType":"StructDefinition","scope":2510,"src":"87:289:11","visibility":"public"},{"anonymous":false,"eventSelector":"958da44420b864737ad53ea0aa959279a3e21574047c9737df230d1f350577a0","id":2452,"name":"OrderCreated","nameLocation":"388:12:11","nodeType":"EventDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"426:7:11","nodeType":"VariableDeclaration","scope":2452,"src":"410:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"410:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2440,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"459:9:11","nodeType":"VariableDeclaration","scope":2452,"src":"443:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2439,"name":"address","nodeType":"ElementaryTypeName","src":"443:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2442,"indexed":false,"mutability":"mutable","name":"tokenIn","nameLocation":"486:7:11","nodeType":"VariableDeclaration","scope":2452,"src":"478:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2441,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2444,"indexed":false,"mutability":"mutable","name":"tokenOut","nameLocation":"511:8:11","nodeType":"VariableDeclaration","scope":2452,"src":"503:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2446,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"537:8:11","nodeType":"VariableDeclaration","scope":2452,"src":"529:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2448,"indexed":false,"mutability":"mutable","name":"amountOutMin","nameLocation":"563:12:11","nodeType":"VariableDeclaration","scope":2452,"src":"555:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"555:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2450,"indexed":false,"mutability":"mutable","name":"secretHash","nameLocation":"593:10:11","nodeType":"VariableDeclaration","scope":2452,"src":"585:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"585:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"400:209:11"},"src":"382:228:11"},{"anonymous":false,"eventSelector":"c0dec645483244c37030b06224e60b121eadd7ee71a4ce18862c979d5584042b","id":2460,"name":"OrderFulfilled","nameLocation":"622:14:11","nodeType":"EventDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"662:7:11","nodeType":"VariableDeclaration","scope":2460,"src":"646:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"646:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2456,"indexed":true,"mutability":"mutable","name":"resolver","nameLocation":"695:8:11","nodeType":"VariableDeclaration","scope":2460,"src":"679:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2455,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2458,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"721:6:11","nodeType":"VariableDeclaration","scope":2460,"src":"713:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"713:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"636:97:11"},"src":"616:118:11"},{"anonymous":false,"eventSelector":"a60671d8537ed193e567f86ddf28cf35dc67073b5ad80a2d41359cfa78db0a1e","id":2464,"name":"OrderRefunded","nameLocation":"746:13:11","nodeType":"EventDefinition","parameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"776:7:11","nodeType":"VariableDeclaration","scope":2464,"src":"760:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"760:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"759:25:11"},"src":"740:45:11"},{"functionSelector":"7535f2df","id":2481,"implemented":false,"kind":"function","modifiers":[],"name":"createOrder","nameLocation":"800:11:11","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"tokenIn","nameLocation":"829:7:11","nodeType":"VariableDeclaration","scope":2481,"src":"821:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2465,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"tokenOut","nameLocation":"854:8:11","nodeType":"VariableDeclaration","scope":2481,"src":"846:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2467,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"amountIn","nameLocation":"880:8:11","nodeType":"VariableDeclaration","scope":2481,"src":"872:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"amountOutMin","nameLocation":"906:12:11","nodeType":"VariableDeclaration","scope":2481,"src":"898:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2474,"mutability":"mutable","name":"deadline","nameLocation":"936:8:11","nodeType":"VariableDeclaration","scope":2481,"src":"928:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"secretHash","nameLocation":"962:10:11","nodeType":"VariableDeclaration","scope":2481,"src":"954:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"954:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"811:167:11"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2481,"src":"1005:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1005:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1004:9:11"},"scope":2510,"src":"791:223:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"f6dccf2e","id":2490,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillOrder","nameLocation":"1029:12:11","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"orderId","nameLocation":"1059:7:11","nodeType":"VariableDeclaration","scope":2490,"src":"1051:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1051:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"amountOut","nameLocation":"1084:9:11","nodeType":"VariableDeclaration","scope":2490,"src":"1076:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"secret","nameLocation":"1111:6:11","nodeType":"VariableDeclaration","scope":2490,"src":"1103:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1103:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1041:82:11"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[],"src":"1140:0:11"},"scope":2510,"src":"1020:121:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"116a1d9a","id":2495,"implemented":false,"kind":"function","modifiers":[],"name":"refundOrder","nameLocation":"1156:11:11","nodeType":"FunctionDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"orderId","nameLocation":"1176:7:11","nodeType":"VariableDeclaration","scope":2495,"src":"1168:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1168:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1167:17:11"},"returnParameters":{"id":2494,"nodeType":"ParameterList","parameters":[],"src":"1193:0:11"},"scope":2510,"src":"1147:47:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5778472a","id":2503,"implemented":false,"kind":"function","modifiers":[],"name":"getOrder","nameLocation":"1209:8:11","nodeType":"FunctionDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"orderId","nameLocation":"1226:7:11","nodeType":"VariableDeclaration","scope":2503,"src":"1218:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1218:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1217:17:11"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2503,"src":"1258:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_memory_ptr","typeString":"struct ISwapManager.SwapOrder"},"typeName":{"id":2500,"nodeType":"UserDefinedTypeName","pathNode":{"id":2499,"name":"SwapOrder","nameLocations":["1258:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2436,"src":"1258:9:11"},"referencedDeclaration":2436,"src":"1258:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder"}},"visibility":"internal"}],"src":"1257:18:11"},"scope":2510,"src":"1200:76:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"1286:158:11","text":" @notice Register a worker wallet that can be used to fulfill orders\n @param workerWallet The address of the worker wallet to register"},"functionSelector":"6808d587","id":2509,"implemented":false,"kind":"function","modifiers":[],"name":"registerWorkerWallet","nameLocation":"1458:20:11","nodeType":"FunctionDefinition","parameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"workerWallet","nameLocation":"1487:12:11","nodeType":"VariableDeclaration","scope":2509,"src":"1479:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2505,"name":"address","nodeType":"ElementaryTypeName","src":"1479:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1478:22:11"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[],"src":"1509:0:11"},"scope":2510,"src":"1449:61:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2511,"src":"58:1454:11","usedErrors":[],"usedEvents":[2452,2460,2464]}],"src":"32:1481:11"},"id":11},"contracts/interfaces/IWorkerWallet.sol":{"ast":{"absolutePath":"contracts/interfaces/IWorkerWallet.sol","exportedSymbols":{"IWorkerWallet":[2563]},"id":2564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2512,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IWorkerWallet","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2563,"linearizedBaseContracts":[2563],"name":"IWorkerWallet","nameLocation":"68:13:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"4232d48319210b7bc959a61fd7785051da1497df2a1400e3340f42a8a6efd541","id":2522,"name":"Executed","nameLocation":"94:8:12","nodeType":"EventDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"119:6:12","nodeType":"VariableDeclaration","scope":2522,"src":"103:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2513,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2516,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"135:5:12","nodeType":"VariableDeclaration","scope":2522,"src":"127:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"127:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2518,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"148:4:12","nodeType":"VariableDeclaration","scope":2522,"src":"142:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2517,"name":"bytes","nodeType":"ElementaryTypeName","src":"142:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2520,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"159:7:12","nodeType":"VariableDeclaration","scope":2522,"src":"154:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2519,"name":"bool","nodeType":"ElementaryTypeName","src":"154:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"102:65:12"},"src":"88:80:12"},{"anonymous":false,"eventSelector":"cbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a","id":2530,"name":"Withdrawn","nameLocation":"179:9:12","nodeType":"EventDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"197:5:12","nodeType":"VariableDeclaration","scope":2530,"src":"189:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"189:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2526,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"212:6:12","nodeType":"VariableDeclaration","scope":2530,"src":"204:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"204:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2528,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"228:2:12","nodeType":"VariableDeclaration","scope":2530,"src":"220:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2527,"name":"address","nodeType":"ElementaryTypeName","src":"220:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"188:43:12"},"src":"173:59:12"},{"functionSelector":"b61d27f6","id":2543,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"251:7:12","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"target","nameLocation":"276:6:12","nodeType":"VariableDeclaration","scope":2543,"src":"268:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2531,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2534,"mutability":"mutable","name":"value","nameLocation":"300:5:12","nodeType":"VariableDeclaration","scope":2543,"src":"292:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2533,"name":"uint256","nodeType":"ElementaryTypeName","src":"292:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"data","nameLocation":"330:4:12","nodeType":"VariableDeclaration","scope":2543,"src":"315:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2535,"name":"bytes","nodeType":"ElementaryTypeName","src":"315:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"258:82:12"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"success","nameLocation":"364:7:12","nodeType":"VariableDeclaration","scope":2543,"src":"359:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2538,"name":"bool","nodeType":"ElementaryTypeName","src":"359:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2541,"mutability":"mutable","name":"result","nameLocation":"386:6:12","nodeType":"VariableDeclaration","scope":2543,"src":"373:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2540,"name":"bytes","nodeType":"ElementaryTypeName","src":"373:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"358:35:12"},"scope":2563,"src":"242:152:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"69328dec","id":2552,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"413:8:12","nodeType":"FunctionDefinition","parameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"token","nameLocation":"430:5:12","nodeType":"VariableDeclaration","scope":2552,"src":"422:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"422:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"amount","nameLocation":"445:6:12","nodeType":"VariableDeclaration","scope":2552,"src":"437:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"to","nameLocation":"461:2:12","nodeType":"VariableDeclaration","scope":2552,"src":"453:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2548,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"421:43:12"},"returnParameters":{"id":2551,"nodeType":"ParameterList","parameters":[],"src":"473:0:12"},"scope":2563,"src":"404:70:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8da5cb5b","id":2557,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"493:5:12","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[],"src":"498:2:12"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2557,"src":"524:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"523:9:12"},"scope":2563,"src":"484:49:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"709d039d","id":2562,"implemented":false,"kind":"function","modifiers":[],"name":"swapManager","nameLocation":"552:11:12","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[],"src":"563:2:12"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"589:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"589:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"588:9:12"},"scope":2563,"src":"543:55:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2564,"src":"58:542:12","usedErrors":[],"usedEvents":[2522,2530]}],"src":"32:569:12"},"id":12},"contracts/mock/ERC20Mock.sol":{"ast":{"absolutePath":"contracts/mock/ERC20Mock.sol","exportedSymbols":{"Context":[1526],"ERC20":[651],"ERC20Mock":[2630],"IERC20":[729],"IERC20Metadata":[754]},"id":2631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2565,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2631,"sourceUnit":652,"src":"58:55:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2567,"name":"ERC20","nameLocations":["137:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"137:5:13"},"id":2568,"nodeType":"InheritanceSpecifier","src":"137:5:13"}],"canonicalName":"ERC20Mock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2630,"linearizedBaseContracts":[2630,651,754,729,1526],"name":"ERC20Mock","nameLocation":"124:9:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2570,"mutability":"mutable","name":"_decimals","nameLocation":"163:9:13","nodeType":"VariableDeclaration","scope":2630,"src":"149:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2569,"name":"uint8","nodeType":"ElementaryTypeName","src":"149:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":2593,"nodeType":"Block","src":"306:73:13","statements":[{"expression":{"arguments":[{"expression":{"id":2584,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"322:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"326:6:13","memberName":"sender","nodeType":"MemberAccess","src":"322:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2586,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"334:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2583,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"316:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"316:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2588,"nodeType":"ExpressionStatement","src":"316:32:13"},{"expression":{"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2589,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"358:9:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3138","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"370:2:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"358:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2592,"nodeType":"ExpressionStatement","src":"358:14:13"}]},"id":2594,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2579,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"292:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2580,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"298:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2581,"kind":"baseConstructorSpecifier","modifierName":{"id":2578,"name":"ERC20","nameLocations":["286:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"286:5:13"},"nodeType":"ModifierInvocation","src":"286:19:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"name","nameLocation":"214:4:13","nodeType":"VariableDeclaration","scope":2594,"src":"200:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2571,"name":"string","nodeType":"ElementaryTypeName","src":"200:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"symbol","nameLocation":"242:6:13","nodeType":"VariableDeclaration","scope":2594,"src":"228:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2573,"name":"string","nodeType":"ElementaryTypeName","src":"228:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"initialSupply","nameLocation":"266:13:13","nodeType":"VariableDeclaration","scope":2594,"src":"258:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"258:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"190:95:13"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[],"src":"306:0:13"},"scope":2630,"src":"179:200:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2606,"nodeType":"Block","src":"434:34:13","statements":[{"expression":{"arguments":[{"id":2602,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"450:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2603,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"454:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2601,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"444:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"444:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2605,"nodeType":"ExpressionStatement","src":"444:17:13"}]},"functionSelector":"40c10f19","id":2607,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"394:4:13","nodeType":"FunctionDefinition","parameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"to","nameLocation":"407:2:13","nodeType":"VariableDeclaration","scope":2607,"src":"399:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2595,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2598,"mutability":"mutable","name":"amount","nameLocation":"419:6:13","nodeType":"VariableDeclaration","scope":2607,"src":"411:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"411:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"398:28:13"},"returnParameters":{"id":2600,"nodeType":"ParameterList","parameters":[],"src":"434:0:13"},"scope":2630,"src":"385:83:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2619,"nodeType":"Block","src":"525:36:13","statements":[{"expression":{"arguments":[{"id":2615,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"541:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2616,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"547:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2614,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"535:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"535:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2618,"nodeType":"ExpressionStatement","src":"535:19:13"}]},"functionSelector":"9dc29fac","id":2620,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"483:4:13","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"from","nameLocation":"496:4:13","nodeType":"VariableDeclaration","scope":2620,"src":"488:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2608,"name":"address","nodeType":"ElementaryTypeName","src":"488:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"amount","nameLocation":"510:6:13","nodeType":"VariableDeclaration","scope":2620,"src":"502:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"502:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"487:30:13"},"returnParameters":{"id":2613,"nodeType":"ParameterList","parameters":[],"src":"525:0:13"},"scope":2630,"src":"474:87:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[139],"body":{"id":2628,"nodeType":"Block","src":"624:33:13","statements":[{"expression":{"id":2626,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"641:9:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2625,"id":2627,"nodeType":"Return","src":"634:16:13"}]},"functionSelector":"313ce567","id":2629,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"576:8:13","nodeType":"FunctionDefinition","overrides":{"id":2622,"nodeType":"OverrideSpecifier","overrides":[],"src":"599:8:13"},"parameters":{"id":2621,"nodeType":"ParameterList","parameters":[],"src":"584:2:13"},"returnParameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"617:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2623,"name":"uint8","nodeType":"ElementaryTypeName","src":"617:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"616:7:13"},"scope":2630,"src":"567:90:13","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2631,"src":"115:544:13","usedErrors":[],"usedEvents":[663,672]}],"src":"32:628:13"},"id":13},"contracts/mock/MockRelayer.sol":{"ast":{"absolutePath":"contracts/mock/MockRelayer.sol","exportedSymbols":{"ISwapManager":[2510],"MockRelayer":[2784]},"id":2785,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:14"},{"absolutePath":"contracts/interfaces/ISwapManager.sol","file":"../interfaces/ISwapManager.sol","id":2633,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2785,"sourceUnit":2511,"src":"58:40:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MockRelayer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2784,"linearizedBaseContracts":[2784],"name":"MockRelayer","nameLocation":"109:11:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"709d039d","id":2636,"mutability":"mutable","name":"swapManager","nameLocation":"147:11:14","nodeType":"VariableDeclaration","scope":2784,"src":"127:31:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$2510","typeString":"contract ISwapManager"},"typeName":{"id":2635,"nodeType":"UserDefinedTypeName","pathNode":{"id":2634,"name":"ISwapManager","nameLocations":["127:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2510,"src":"127:12:14"},"referencedDeclaration":2510,"src":"127:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$2510","typeString":"contract ISwapManager"}},"visibility":"public"},{"anonymous":false,"eventSelector":"49f29b9cfb3bb0783c26f435fe9808e8b7fd6958ebb9363de51f5b697c712c74","id":2652,"name":"OrderReceived","nameLocation":"214:13:14","nodeType":"EventDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"253:7:14","nodeType":"VariableDeclaration","scope":2652,"src":"237:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"237:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2640,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"286:9:14","nodeType":"VariableDeclaration","scope":2652,"src":"270:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2639,"name":"address","nodeType":"ElementaryTypeName","src":"270:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2642,"indexed":false,"mutability":"mutable","name":"tokenIn","nameLocation":"313:7:14","nodeType":"VariableDeclaration","scope":2652,"src":"305:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"305:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2644,"indexed":false,"mutability":"mutable","name":"tokenOut","nameLocation":"338:8:14","nodeType":"VariableDeclaration","scope":2652,"src":"330:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2643,"name":"address","nodeType":"ElementaryTypeName","src":"330:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2646,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"364:8:14","nodeType":"VariableDeclaration","scope":2652,"src":"356:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"356:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2648,"indexed":false,"mutability":"mutable","name":"amountOutMin","nameLocation":"390:12:14","nodeType":"VariableDeclaration","scope":2652,"src":"382:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"382:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2650,"indexed":false,"mutability":"mutable","name":"secretHash","nameLocation":"420:10:14","nodeType":"VariableDeclaration","scope":2652,"src":"412:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"412:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"227:209:14"},"src":"208:229:14"},{"anonymous":false,"eventSelector":"dafd13066d5a7c6b0591d8c19f57c75c45b8fa038153891c78a582507cbd18c7","id":2662,"name":"OrderFulfilled","nameLocation":"453:14:14","nodeType":"EventDefinition","parameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"493:7:14","nodeType":"VariableDeclaration","scope":2662,"src":"477:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"477:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2656,"indexed":true,"mutability":"mutable","name":"resolver","nameLocation":"526:8:14","nodeType":"VariableDeclaration","scope":2662,"src":"510:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2655,"name":"address","nodeType":"ElementaryTypeName","src":"510:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2658,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"552:9:14","nodeType":"VariableDeclaration","scope":2662,"src":"544:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"544:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2660,"indexed":false,"mutability":"mutable","name":"secret","nameLocation":"579:6:14","nodeType":"VariableDeclaration","scope":2662,"src":"571:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"467:124:14"},"src":"447:145:14"},{"body":{"id":2673,"nodeType":"Block","src":"632:57:14","statements":[{"expression":{"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2667,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"642:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$2510","typeString":"contract ISwapManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2669,"name":"_swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"669:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2668,"name":"ISwapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"656:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapManager_$2510_$","typeString":"type(contract ISwapManager)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"656:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$2510","typeString":"contract ISwapManager"}},"src":"642:40:14","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$2510","typeString":"contract ISwapManager"}},"id":2672,"nodeType":"ExpressionStatement","src":"642:40:14"}]},"id":2674,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"_swapManager","nameLocation":"618:12:14","nodeType":"VariableDeclaration","scope":2674,"src":"610:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2663,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"609:22:14"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[],"src":"632:0:14"},"scope":2784,"src":"598:91:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2726,"nodeType":"Block","src":"966:512:14","statements":[{"assignments":[2692],"declarations":[{"constant":false,"id":2692,"mutability":"mutable","name":"orderId","nameLocation":"984:7:14","nodeType":"VariableDeclaration","scope":2726,"src":"976:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"976:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2712,"initialValue":{"arguments":[{"id":2705,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"1098:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2706,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"1119:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2707,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"1141:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2708,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"1163:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2709,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"1189:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2710,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"1211:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2693,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"994:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$2510","typeString":"contract ISwapManager"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1006:11:14","memberName":"createOrder","nodeType":"MemberAccess","referencedDeclaration":2481,"src":"994:23:14","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (address,address,uint256,uint256,uint256,bytes32) payable external returns (bytes32)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"1038:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1057:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1049:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2696,"name":"address","nodeType":"ElementaryTypeName","src":"1049:7:14","typeDescriptions":{}}},"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1049:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1038:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1073:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1038:36:14","trueExpression":{"id":2701,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"1062:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"994:90:14","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$value","typeString":"function (address,address,uint256,uint256,uint256,bytes32) payable external returns (bytes32)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"994:237:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"976:255:14"},{"eventCall":{"arguments":[{"id":2714,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"1282:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2715,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1303:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1307:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1303:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2717,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"1327:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2718,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"1348:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2719,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"1370:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2720,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"1392:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2721,"name":"secretHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"1418:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2713,"name":"OrderReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"1255:13:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,address,address,uint256,uint256,bytes32)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1255:183:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2723,"nodeType":"EmitStatement","src":"1250:188:14"},{"expression":{"id":2724,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"1464:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2690,"id":2725,"nodeType":"Return","src":"1457:14:14"}]},"functionSelector":"eb9bd099","id":2727,"implemented":true,"kind":"function","modifiers":[],"name":"receiveOrder","nameLocation":"751:12:14","nodeType":"FunctionDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"tokenIn","nameLocation":"781:7:14","nodeType":"VariableDeclaration","scope":2727,"src":"773:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"773:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"tokenOut","nameLocation":"806:8:14","nodeType":"VariableDeclaration","scope":2727,"src":"798:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2677,"name":"address","nodeType":"ElementaryTypeName","src":"798:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"amountIn","nameLocation":"832:8:14","nodeType":"VariableDeclaration","scope":2727,"src":"824:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"amountOutMin","nameLocation":"858:12:14","nodeType":"VariableDeclaration","scope":2727,"src":"850:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"850:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"deadline","nameLocation":"888:8:14","nodeType":"VariableDeclaration","scope":2727,"src":"880:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"880:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"secretHash","nameLocation":"914:10:14","nodeType":"VariableDeclaration","scope":2727,"src":"906:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"906:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"763:167:14"},"returnParameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2727,"src":"957:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"957:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"956:9:14"},"scope":2784,"src":"742:736:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2768,"nodeType":"Block","src":"1656:465:14","statements":[{"assignments":[2737,null],"declarations":[{"constant":false,"id":2737,"mutability":"mutable","name":"success","nameLocation":"1745:7:14","nodeType":"VariableDeclaration","scope":2768,"src":"1740:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2736,"name":"bool","nodeType":"ElementaryTypeName","src":"1740:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2754,"initialValue":{"arguments":[{"arguments":[{"hexValue":"66756c66696c6c4f7264657228627974657333322c75696e743235362c6279746573333229","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1856:39:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6dccf2e9f6e6b4181d57b03d59acb9e0c276d87b7e5507747856687fa301502","typeString":"literal_string \"fulfillOrder(bytes32,uint256,bytes32)\""},"value":"fulfillOrder(bytes32,uint256,bytes32)"},{"id":2749,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1913:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2750,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"1938:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2751,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1965:6:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f6dccf2e9f6e6b4181d57b03d59acb9e0c276d87b7e5507747856687fa301502","typeString":"literal_string \"fulfillOrder(bytes32,uint256,bytes32)\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2746,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1815:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1819:19:14","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"1815:23:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1815:170:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2740,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"1766:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$2510","typeString":"contract ISwapManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapManager_$2510","typeString":"contract ISwapManager"}],"id":2739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1758:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2738,"name":"address","nodeType":"ElementaryTypeName","src":"1758:7:14","typeDescriptions":{}}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1758:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:4:14","memberName":"call","nodeType":"MemberAccess","src":"1758:25:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1791:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1795:5:14","memberName":"value","nodeType":"MemberAccess","src":"1791:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1758:43:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1758:237:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1739:256:14"},{"expression":{"arguments":[{"id":2756,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"2013:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756c66696c6c206f72646572206661696c6564","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2022:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_786164181b1dbf10e7134b576dc7774e946256bcc196a412825e802f7a01134d","typeString":"literal_string \"Fulfill order failed\""},"value":"Fulfill order failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_786164181b1dbf10e7134b576dc7774e946256bcc196a412825e802f7a01134d","typeString":"literal_string \"Fulfill order failed\""}],"id":2755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2005:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2759,"nodeType":"ExpressionStatement","src":"2005:40:14"},{"eventCall":{"arguments":[{"id":2761,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"2075:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2762,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2084:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2088:6:14","memberName":"sender","nodeType":"MemberAccess","src":"2084:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2764,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"2096:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2765,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"2107:6:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2760,"name":"OrderFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"2060:14:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,address,uint256,bytes32)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"EmitStatement","src":"2055:59:14"}]},"functionSelector":"f6dccf2e","id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillOrder","nameLocation":"1544:12:14","nodeType":"FunctionDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"orderId","nameLocation":"1574:7:14","nodeType":"VariableDeclaration","scope":2769,"src":"1566:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1566:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"amountOut","nameLocation":"1599:9:14","nodeType":"VariableDeclaration","scope":2769,"src":"1591:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1591:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2733,"mutability":"mutable","name":"secret","nameLocation":"1626:6:14","nodeType":"VariableDeclaration","scope":2769,"src":"1618:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1618:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1556:82:14"},"returnParameters":{"id":2735,"nodeType":"ParameterList","parameters":[],"src":"1656:0:14"},"scope":2784,"src":"1535:586:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2782,"nodeType":"Block","src":"2245:53:14","statements":[{"expression":{"arguments":[{"id":2779,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"2283:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2777,"name":"swapManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"2262:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapManager_$2510","typeString":"contract ISwapManager"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2274:8:14","memberName":"getOrder","nodeType":"MemberAccess","referencedDeclaration":2503,"src":"2262:20:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_SwapOrder_$2436_memory_ptr_$","typeString":"function (bytes32) view external returns (struct ISwapManager.SwapOrder memory)"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2262:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_memory_ptr","typeString":"struct ISwapManager.SwapOrder memory"}},"functionReturnParameters":2776,"id":2781,"nodeType":"Return","src":"2255:36:14"}]},"functionSelector":"5778472a","id":2783,"implemented":true,"kind":"function","modifiers":[],"name":"getOrder","nameLocation":"2165:8:14","nodeType":"FunctionDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"orderId","nameLocation":"2182:7:14","nodeType":"VariableDeclaration","scope":2783,"src":"2174:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2174:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2173:17:14"},"returnParameters":{"id":2776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2783,"src":"2214:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_memory_ptr","typeString":"struct ISwapManager.SwapOrder"},"typeName":{"id":2774,"nodeType":"UserDefinedTypeName","pathNode":{"id":2773,"name":"ISwapManager.SwapOrder","nameLocations":["2214:12:14","2227:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2436,"src":"2214:22:14"},"referencedDeclaration":2436,"src":"2214:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_SwapOrder_$2436_storage_ptr","typeString":"struct ISwapManager.SwapOrder"}},"visibility":"internal"}],"src":"2213:31:14"},"scope":2784,"src":"2156:142:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2785,"src":"100:2200:14","usedErrors":[],"usedEvents":[2652,2662]}],"src":"32:2269:14"},"id":14},"contracts/mock/WETH9.sol":{"ast":{"absolutePath":"contracts/mock/WETH9.sol","exportedSymbols":{"WETH9":[3033]},"id":3034,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2786,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"WETH9","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3033,"linearizedBaseContracts":[3033],"name":"WETH9","nameLocation":"67:5:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":2789,"mutability":"mutable","name":"name","nameLocation":"93:4:15","nodeType":"VariableDeclaration","scope":3033,"src":"79:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2787,"name":"string","nodeType":"ElementaryTypeName","src":"79:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"57726170706564204574686572","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"100:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_00cd3d46df44f2cbb950cf84eb2e92aa2ddd23195b1a009173ea59a063357ed3","typeString":"literal_string \"Wrapped Ether\""},"value":"Wrapped Ether"},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":2792,"mutability":"mutable","name":"symbol","nameLocation":"135:6:15","nodeType":"VariableDeclaration","scope":3033,"src":"121:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2790,"name":"string","nodeType":"ElementaryTypeName","src":"121:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"57455448","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"144:6:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8","typeString":"literal_string \"WETH\""},"value":"WETH"},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":2795,"mutability":"mutable","name":"decimals","nameLocation":"169:8:15","nodeType":"VariableDeclaration","scope":3033,"src":"156:26:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2793,"name":"uint8","nodeType":"ElementaryTypeName","src":"156:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"180:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2803,"name":"Approval","nameLocation":"195:8:15","nodeType":"EventDefinition","parameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"indexed":true,"mutability":"mutable","name":"src","nameLocation":"220:3:15","nodeType":"VariableDeclaration","scope":2803,"src":"204:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2796,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2799,"indexed":true,"mutability":"mutable","name":"guy","nameLocation":"241:3:15","nodeType":"VariableDeclaration","scope":2803,"src":"225:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"225:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2801,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"254:3:15","nodeType":"VariableDeclaration","scope":2803,"src":"246:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:55:15"},"src":"189:70:15"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2811,"name":"Transfer","nameLocation":"270:8:15","nodeType":"EventDefinition","parameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"indexed":true,"mutability":"mutable","name":"src","nameLocation":"295:3:15","nodeType":"VariableDeclaration","scope":2811,"src":"279:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2804,"name":"address","nodeType":"ElementaryTypeName","src":"279:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2807,"indexed":true,"mutability":"mutable","name":"dst","nameLocation":"316:3:15","nodeType":"VariableDeclaration","scope":2811,"src":"300:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2806,"name":"address","nodeType":"ElementaryTypeName","src":"300:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2809,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"329:3:15","nodeType":"VariableDeclaration","scope":2811,"src":"321:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"278:55:15"},"src":"264:70:15"},{"anonymous":false,"eventSelector":"e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c","id":2817,"name":"Deposit","nameLocation":"345:7:15","nodeType":"EventDefinition","parameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"indexed":true,"mutability":"mutable","name":"dst","nameLocation":"369:3:15","nodeType":"VariableDeclaration","scope":2817,"src":"353:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"353:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2815,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"382:3:15","nodeType":"VariableDeclaration","scope":2817,"src":"374:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"374:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"352:34:15"},"src":"339:48:15"},{"anonymous":false,"eventSelector":"7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65","id":2823,"name":"Withdrawal","nameLocation":"398:10:15","nodeType":"EventDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"indexed":true,"mutability":"mutable","name":"src","nameLocation":"425:3:15","nodeType":"VariableDeclaration","scope":2823,"src":"409:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2821,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"438:3:15","nodeType":"VariableDeclaration","scope":2823,"src":"430:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:34:15"},"src":"392:51:15"},{"constant":false,"functionSelector":"70a08231","id":2827,"mutability":"mutable","name":"balanceOf","nameLocation":"484:9:15","nodeType":"VariableDeclaration","scope":3033,"src":"449:44:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2826,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2824,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"449:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":2833,"mutability":"mutable","name":"allowance","nameLocation":"554:9:15","nodeType":"VariableDeclaration","scope":3033,"src":"499:64:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2832,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2828,"name":"address","nodeType":"ElementaryTypeName","src":"507:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"499:47:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2831,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"518:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"537:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"body":{"id":2839,"nodeType":"Block","src":"597:26:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2836,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"607:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"607:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2838,"nodeType":"ExpressionStatement","src":"607:9:15"}]},"id":2840,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[],"src":"577:2:15"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[],"src":"597:0:15"},"scope":3033,"src":"570:53:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2858,"nodeType":"Block","src":"663:96:15","statements":[{"expression":{"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2843,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"673:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2846,"indexExpression":{"expression":{"id":2844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"683:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"687:6:15","memberName":"sender","nodeType":"MemberAccess","src":"683:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"673:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2847,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"698:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"702:5:15","memberName":"value","nodeType":"MemberAccess","src":"698:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"673:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2850,"nodeType":"ExpressionStatement","src":"673:34:15"},{"eventCall":{"arguments":[{"expression":{"id":2852,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"730:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"734:6:15","memberName":"sender","nodeType":"MemberAccess","src":"730:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"742:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"746:5:15","memberName":"value","nodeType":"MemberAccess","src":"742:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2851,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"722:7:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"722:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2857,"nodeType":"EmitStatement","src":"717:35:15"}]},"functionSelector":"d0e30db0","id":2859,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"638:7:15","nodeType":"FunctionDefinition","parameters":{"id":2841,"nodeType":"ParameterList","parameters":[],"src":"645:2:15"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[],"src":"663:0:15"},"scope":3033,"src":"629:130:15","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2895,"nodeType":"Block","src":"803:177:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2865,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"821:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2868,"indexExpression":{"expression":{"id":2866,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"831:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"835:6:15","memberName":"sender","nodeType":"MemberAccess","src":"831:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"821:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2869,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"846:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"821:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2864,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"813:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"813:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2872,"nodeType":"ExpressionStatement","src":"813:37:15"},{"expression":{"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2873,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"860:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2876,"indexExpression":{"expression":{"id":2874,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"870:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"874:6:15","memberName":"sender","nodeType":"MemberAccess","src":"870:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"860:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2877,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"885:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"860:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2879,"nodeType":"ExpressionStatement","src":"860:28:15"},{"expression":{"arguments":[{"id":2886,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"927:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2882,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"906:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"910:6:15","memberName":"sender","nodeType":"MemberAccess","src":"906:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"898:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2880,"name":"address","nodeType":"ElementaryTypeName","src":"898:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"898:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"918:8:15","memberName":"transfer","nodeType":"MemberAccess","src":"898:28:15","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"898:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2888,"nodeType":"ExpressionStatement","src":"898:33:15"},{"eventCall":{"arguments":[{"expression":{"id":2890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"957:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"961:6:15","memberName":"sender","nodeType":"MemberAccess","src":"957:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2892,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"969:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2889,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"946:10:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"946:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2894,"nodeType":"EmitStatement","src":"941:32:15"}]},"functionSelector":"2e1a7d4d","id":2896,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"774:8:15","nodeType":"FunctionDefinition","parameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"wad","nameLocation":"791:3:15","nodeType":"VariableDeclaration","scope":2896,"src":"783:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"783:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"782:13:15"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[],"src":"803:0:15"},"scope":3033,"src":"765:215:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2907,"nodeType":"Block","src":"1039:45:15","statements":[{"expression":{"expression":{"arguments":[{"id":2903,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1064:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9_$3033","typeString":"contract WETH9"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH9_$3033","typeString":"contract WETH9"}],"id":2902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1056:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2901,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:15","typeDescriptions":{}}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1056:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1070:7:15","memberName":"balance","nodeType":"MemberAccess","src":"1056:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2900,"id":2906,"nodeType":"Return","src":"1049:28:15"}]},"functionSelector":"18160ddd","id":2908,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"995:11:15","nodeType":"FunctionDefinition","parameters":{"id":2897,"nodeType":"ParameterList","parameters":[],"src":"1006:2:15"},"returnParameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"1030:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1030:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1029:9:15"},"scope":3033,"src":"986:98:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2935,"nodeType":"Block","src":"1155:115:15","statements":[{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2917,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"1165:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2921,"indexExpression":{"expression":{"id":2918,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1175:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1179:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1175:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1165:21:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2922,"indexExpression":{"id":2920,"name":"guy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"1187:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1165:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2923,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"1194:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1165:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2925,"nodeType":"ExpressionStatement","src":"1165:32:15"},{"eventCall":{"arguments":[{"expression":{"id":2927,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1221:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1225:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1221:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2929,"name":"guy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"1233:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2930,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"1238:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2926,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"1212:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1212:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2932,"nodeType":"EmitStatement","src":"1207:35:15"},{"expression":{"hexValue":"74727565","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1259:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2916,"id":2934,"nodeType":"Return","src":"1252:11:15"}]},"functionSelector":"095ea7b3","id":2936,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1099:7:15","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"guy","nameLocation":"1115:3:15","nodeType":"VariableDeclaration","scope":2936,"src":"1107:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2909,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"wad","nameLocation":"1128:3:15","nodeType":"VariableDeclaration","scope":2936,"src":"1120:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1106:26:15"},"returnParameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2936,"src":"1149:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2914,"name":"bool","nodeType":"ElementaryTypeName","src":"1149:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1148:6:15"},"scope":3033,"src":"1090:180:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2952,"nodeType":"Block","src":"1342:58:15","statements":[{"expression":{"arguments":[{"expression":{"id":2946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1372:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1376:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1372:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2948,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"1384:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2949,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"1389:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2945,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"1359:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1359:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2944,"id":2951,"nodeType":"Return","src":"1352:41:15"}]},"functionSelector":"a9059cbb","id":2953,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1285:8:15","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"dst","nameLocation":"1302:3:15","nodeType":"VariableDeclaration","scope":2953,"src":"1294:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2937,"name":"address","nodeType":"ElementaryTypeName","src":"1294:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"wad","nameLocation":"1315:3:15","nodeType":"VariableDeclaration","scope":2953,"src":"1307:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1293:26:15"},"returnParameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2953,"src":"1336:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2942,"name":"bool","nodeType":"ElementaryTypeName","src":"1336:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1335:6:15"},"scope":3033,"src":"1276:124:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3031,"nodeType":"Block","src":"1519:369:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2965,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"1537:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2967,"indexExpression":{"id":2966,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"1547:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1537:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2968,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"1555:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1537:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2964,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1529:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1529:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2971,"nodeType":"ExpressionStatement","src":"1529:30:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2972,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"1574:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2973,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1581:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1585:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1581:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1574:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2976,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"1595:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2978,"indexExpression":{"id":2977,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"1605:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1595:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2981,"indexExpression":{"expression":{"id":2979,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1610:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1614:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1610:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1595:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1630:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2982,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1625:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1625:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1639:3:15","memberName":"max","nodeType":"MemberAccess","src":"1625:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1595:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1574:68:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3010,"nodeType":"IfStatement","src":"1570:188:15","trueBody":{"id":3009,"nodeType":"Block","src":"1644:114:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2990,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"1666:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2992,"indexExpression":{"id":2991,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"1676:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1666:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2995,"indexExpression":{"expression":{"id":2993,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1681:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1685:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1681:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1666:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2996,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"1696:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1666:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1658:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2999,"nodeType":"ExpressionStatement","src":"1658:42:15"},{"expression":{"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3000,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"1714:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3004,"indexExpression":{"id":3001,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"1724:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1714:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3005,"indexExpression":{"expression":{"id":3002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1729:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1729:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1714:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3006,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"1744:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1714:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3008,"nodeType":"ExpressionStatement","src":"1714:33:15"}]}},{"expression":{"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3011,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"1768:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3013,"indexExpression":{"id":3012,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"1778:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1768:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3014,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"1786:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1768:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3016,"nodeType":"ExpressionStatement","src":"1768:21:15"},{"expression":{"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3017,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"1799:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3019,"indexExpression":{"id":3018,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"1809:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1799:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3020,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"1817:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1799:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3022,"nodeType":"ExpressionStatement","src":"1799:21:15"},{"eventCall":{"arguments":[{"id":3024,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"1845:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3025,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"1850:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3026,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"1855:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3023,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"1836:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1836:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3028,"nodeType":"EmitStatement","src":"1831:28:15"},{"expression":{"hexValue":"74727565","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1877:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2963,"id":3030,"nodeType":"Return","src":"1870:11:15"}]},"functionSelector":"23b872dd","id":3032,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1415:12:15","nodeType":"FunctionDefinition","parameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"src","nameLocation":"1445:3:15","nodeType":"VariableDeclaration","scope":3032,"src":"1437:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2954,"name":"address","nodeType":"ElementaryTypeName","src":"1437:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2957,"mutability":"mutable","name":"dst","nameLocation":"1466:3:15","nodeType":"VariableDeclaration","scope":3032,"src":"1458:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2956,"name":"address","nodeType":"ElementaryTypeName","src":"1458:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2959,"mutability":"mutable","name":"wad","nameLocation":"1487:3:15","nodeType":"VariableDeclaration","scope":3032,"src":"1479:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1479:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1427:69:15"},"returnParameters":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3032,"src":"1513:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2961,"name":"bool","nodeType":"ElementaryTypeName","src":"1513:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1512:6:15"},"scope":3033,"src":"1406:482:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3034,"src":"58:1832:15","usedErrors":[],"usedEvents":[2803,2811,2817,2823]}],"src":"32:1859:15"},"id":15}},"contracts":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_109":{"entryPoint":null,"id":109,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:16"},"nodeType":"YulFunctionCall","src":"66:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:16"},"nodeType":"YulFunctionCall","src":"56:31:16"},"nodeType":"YulExpressionStatement","src":"56:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:16"},"nodeType":"YulFunctionCall","src":"96:15:16"},"nodeType":"YulExpressionStatement","src":"96:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:16"},"nodeType":"YulFunctionCall","src":"120:15:16"},"nodeType":"YulExpressionStatement","src":"120:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:16"},{"body":{"nodeType":"YulBlock","src":"210:776:16","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:16"},"nodeType":"YulFunctionCall","src":"261:12:16"},"nodeType":"YulExpressionStatement","src":"261:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:16"},"nodeType":"YulFunctionCall","src":"234:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:16"},"nodeType":"YulFunctionCall","src":"230:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:16"},"nodeType":"YulFunctionCall","src":"223:35:16"},"nodeType":"YulIf","src":"220:55:16"},{"nodeType":"YulVariableDeclaration","src":"284:23:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:16"},"nodeType":"YulFunctionCall","src":"294:13:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:16"},"nodeType":"YulFunctionCall","src":"330:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:16"},"nodeType":"YulFunctionCall","src":"326:18:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:16"},"nodeType":"YulFunctionCall","src":"369:18:16"},"nodeType":"YulExpressionStatement","src":"369:18:16"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:16"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:16"},"nodeType":"YulFunctionCall","src":"356:10:16"},"nodeType":"YulIf","src":"353:36:16"},{"nodeType":"YulVariableDeclaration","src":"398:17:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:16"},"nodeType":"YulFunctionCall","src":"408:7:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:16"},"nodeType":"YulFunctionCall","src":"438:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:16"},"nodeType":"YulFunctionCall","src":"498:13:16"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:16"},"nodeType":"YulFunctionCall","src":"494:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:16"},"nodeType":"YulFunctionCall","src":"490:31:16"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:16"},"nodeType":"YulFunctionCall","src":"486:40:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:16"},"nodeType":"YulFunctionCall","src":"474:53:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:16"},"nodeType":"YulFunctionCall","src":"588:18:16"},"nodeType":"YulExpressionStatement","src":"588:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:16"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:16"},"nodeType":"YulFunctionCall","src":"542:18:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:16"},"nodeType":"YulFunctionCall","src":"562:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:16"},"nodeType":"YulFunctionCall","src":"539:46:16"},"nodeType":"YulIf","src":"536:72:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:16"},"nodeType":"YulFunctionCall","src":"617:22:16"},"nodeType":"YulExpressionStatement","src":"617:22:16"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:16"},"nodeType":"YulFunctionCall","src":"648:18:16"},"nodeType":"YulExpressionStatement","src":"648:18:16"},{"nodeType":"YulVariableDeclaration","src":"675:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:16","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:16"},"nodeType":"YulFunctionCall","src":"737:12:16"},"nodeType":"YulExpressionStatement","src":"737:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:16"},"nodeType":"YulFunctionCall","src":"708:15:16"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:16"},"nodeType":"YulFunctionCall","src":"704:24:16"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:16"},"nodeType":"YulFunctionCall","src":"701:33:16"},"nodeType":"YulIf","src":"698:53:16"},{"nodeType":"YulVariableDeclaration","src":"760:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:16"},"nodeType":"YulFunctionCall","src":"850:14:16"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:16"},"nodeType":"YulFunctionCall","src":"846:23:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:16"},"nodeType":"YulFunctionCall","src":"881:14:16"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:16"},"nodeType":"YulFunctionCall","src":"877:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:16"},"nodeType":"YulFunctionCall","src":"871:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:16"},"nodeType":"YulFunctionCall","src":"839:63:16"},"nodeType":"YulExpressionStatement","src":"839:63:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:16"},"nodeType":"YulFunctionCall","src":"787:9:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:16","statements":[{"nodeType":"YulAssignment","src":"799:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:16"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:16"},"nodeType":"YulFunctionCall","src":"804:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:16","statements":[]},"src":"779:133:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:16"},"nodeType":"YulFunctionCall","src":"932:15:16"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:16"},"nodeType":"YulFunctionCall","src":"928:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:16"},"nodeType":"YulFunctionCall","src":"921:35:16"},"nodeType":"YulExpressionStatement","src":"921:35:16"},{"nodeType":"YulAssignment","src":"965:15:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:16"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:16","type":""}],"src":"146:840:16"},{"body":{"nodeType":"YulBlock","src":"1109:444:16","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:16"},"nodeType":"YulFunctionCall","src":"1157:12:16"},"nodeType":"YulExpressionStatement","src":"1157:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:16"},"nodeType":"YulFunctionCall","src":"1126:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:16"},"nodeType":"YulFunctionCall","src":"1122:32:16"},"nodeType":"YulIf","src":"1119:52:16"},{"nodeType":"YulVariableDeclaration","src":"1180:30:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:16"},"nodeType":"YulFunctionCall","src":"1194:16:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:16"},"nodeType":"YulFunctionCall","src":"1233:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:16"},"nodeType":"YulFunctionCall","src":"1229:18:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:16"},"nodeType":"YulFunctionCall","src":"1276:12:16"},"nodeType":"YulExpressionStatement","src":"1276:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:16"},"nodeType":"YulFunctionCall","src":"1259:14:16"},"nodeType":"YulIf","src":"1256:34:16"},{"nodeType":"YulAssignment","src":"1299:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:16"},"nodeType":"YulFunctionCall","src":"1338:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:16"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:16"},"nodeType":"YulFunctionCall","src":"1309:61:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:16"},"nodeType":"YulFunctionCall","src":"1401:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:16"},"nodeType":"YulFunctionCall","src":"1395:25:16"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:16"},"nodeType":"YulFunctionCall","src":"1451:12:16"},"nodeType":"YulExpressionStatement","src":"1451:12:16"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:16"},"nodeType":"YulFunctionCall","src":"1432:16:16"},"nodeType":"YulIf","src":"1429:36:16"},{"nodeType":"YulAssignment","src":"1474:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:16"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:16"},"nodeType":"YulFunctionCall","src":"1513:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:16"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:16"},"nodeType":"YulFunctionCall","src":"1484:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:16"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:16","type":""}],"src":"991:562:16"},{"body":{"nodeType":"YulBlock","src":"1613:325:16","statements":[{"nodeType":"YulAssignment","src":"1623:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:16"},"nodeType":"YulFunctionCall","src":"1633:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:16"},"nodeType":"YulFunctionCall","src":"1680:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:16","statements":[{"nodeType":"YulAssignment","src":"1733:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:16"},"nodeType":"YulFunctionCall","src":"1743:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:16"},"nodeType":"YulFunctionCall","src":"1704:26:16"},"nodeType":"YulIf","src":"1701:61:16"},{"body":{"nodeType":"YulBlock","src":"1821:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:16"},"nodeType":"YulFunctionCall","src":"1845:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:16"},"nodeType":"YulFunctionCall","src":"1835:31:16"},"nodeType":"YulExpressionStatement","src":"1835:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:16"},"nodeType":"YulFunctionCall","src":"1879:15:16"},"nodeType":"YulExpressionStatement","src":"1879:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:16"},"nodeType":"YulFunctionCall","src":"1907:15:16"},"nodeType":"YulExpressionStatement","src":"1907:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:16"},"nodeType":"YulFunctionCall","src":"1797:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:16"},"nodeType":"YulFunctionCall","src":"1774:38:16"},"nodeType":"YulIf","src":"1771:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:16","type":""}],"src":"1558:380:16"},{"body":{"nodeType":"YulBlock","src":"1999:65:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:16"},"nodeType":"YulFunctionCall","src":"2009:14:16"},"nodeType":"YulExpressionStatement","src":"2009:14:16"},{"nodeType":"YulAssignment","src":"2032:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:16"},"nodeType":"YulFunctionCall","src":"2040:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:16"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:16","type":""}],"src":"1943:121:16"},{"body":{"nodeType":"YulBlock","src":"2150:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:16","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:16"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:16"},"nodeType":"YulFunctionCall","src":"2221:17:16"},"nodeType":"YulExpressionStatement","src":"2221:17:16"},{"nodeType":"YulVariableDeclaration","src":"2251:31:16","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:16"},"nodeType":"YulFunctionCall","src":"2263:19:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:16","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:16"},"nodeType":"YulFunctionCall","src":"2331:19:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:16"},"nodeType":"YulFunctionCall","src":"2324:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:16"},"nodeType":"YulFunctionCall","src":"2314:38:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:16","statements":[{"nodeType":"YulAssignment","src":"2391:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:16","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:16"},"nodeType":"YulFunctionCall","src":"2368:20:16"},"nodeType":"YulIf","src":"2365:47:16"},{"nodeType":"YulVariableDeclaration","src":"2425:41:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:16","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:16"},"nodeType":"YulFunctionCall","src":"2452:12:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:16"},"nodeType":"YulFunctionCall","src":"2445:20:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:16"},"nodeType":"YulFunctionCall","src":"2435:31:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:16","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:16"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:16"},"nodeType":"YulFunctionCall","src":"2579:17:16"},"nodeType":"YulExpressionStatement","src":"2579:17:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:16"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:16"},"nodeType":"YulFunctionCall","src":"2524:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:16","statements":[{"nodeType":"YulAssignment","src":"2540:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:16"},"nodeType":"YulFunctionCall","src":"2549:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:16","statements":[]},"src":"2516:82:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:16"},"nodeType":"YulFunctionCall","src":"2163:11:16"},"nodeType":"YulIf","src":"2160:448:16"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:16","type":""}],"src":"2069:545:16"},{"body":{"nodeType":"YulBlock","src":"2704:81:16","statements":[{"nodeType":"YulAssignment","src":"2714:65:16","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:16","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:16"},"nodeType":"YulFunctionCall","src":"2743:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:16"},"nodeType":"YulFunctionCall","src":"2756:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:16"},"nodeType":"YulFunctionCall","src":"2739:24:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:16"},"nodeType":"YulFunctionCall","src":"2735:29:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:16"},"nodeType":"YulFunctionCall","src":"2725:40:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:16","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:16"},"nodeType":"YulFunctionCall","src":"2767:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:16"},"nodeType":"YulFunctionCall","src":"2722:57:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:16","type":""}],"src":"2619:166:16"},{"body":{"nodeType":"YulBlock","src":"2886:1256:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:16"},"nodeType":"YulFunctionCall","src":"2910:10:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:16"},"nodeType":"YulFunctionCall","src":"2965:18:16"},"nodeType":"YulExpressionStatement","src":"2965:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:16"},"nodeType":"YulFunctionCall","src":"2947:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:16"},"nodeType":"YulFunctionCall","src":"2943:18:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:16"},"nodeType":"YulFunctionCall","src":"2932:30:16"},"nodeType":"YulIf","src":"2929:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:16"},"nodeType":"YulFunctionCall","src":"3070:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:16"},"nodeType":"YulFunctionCall","src":"3044:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:16"},"nodeType":"YulFunctionCall","src":"2994:97:16"},"nodeType":"YulExpressionStatement","src":"2994:97:16"},{"nodeType":"YulVariableDeclaration","src":"3100:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:16","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:16","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:16","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:16"},"nodeType":"YulFunctionCall","src":"3270:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:16"},"nodeType":"YulFunctionCall","src":"3258:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:16"},"nodeType":"YulFunctionCall","src":"3305:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:16"},"nodeType":"YulFunctionCall","src":"3479:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:16"},"nodeType":"YulFunctionCall","src":"3473:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:16"},"nodeType":"YulFunctionCall","src":"3458:42:16"},"nodeType":"YulExpressionStatement","src":"3458:42:16"},{"nodeType":"YulAssignment","src":"3517:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:16"},"nodeType":"YulFunctionCall","src":"3527:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:16"}]},{"nodeType":"YulAssignment","src":"3558:40:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:16"},"nodeType":"YulFunctionCall","src":"3571:27:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:16"},"nodeType":"YulFunctionCall","src":"3384:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:16","statements":[{"nodeType":"YulAssignment","src":"3401:24:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:16"},"nodeType":"YulFunctionCall","src":"3406:19:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:16","statements":[]},"src":"3376:236:16"},{"body":{"nodeType":"YulBlock","src":"3660:166:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:16"},"nodeType":"YulFunctionCall","src":"3701:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:16"},"nodeType":"YulFunctionCall","src":"3695:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:16"},"nodeType":"YulFunctionCall","src":"3780:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:16"},"nodeType":"YulFunctionCall","src":"3776:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:16"},"nodeType":"YulFunctionCall","src":"3802:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:16"},"nodeType":"YulFunctionCall","src":"3772:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:16"},"nodeType":"YulFunctionCall","src":"3768:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:16"},"nodeType":"YulFunctionCall","src":"3753:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:16"},"nodeType":"YulFunctionCall","src":"3738:74:16"},"nodeType":"YulExpressionStatement","src":"3738:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:16"},"nodeType":"YulFunctionCall","src":"3628:19:16"},"nodeType":"YulIf","src":"3625:201:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:16"},"nodeType":"YulFunctionCall","src":"3856:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:16"},"nodeType":"YulFunctionCall","src":"3852:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:16"},"nodeType":"YulFunctionCall","src":"3839:36:16"},"nodeType":"YulExpressionStatement","src":"3839:36:16"}]},"nodeType":"YulCase","src":"3222:663:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:16","statements":[{"nodeType":"YulAssignment","src":"3983:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:16"},"nodeType":"YulFunctionCall","src":"3998:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:16"},"nodeType":"YulFunctionCall","src":"3992:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:16"},"nodeType":"YulIf","src":"3943:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:16"},"nodeType":"YulFunctionCall","src":"4058:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:16"},"nodeType":"YulFunctionCall","src":"4045:81:16"},"nodeType":"YulExpressionStatement","src":"4045:81:16"}]},"nodeType":"YulCase","src":"3894:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:16"},"nodeType":"YulFunctionCall","src":"3199:14:16"},"nodeType":"YulSwitch","src":"3192:944:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:16","type":""}],"src":"2790:1352:16"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea264697066735822122078a8226501b0b9794b593ce4b1aa9c7754cc55285feb77b24189e4875cb3224f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xA8226501B0B9794B593CE4B1AA9C7754CC55285FEB77B24189 0xE4 DUP8 0x5C 0xB3 0x22 0x4F PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1532:11312:1:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:1;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:16;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:16:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:16;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:16;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:16;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:16;;;3992:26;3943:89;-1:-1:-1;;2747:1:16;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:16;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:16;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:16;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:16:o;:::-;1532:11312:1;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_650":{"entryPoint":null,"id":650,"parameterSlots":3,"returnSlots":0},"@_approve_585":{"entryPoint":858,"id":585,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_639":{"entryPoint":null,"id":639,"parameterSlots":3,"returnSlots":0},"@_msgSender_1508":{"entryPoint":null,"id":1508,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_628":{"entryPoint":1150,"id":628,"parameterSlots":3,"returnSlots":0},"@_transfer_411":{"entryPoint":1272,"id":411,"parameterSlots":3,"returnSlots":0},"@allowance_206":{"entryPoint":815,"id":206,"parameterSlots":2,"returnSlots":1},"@approve_231":{"entryPoint":562,"id":231,"parameterSlots":2,"returnSlots":1},"@balanceOf_163":{"entryPoint":null,"id":163,"parameterSlots":1,"returnSlots":1},"@decimals_139":{"entryPoint":null,"id":139,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_334":{"entryPoint":673,"id":334,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_293":{"entryPoint":624,"id":293,"parameterSlots":2,"returnSlots":1},"@name_119":{"entryPoint":416,"id":119,"parameterSlots":0,"returnSlots":1},"@symbol_129":{"entryPoint":658,"id":129,"parameterSlots":0,"returnSlots":1},"@totalSupply_149":{"entryPoint":null,"id":149,"parameterSlots":0,"returnSlots":1},"@transferFrom_264":{"entryPoint":588,"id":264,"parameterSlots":3,"returnSlots":1},"@transfer_188":{"entryPoint":801,"id":188,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1770,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1934,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1840,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1798,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2043,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1985,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5754:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:16","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:16"},"nodeType":"YulFunctionCall","src":"166:21:16"},"nodeType":"YulExpressionStatement","src":"166:21:16"},{"nodeType":"YulVariableDeclaration","src":"196:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:16"},"nodeType":"YulFunctionCall","src":"210:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:16"},"nodeType":"YulFunctionCall","src":"239:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:16"},"nodeType":"YulFunctionCall","src":"232:34:16"},"nodeType":"YulExpressionStatement","src":"232:34:16"},{"nodeType":"YulVariableDeclaration","src":"275:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:16"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:16"},"nodeType":"YulFunctionCall","src":"369:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:16"},"nodeType":"YulFunctionCall","src":"365:26:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:16"},"nodeType":"YulFunctionCall","src":"403:14:16"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:16"},"nodeType":"YulFunctionCall","src":"393:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:16"},"nodeType":"YulFunctionCall","src":"358:66:16"},"nodeType":"YulExpressionStatement","src":"358:66:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:16"},"nodeType":"YulFunctionCall","src":"302:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:16","statements":[{"nodeType":"YulAssignment","src":"318:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:16"},"nodeType":"YulFunctionCall","src":"323:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:16","statements":[]},"src":"294:140:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:16"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:16"},"nodeType":"YulFunctionCall","src":"454:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:16"},"nodeType":"YulFunctionCall","src":"450:31:16"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:16"},"nodeType":"YulFunctionCall","src":"443:42:16"},"nodeType":"YulExpressionStatement","src":"443:42:16"},{"nodeType":"YulAssignment","src":"494:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:16"},"nodeType":"YulFunctionCall","src":"525:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:16"},"nodeType":"YulFunctionCall","src":"542:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:16"},"nodeType":"YulFunctionCall","src":"521:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:16"},"nodeType":"YulFunctionCall","src":"506:45:16"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:16"},"nodeType":"YulFunctionCall","src":"502:54:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:16","type":""}],"src":"14:548:16"},{"body":{"nodeType":"YulBlock","src":"616:124:16","statements":[{"nodeType":"YulAssignment","src":"626:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:16"},"nodeType":"YulFunctionCall","src":"635:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:16"}]},{"body":{"nodeType":"YulBlock","src":"718:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:16"},"nodeType":"YulFunctionCall","src":"720:12:16"},"nodeType":"YulExpressionStatement","src":"720:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:16"},"nodeType":"YulFunctionCall","src":"699:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:16"},"nodeType":"YulFunctionCall","src":"695:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:16"},"nodeType":"YulFunctionCall","src":"684:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:16"},"nodeType":"YulFunctionCall","src":"674:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:16"},"nodeType":"YulFunctionCall","src":"667:50:16"},"nodeType":"YulIf","src":"664:70:16"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:16","type":""}],"src":"567:173:16"},{"body":{"nodeType":"YulBlock","src":"832:167:16","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:16"},"nodeType":"YulFunctionCall","src":"880:12:16"},"nodeType":"YulExpressionStatement","src":"880:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:16"},"nodeType":"YulFunctionCall","src":"849:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:16"},"nodeType":"YulFunctionCall","src":"845:32:16"},"nodeType":"YulIf","src":"842:52:16"},{"nodeType":"YulAssignment","src":"903:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:16"},"nodeType":"YulFunctionCall","src":"913:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:16"}]},{"nodeType":"YulAssignment","src":"951:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:16"},"nodeType":"YulFunctionCall","src":"974:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:16"},"nodeType":"YulFunctionCall","src":"961:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:16","type":""}],"src":"745:254:16"},{"body":{"nodeType":"YulBlock","src":"1099:92:16","statements":[{"nodeType":"YulAssignment","src":"1109:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:16"},"nodeType":"YulFunctionCall","src":"1117:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:16"},"nodeType":"YulFunctionCall","src":"1169:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:16"},"nodeType":"YulFunctionCall","src":"1162:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:16"},"nodeType":"YulFunctionCall","src":"1144:41:16"},"nodeType":"YulExpressionStatement","src":"1144:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:16","type":""}],"src":"1004:187:16"},{"body":{"nodeType":"YulBlock","src":"1297:76:16","statements":[{"nodeType":"YulAssignment","src":"1307:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:16"},"nodeType":"YulFunctionCall","src":"1315:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:16"},"nodeType":"YulFunctionCall","src":"1342:25:16"},"nodeType":"YulExpressionStatement","src":"1342:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:16","type":""}],"src":"1196:177:16"},{"body":{"nodeType":"YulBlock","src":"1482:224:16","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:16"},"nodeType":"YulFunctionCall","src":"1530:12:16"},"nodeType":"YulExpressionStatement","src":"1530:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:16"},"nodeType":"YulFunctionCall","src":"1499:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:16"},"nodeType":"YulFunctionCall","src":"1495:32:16"},"nodeType":"YulIf","src":"1492:52:16"},{"nodeType":"YulAssignment","src":"1553:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:16"},"nodeType":"YulFunctionCall","src":"1563:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:16"}]},{"nodeType":"YulAssignment","src":"1601:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:16"},"nodeType":"YulFunctionCall","src":"1630:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:16"},"nodeType":"YulFunctionCall","src":"1611:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:16"}]},{"nodeType":"YulAssignment","src":"1658:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:16"},"nodeType":"YulFunctionCall","src":"1681:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:16"},"nodeType":"YulFunctionCall","src":"1668:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:16","type":""}],"src":"1378:328:16"},{"body":{"nodeType":"YulBlock","src":"1808:87:16","statements":[{"nodeType":"YulAssignment","src":"1818:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:16"},"nodeType":"YulFunctionCall","src":"1826:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:16"},"nodeType":"YulFunctionCall","src":"1871:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:16"},"nodeType":"YulFunctionCall","src":"1853:36:16"},"nodeType":"YulExpressionStatement","src":"1853:36:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:16","type":""}],"src":"1711:184:16"},{"body":{"nodeType":"YulBlock","src":"1970:116:16","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:16"},"nodeType":"YulFunctionCall","src":"2018:12:16"},"nodeType":"YulExpressionStatement","src":"2018:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:16"},"nodeType":"YulFunctionCall","src":"1987:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:16"},"nodeType":"YulFunctionCall","src":"1983:32:16"},"nodeType":"YulIf","src":"1980:52:16"},{"nodeType":"YulAssignment","src":"2041:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:16"},"nodeType":"YulFunctionCall","src":"2051:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:16","type":""}],"src":"1900:186:16"},{"body":{"nodeType":"YulBlock","src":"2178:173:16","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:16"},"nodeType":"YulFunctionCall","src":"2226:12:16"},"nodeType":"YulExpressionStatement","src":"2226:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:16"},"nodeType":"YulFunctionCall","src":"2195:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:16"},"nodeType":"YulFunctionCall","src":"2191:32:16"},"nodeType":"YulIf","src":"2188:52:16"},{"nodeType":"YulAssignment","src":"2249:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:16"},"nodeType":"YulFunctionCall","src":"2259:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:16"}]},{"nodeType":"YulAssignment","src":"2297:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:16"},"nodeType":"YulFunctionCall","src":"2326:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:16"},"nodeType":"YulFunctionCall","src":"2307:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:16","type":""}],"src":"2091:260:16"},{"body":{"nodeType":"YulBlock","src":"2411:325:16","statements":[{"nodeType":"YulAssignment","src":"2421:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:16"},"nodeType":"YulFunctionCall","src":"2431:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:16"},"nodeType":"YulFunctionCall","src":"2478:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:16","statements":[{"nodeType":"YulAssignment","src":"2531:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:16"},"nodeType":"YulFunctionCall","src":"2541:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:16"},"nodeType":"YulFunctionCall","src":"2502:26:16"},"nodeType":"YulIf","src":"2499:61:16"},{"body":{"nodeType":"YulBlock","src":"2619:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:16"},"nodeType":"YulFunctionCall","src":"2643:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:16"},"nodeType":"YulFunctionCall","src":"2633:31:16"},"nodeType":"YulExpressionStatement","src":"2633:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:16"},"nodeType":"YulFunctionCall","src":"2677:15:16"},"nodeType":"YulExpressionStatement","src":"2677:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:16"},"nodeType":"YulFunctionCall","src":"2705:15:16"},"nodeType":"YulExpressionStatement","src":"2705:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:16"},"nodeType":"YulFunctionCall","src":"2595:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:16"},"nodeType":"YulFunctionCall","src":"2572:38:16"},"nodeType":"YulIf","src":"2569:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:16","type":""}],"src":"2356:380:16"},{"body":{"nodeType":"YulBlock","src":"2789:174:16","statements":[{"nodeType":"YulAssignment","src":"2799:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:16"},"nodeType":"YulFunctionCall","src":"2806:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:16"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:16"},"nodeType":"YulFunctionCall","src":"2870:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:16"},"nodeType":"YulFunctionCall","src":"2860:31:16"},"nodeType":"YulExpressionStatement","src":"2860:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:16"},"nodeType":"YulFunctionCall","src":"2904:15:16"},"nodeType":"YulExpressionStatement","src":"2904:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:16"},"nodeType":"YulFunctionCall","src":"2932:15:16"},"nodeType":"YulExpressionStatement","src":"2932:15:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:16"},"nodeType":"YulFunctionCall","src":"2827:10:16"},"nodeType":"YulIf","src":"2824:133:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:16","type":""}],"src":"2741:222:16"},{"body":{"nodeType":"YulBlock","src":"3142:227:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:16"},"nodeType":"YulFunctionCall","src":"3152:21:16"},"nodeType":"YulExpressionStatement","src":"3152:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:16"},"nodeType":"YulFunctionCall","src":"3189:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:16","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:16"},"nodeType":"YulFunctionCall","src":"3182:30:16"},"nodeType":"YulExpressionStatement","src":"3182:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:16"},"nodeType":"YulFunctionCall","src":"3228:18:16"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:16","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:16"},"nodeType":"YulFunctionCall","src":"3221:62:16"},"nodeType":"YulExpressionStatement","src":"3221:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:16"},"nodeType":"YulFunctionCall","src":"3299:18:16"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:16","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:16"},"nodeType":"YulFunctionCall","src":"3292:35:16"},"nodeType":"YulExpressionStatement","src":"3292:35:16"},{"nodeType":"YulAssignment","src":"3336:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:16"},"nodeType":"YulFunctionCall","src":"3344:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:16","type":""}],"src":"2968:401:16"},{"body":{"nodeType":"YulBlock","src":"3548:226:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:16"},"nodeType":"YulFunctionCall","src":"3558:21:16"},"nodeType":"YulExpressionStatement","src":"3558:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:16"},"nodeType":"YulFunctionCall","src":"3595:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:16","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:16"},"nodeType":"YulFunctionCall","src":"3588:30:16"},"nodeType":"YulExpressionStatement","src":"3588:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:16"},"nodeType":"YulFunctionCall","src":"3634:18:16"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:16","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:16"},"nodeType":"YulFunctionCall","src":"3627:62:16"},"nodeType":"YulExpressionStatement","src":"3627:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:16"},"nodeType":"YulFunctionCall","src":"3705:18:16"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:16","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:16"},"nodeType":"YulFunctionCall","src":"3698:34:16"},"nodeType":"YulExpressionStatement","src":"3698:34:16"},{"nodeType":"YulAssignment","src":"3741:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:16"},"nodeType":"YulFunctionCall","src":"3749:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:16","type":""}],"src":"3374:400:16"},{"body":{"nodeType":"YulBlock","src":"3953:224:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:16"},"nodeType":"YulFunctionCall","src":"3963:21:16"},"nodeType":"YulExpressionStatement","src":"3963:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:16"},"nodeType":"YulFunctionCall","src":"4000:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:16","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:16"},"nodeType":"YulFunctionCall","src":"3993:30:16"},"nodeType":"YulExpressionStatement","src":"3993:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:16"},"nodeType":"YulFunctionCall","src":"4039:18:16"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:16","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:16"},"nodeType":"YulFunctionCall","src":"4032:62:16"},"nodeType":"YulExpressionStatement","src":"4032:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:16"},"nodeType":"YulFunctionCall","src":"4110:18:16"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:16","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:16"},"nodeType":"YulFunctionCall","src":"4103:32:16"},"nodeType":"YulExpressionStatement","src":"4103:32:16"},{"nodeType":"YulAssignment","src":"4144:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:16"},"nodeType":"YulFunctionCall","src":"4152:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:16","type":""}],"src":"3779:398:16"},{"body":{"nodeType":"YulBlock","src":"4356:179:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:16"},"nodeType":"YulFunctionCall","src":"4366:21:16"},"nodeType":"YulExpressionStatement","src":"4366:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:16"},"nodeType":"YulFunctionCall","src":"4403:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:16","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:16"},"nodeType":"YulFunctionCall","src":"4396:30:16"},"nodeType":"YulExpressionStatement","src":"4396:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:16"},"nodeType":"YulFunctionCall","src":"4442:18:16"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:16","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:16"},"nodeType":"YulFunctionCall","src":"4435:59:16"},"nodeType":"YulExpressionStatement","src":"4435:59:16"},{"nodeType":"YulAssignment","src":"4503:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:16"},"nodeType":"YulFunctionCall","src":"4511:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:16","type":""}],"src":"4182:353:16"},{"body":{"nodeType":"YulBlock","src":"4714:227:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:16"},"nodeType":"YulFunctionCall","src":"4724:21:16"},"nodeType":"YulExpressionStatement","src":"4724:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:16"},"nodeType":"YulFunctionCall","src":"4761:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:16","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:16"},"nodeType":"YulFunctionCall","src":"4754:30:16"},"nodeType":"YulExpressionStatement","src":"4754:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:16"},"nodeType":"YulFunctionCall","src":"4800:18:16"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:16","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:16"},"nodeType":"YulFunctionCall","src":"4793:62:16"},"nodeType":"YulExpressionStatement","src":"4793:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:16"},"nodeType":"YulFunctionCall","src":"4871:18:16"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:16","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:16"},"nodeType":"YulFunctionCall","src":"4864:35:16"},"nodeType":"YulExpressionStatement","src":"4864:35:16"},{"nodeType":"YulAssignment","src":"4908:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:16"},"nodeType":"YulFunctionCall","src":"4916:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:16","type":""}],"src":"4540:401:16"},{"body":{"nodeType":"YulBlock","src":"5120:225:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:16"},"nodeType":"YulFunctionCall","src":"5130:21:16"},"nodeType":"YulExpressionStatement","src":"5130:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:16"},"nodeType":"YulFunctionCall","src":"5167:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:16","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:16"},"nodeType":"YulFunctionCall","src":"5160:30:16"},"nodeType":"YulExpressionStatement","src":"5160:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:16"},"nodeType":"YulFunctionCall","src":"5206:18:16"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:16","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:16"},"nodeType":"YulFunctionCall","src":"5199:62:16"},"nodeType":"YulExpressionStatement","src":"5199:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:16"},"nodeType":"YulFunctionCall","src":"5277:18:16"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:16","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:16"},"nodeType":"YulFunctionCall","src":"5270:33:16"},"nodeType":"YulExpressionStatement","src":"5270:33:16"},{"nodeType":"YulAssignment","src":"5312:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:16"},"nodeType":"YulFunctionCall","src":"5320:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:16","type":""}],"src":"4946:399:16"},{"body":{"nodeType":"YulBlock","src":"5524:228:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:16"},"nodeType":"YulFunctionCall","src":"5534:21:16"},"nodeType":"YulExpressionStatement","src":"5534:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:16"},"nodeType":"YulFunctionCall","src":"5571:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:16","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:16"},"nodeType":"YulFunctionCall","src":"5564:30:16"},"nodeType":"YulExpressionStatement","src":"5564:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:16"},"nodeType":"YulFunctionCall","src":"5610:18:16"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:16","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:16"},"nodeType":"YulFunctionCall","src":"5603:62:16"},"nodeType":"YulExpressionStatement","src":"5603:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:16"},"nodeType":"YulFunctionCall","src":"5681:18:16"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:16","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:16"},"nodeType":"YulFunctionCall","src":"5674:36:16"},"nodeType":"YulExpressionStatement","src":"5674:36:16"},{"nodeType":"YulAssignment","src":"5719:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:16"},"nodeType":"YulFunctionCall","src":"5727:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:16","type":""}],"src":"5350:402:16"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea264697066735822122078a8226501b0b9794b593ce4b1aa9c7754cc55285feb77b24189e4875cb3224f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xA8226501B0B9794B593CE4B1AA9C7754CC55285FEB77B24189 0xE4 DUP8 0x5C 0xB3 0x22 0x4F PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1532:11312:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:16;;1162:22;1144:41;;1132:2;1117:18;4444:197:1;1004:187:16;3255:106:1;3342:12;;3255:106;;;1342:25:16;;;1330:2;1315:18;3255:106:1;1196:177:16;5203:256:1;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:16;;1841:2;1826:18;3104:91:1;1711:184:16;5854:234:1;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:1;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;734:10:7;4581:32:1;734:10:7;4597:7:1;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;734:10:7;5356:38:1;5372:4;734:10:7;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;5854:234::-;5942:4;734:10:7;5996:64:1;734:10:7;6012:7:1;6049:10;6021:25;734:10:7;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;734:10:7;6668:4:1;6749:25;734:10:7;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;3170:2:16;6784:85:1;;;3152:21:16;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:16;;;3292:35;3344:19;;6784:85:1;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;734:10:7;3873:28:1;734:10:7;3890:2:1;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;3576:2:16;10550:68:1;;;3558:21:16;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:16;;;3698:34;3749:19;;10550:68:1;3374:400:16;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;3981:2:16;10628:68:1;;;3963:21:16;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:16;;;4103:32;4152:19;;10628:68:1;3779:398:16;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:16;;;10758:32:1;;1315:18:16;10758:32:1;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;4384:2:16;11297:68:1;;;4366:21:16;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:1;4182:353:16;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;4742:2:16;7544:68:1;;;4724:21:16;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:16;;;4864:35;4916:19;;7544:68:1;4540:401:16;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;5148:2:16;7622:64:1;;;5130:21:16;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:16;;;5270:33;5320:19;;7622:64:1;4946:399:16;7622:64:1;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;5552:2:16;7793:72:1;;;5534:21:16;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:16;;;5674:36;5727:19;;7793:72:1;5350:402:16;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:16;;;8114:13:1;;8163:26;;1315:18:16;8163:26:1;;;;;;;8200:37;12073:91;14:548:16;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:16;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:16:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:16:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"426000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24628","balanceOf(address)":"2562","decimals()":"266","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51138","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":80,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":86,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":88,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":90,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":92,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220273e81c6a1e0ab5bd3196b884ca058bc6e6a32a055a0f709bbe22f8c65fdad9464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 RETURNDATACOPY DUP2 0xC6 LOG1 0xE0 0xAB JUMPDEST 0xD3 NOT PUSH12 0x884CA058BC6E6A32A055A0F7 MULMOD 0xBB 0xE2 0x2F DUP13 PUSH6 0xFDAD9464736F PUSH13 0x63430008140033000000000000 ","sourceMap":"701:6234:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;701:6234:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220273e81c6a1e0ab5bd3196b884ca058bc6e6a32a055a0f709bbe22f8c65fdad9464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 RETURNDATACOPY DUP2 0xC6 LOG1 0xE0 0xAB JUMPDEST 0xD3 NOT PUSH12 0x884CA058BC6E6A32A055A0F7 MULMOD 0xBB 0xE2 0x2F DUP13 PUSH6 0xFDAD9464736F PUSH13 0x63430008140033000000000000 ","sourceMap":"701:6234:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5958e19c2a82a0b74ae2dd95278aebe56f185c0c5bfe5707efb7658db5ddfe764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SWAP6 DUP15 NOT 0xC2 0xA8 0x2A SIGNEXTEND PUSH21 0xAE2DD95278AEBE56F185C0C5BFE5707EFB7658DB5D 0xDF 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5958e19c2a82a0b74ae2dd95278aebe56f185c0c5bfe5707efb7658db5ddfe764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SWAP6 DUP15 NOT 0xC2 0xA8 0x2A SIGNEXTEND PUSH21 0xAE2DD95278AEBE56F185C0C5BFE5707EFB7658DB5D 0xDF 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SwapManager.sol":{"SwapManager":{"abi":[{"inputs":[{"internalType":"address","name":"weth","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"resolver","type":"address"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"OrderFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"OrderRefunded","type":"event"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"fulfillOrder","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getOrder","outputs":[{"components":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"}],"internalType":"struct ISwapManager.SwapOrder","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isWorkerWallet","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"orders","outputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"refundOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"workerWallet","type":"address"}],"name":"registerWorkerWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"usedSecrets","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"registerWorkerWallet(address)":{"params":{"workerWallet":"The address of the worker wallet to register"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1566":{"entryPoint":null,"id":1566,"parameterSlots":1,"returnSlots":0},"@_18":{"entryPoint":null,"id":18,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":69,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:16","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:16"},"nodeType":"YulFunctionCall","src":"143:12:16"},"nodeType":"YulExpressionStatement","src":"143:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:16"},"nodeType":"YulFunctionCall","src":"112:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:16"},"nodeType":"YulFunctionCall","src":"108:32:16"},"nodeType":"YulIf","src":"105:52:16"},{"nodeType":"YulVariableDeclaration","src":"166:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:16"},"nodeType":"YulFunctionCall","src":"179:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:16"},"nodeType":"YulFunctionCall","src":"260:12:16"},"nodeType":"YulExpressionStatement","src":"260:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:16"},"nodeType":"YulFunctionCall","src":"239:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:16"},"nodeType":"YulFunctionCall","src":"235:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:16"},"nodeType":"YulFunctionCall","src":"224:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:16"},"nodeType":"YulFunctionCall","src":"214:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:16"},"nodeType":"YulFunctionCall","src":"207:50:16"},"nodeType":"YulIf","src":"204:70:16"},{"nodeType":"YulAssignment","src":"283:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:16"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:16","type":""}],"src":"14:290:16"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x172C CODESIZE SUB DUP1 PUSH2 0x172C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x75 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x169C PUSH2 0x90 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x37E ADD MSTORE PUSH2 0x169C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7535F2DF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7535F2DF EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x9C3F1E90 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xA4516C48 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xF6DCCF2E EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x116A1D9A EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x1F6D2EAC EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5778472A EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x6808D587 EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x140 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE SWAP4 DUP3 ADD SLOAD DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD DUP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH2 0x100 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x627 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND SWAP9 SWAP7 DUP8 AND SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 DUP6 AND SWAP5 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND DUP2 MSTORE SWAP10 DUP12 AND PUSH1 0x20 DUP12 ADD MSTORE DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x60 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP3 DUP8 AND PUSH1 0x80 DUP8 ADD MSTORE SWAP6 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xE0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1561 JUMP JUMPDEST PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13DC99195C881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x13DC99195C88185B1C9958591E48199D5B199A5B1B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C99599D5B991959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP GT PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111958591B1A5B99481B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737BA1037B93232B91034B734BA34B0BA37B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5CA JUMPI DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x5EE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x5EE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0xA60671D8537ED193E567F86DDF28CF35DC67073B5AD80A2D41359CFA78DB0A1E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH2 0x624 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C657420616C7265616479207265676973746572656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BE PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST TIMESTAMP DUP4 GT PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP2 PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840E6CAC6E4CAE840D0C2E6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x34 DUP5 ADD MSTORE PUSH1 0x54 DUP4 ADD DUP9 SWAP1 MSTORE DUP10 DUP2 SHL DUP3 AND PUSH1 0x74 DUP5 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x88 DUP3 ADD MSTORE PUSH1 0x9C DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xBC ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4F7264657220657869737473 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x892 JUMPI DUP6 CALLVALUE EQ PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD0811551208185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x8A7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND CALLER ADDRESS DUP10 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x958DA44420B864737AD53EA0AA959279A3E21574047C9737DF230D1F350577A0 DUP11 DUP11 DUP11 DUP11 DUP10 PUSH1 0x40 MLOAD PUSH2 0xABA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP1 POP PUSH2 0xACE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAE0 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13DC99195C881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x13DC99195C88185B1C9958591E48199D5B199A5B1B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13DC99195C881DD85CC81C99599D5B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xC19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DC99195C88195E1C1A5C9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081CD958DC995D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14D958DC995D08185B1C9958591E481D5CD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP4 LT ISZERO PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE08 JUMPI PUSH1 0x0 CALLER SWAP1 POP ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB0 SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420776F726B65722077616C6C6574206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST POP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE DUP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF44 JUMPI DUP1 PUSH1 0x2 ADD SLOAD SELFBALANCE LT ISZERO PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204554482062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 CALLER SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST POP PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0xF65 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x103E JUMPI DUP3 CALLVALUE LT ISZERO PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9CDD59999A58DA595B9D08115512081CD95B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP3 CALLVALUE GT ISZERO PUSH2 0xFFF JUMPI CALLER PUSH2 0x8FC PUSH2 0xFD5 DUP6 CALLVALUE PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1038 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x105E JUMP JUMPDEST DUP1 SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x105E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 CALLER SWAP2 AND DUP7 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 DUP6 SWAP1 PUSH32 0xC0DEC645483244C37030B06224E60B121EADD7EE71A4CE18862C979D5584042B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x10A0 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x10F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x10A0 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1199 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x112A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1274 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x1215 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1215 SWAP2 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1283 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x128B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1308 SWAP2 SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1345 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x134A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x135B DUP8 DUP4 DUP4 DUP8 PUSH2 0x1366 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13D5 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x13CE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST POP DUP2 PUSH2 0x1283 JUMP JUMPDEST PUSH2 0x1283 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x13EA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x144F DUP2 PUSH2 0x141D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH2 0x140 DUP2 ADD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1482 PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x14B1 PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x14CC PUSH1 0xA0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD PUSH2 0x14F5 DUP3 DUP6 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH2 0x120 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x152C DUP2 PUSH2 0x141D JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x153C DUP2 PUSH2 0x141D JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x144F DUP2 PUSH2 0x141D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x15CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x144F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x160E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15F6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1629 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x15F3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1652 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xEF KECCAK256 0x23 0xEB MSTORE 0xAF CALLCODE STATICCALL DUP10 0xEC SLT SWAP14 PUSH18 0xF4434664C74AD951C026249B280BA920BBAA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"326:5195:8:-:0;;;614:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;-1:-1:-1;;;;;650:11:8;;;326:5195;;14:290:16;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:16;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:16:o;:::-;326:5195:8;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@WETH_1556":{"entryPoint":null,"id":1556,"parameterSlots":0,"returnSlots":0},"@_1570":{"entryPoint":null,"id":1570,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_1117":{"entryPoint":4511,"id":1117,"parameterSlots":2,"returnSlots":0},"@_nonReentrantAfter_52":{"entryPoint":null,"id":52,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_44":{"entryPoint":4261,"id":44,"parameterSlots":0,"returnSlots":0},"@_revert_1495":{"entryPoint":null,"id":1495,"parameterSlots":2,"returnSlots":0},"@createOrder_1708":{"entryPoint":1716,"id":1708,"parameterSlots":6,"returnSlots":1},"@fulfillOrder_1967":{"entryPoint":2776,"id":1967,"parameterSlots":3,"returnSlots":0},"@functionCallWithValue_1320":{"entryPoint":4747,"id":1320,"parameterSlots":4,"returnSlots":1},"@functionCall_1256":{"entryPoint":4724,"id":1256,"parameterSlots":3,"returnSlots":1},"@getOrder_2079":{"entryPoint":null,"id":2079,"parameterSlots":1,"returnSlots":1},"@isContract_1184":{"entryPoint":null,"id":1184,"parameterSlots":1,"returnSlots":1},"@isWorkerWallet_1554":{"entryPoint":null,"id":1554,"parameterSlots":0,"returnSlots":0},"@orders_1546":{"entryPoint":null,"id":1546,"parameterSlots":0,"returnSlots":0},"@refundOrder_2066":{"entryPoint":971,"id":2066,"parameterSlots":1,"returnSlots":0},"@registerWorkerWallet_1729":{"entryPoint":1575,"id":1729,"parameterSlots":1,"returnSlots":0},"@safeTransferFrom_850":{"entryPoint":4449,"id":850,"parameterSlots":4,"returnSlots":0},"@safeTransfer_823":{"entryPoint":4350,"id":823,"parameterSlots":3,"returnSlots":0},"@usedSecrets_1550":{"entryPoint":null,"id":1550,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_1451":{"entryPoint":4966,"id":1451,"parameterSlots":4,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":5517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32":{"entryPoint":5384,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5585,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":5124,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint256t_bytes32":{"entryPoint":5473,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__to_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5655,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":11,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_08c77cb49204932981fc3b304c521ce64119bfd2a60ef913c832a1417c23d11f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_101deeb84a7b30c3ba1b40b0f7f4c505ac09a1a50e6d9ef928905ad230187381__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_22a9a99eda58e74c6eba1e99e395e307fd14f51f225afd0fed99c1a0493e28e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_29a9499b24c7c1c30de658e39e1b3b85bfcb2ce57b413521c2a3cb2388c5d10e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_890a6771b112b68c8156f7e98f853dfb4045cf1cc9f5289e3c6a09bc0e92fbd6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9235c93776d67cf588408e5134192cf89ff8ca3094db508a3dc1361854cb73d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2f4bfb2dcf7e06902cf8f2c0c97f84cc4c3e789bd0a5ba2698f8afbe21430ae__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c1d924f126c3222497ebba66a9b4321d9b6a8b8b39b3938bb6a4a6dbe0bdc4e0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eaa3ec15dceb626e10a70b0d9e8ba2711073f6106230fded9f2d7cf060f5b71d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_SwapOrder_$2436_memory_ptr__to_t_struct$_SwapOrder_$2436_memory_ptr__fromStack_reversed":{"entryPoint":5206,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5546,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5619,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":5149,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16832:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:16","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:16"},"nodeType":"YulFunctionCall","src":"132:12:16"},"nodeType":"YulExpressionStatement","src":"132:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:16"},"nodeType":"YulFunctionCall","src":"101:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:16"},"nodeType":"YulFunctionCall","src":"97:32:16"},"nodeType":"YulIf","src":"94:52:16"},{"nodeType":"YulAssignment","src":"155:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:16"},"nodeType":"YulFunctionCall","src":"165:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:16"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:16","type":""}],"src":"14:180:16"},{"body":{"nodeType":"YulBlock","src":"244:86:16","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"267:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"278:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"293:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"298:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"289:3:16"},"nodeType":"YulFunctionCall","src":"289:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"302:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"285:3:16"},"nodeType":"YulFunctionCall","src":"285:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"274:3:16"},"nodeType":"YulFunctionCall","src":"274:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"264:2:16"},"nodeType":"YulFunctionCall","src":"264:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"257:6:16"},"nodeType":"YulFunctionCall","src":"257:50:16"},"nodeType":"YulIf","src":"254:70:16"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"233:5:16","type":""}],"src":"199:131:16"},{"body":{"nodeType":"YulBlock","src":"405:177:16","statements":[{"body":{"nodeType":"YulBlock","src":"451:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"460:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"463:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"453:6:16"},"nodeType":"YulFunctionCall","src":"453:12:16"},"nodeType":"YulExpressionStatement","src":"453:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"426:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"435:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"422:3:16"},"nodeType":"YulFunctionCall","src":"422:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"447:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"418:3:16"},"nodeType":"YulFunctionCall","src":"418:32:16"},"nodeType":"YulIf","src":"415:52:16"},{"nodeType":"YulVariableDeclaration","src":"476:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"502:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"489:12:16"},"nodeType":"YulFunctionCall","src":"489:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"480:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"546:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"521:24:16"},"nodeType":"YulFunctionCall","src":"521:31:16"},"nodeType":"YulExpressionStatement","src":"521:31:16"},{"nodeType":"YulAssignment","src":"561:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"571:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"561:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"371:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"382:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"394:6:16","type":""}],"src":"335:247:16"},{"body":{"nodeType":"YulBlock","src":"628:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"645:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"664:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"657:6:16"},"nodeType":"YulFunctionCall","src":"657:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"650:6:16"},"nodeType":"YulFunctionCall","src":"650:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"638:6:16"},"nodeType":"YulFunctionCall","src":"638:34:16"},"nodeType":"YulExpressionStatement","src":"638:34:16"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"612:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"619:3:16","type":""}],"src":"587:91:16"},{"body":{"nodeType":"YulBlock","src":"778:92:16","statements":[{"nodeType":"YulAssignment","src":"788:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"800:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"811:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"796:3:16"},"nodeType":"YulFunctionCall","src":"796:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"788:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"830:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"855:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"848:6:16"},"nodeType":"YulFunctionCall","src":"848:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"841:6:16"},"nodeType":"YulFunctionCall","src":"841:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:16"},"nodeType":"YulFunctionCall","src":"823:41:16"},"nodeType":"YulExpressionStatement","src":"823:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"747:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"758:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"769:4:16","type":""}],"src":"683:187:16"},{"body":{"nodeType":"YulBlock","src":"919:60:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"936:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"945:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"960:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"965:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"956:3:16"},"nodeType":"YulFunctionCall","src":"956:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"969:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"952:3:16"},"nodeType":"YulFunctionCall","src":"952:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"941:3:16"},"nodeType":"YulFunctionCall","src":"941:31:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"929:6:16"},"nodeType":"YulFunctionCall","src":"929:44:16"},"nodeType":"YulExpressionStatement","src":"929:44:16"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"903:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"910:3:16","type":""}],"src":"875:104:16"},{"body":{"nodeType":"YulBlock","src":"1139:980:16","statements":[{"nodeType":"YulAssignment","src":"1149:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1161:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1172:3:16","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1157:3:16"},"nodeType":"YulFunctionCall","src":"1157:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1149:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1210:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1204:5:16"},"nodeType":"YulFunctionCall","src":"1204:13:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1219:9:16"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"1185:18:16"},"nodeType":"YulFunctionCall","src":"1185:44:16"},"nodeType":"YulExpressionStatement","src":"1185:44:16"},{"nodeType":"YulVariableDeclaration","src":"1238:44:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1268:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1276:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1264:3:16"},"nodeType":"YulFunctionCall","src":"1264:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1258:5:16"},"nodeType":"YulFunctionCall","src":"1258:24:16"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"1242:12:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"1310:12:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1328:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1339:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1324:3:16"},"nodeType":"YulFunctionCall","src":"1324:20:16"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"1291:18:16"},"nodeType":"YulFunctionCall","src":"1291:54:16"},"nodeType":"YulExpressionStatement","src":"1291:54:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1365:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1376:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1361:3:16"},"nodeType":"YulFunctionCall","src":"1361:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1393:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1401:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1389:3:16"},"nodeType":"YulFunctionCall","src":"1389:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1383:5:16"},"nodeType":"YulFunctionCall","src":"1383:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1354:6:16"},"nodeType":"YulFunctionCall","src":"1354:54:16"},"nodeType":"YulExpressionStatement","src":"1354:54:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1428:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1439:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1424:3:16"},"nodeType":"YulFunctionCall","src":"1424:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1456:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1464:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1452:3:16"},"nodeType":"YulFunctionCall","src":"1452:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1446:5:16"},"nodeType":"YulFunctionCall","src":"1446:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1417:6:16"},"nodeType":"YulFunctionCall","src":"1417:54:16"},"nodeType":"YulExpressionStatement","src":"1417:54:16"},{"nodeType":"YulVariableDeclaration","src":"1480:46:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1512:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1520:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1508:3:16"},"nodeType":"YulFunctionCall","src":"1508:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1502:5:16"},"nodeType":"YulFunctionCall","src":"1502:24:16"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"1484:14:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"1554:14:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1574:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1585:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1570:3:16"},"nodeType":"YulFunctionCall","src":"1570:20:16"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"1535:18:16"},"nodeType":"YulFunctionCall","src":"1535:56:16"},"nodeType":"YulExpressionStatement","src":"1535:56:16"},{"nodeType":"YulVariableDeclaration","src":"1600:46:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1632:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1640:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1628:3:16"},"nodeType":"YulFunctionCall","src":"1628:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1622:5:16"},"nodeType":"YulFunctionCall","src":"1622:24:16"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"1604:14:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"1674:14:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1694:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1705:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1690:3:16"},"nodeType":"YulFunctionCall","src":"1690:20:16"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"1655:18:16"},"nodeType":"YulFunctionCall","src":"1655:56:16"},"nodeType":"YulExpressionStatement","src":"1655:56:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1731:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1742:4:16","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1727:3:16"},"nodeType":"YulFunctionCall","src":"1727:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1759:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1767:4:16","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1755:3:16"},"nodeType":"YulFunctionCall","src":"1755:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1749:5:16"},"nodeType":"YulFunctionCall","src":"1749:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1720:6:16"},"nodeType":"YulFunctionCall","src":"1720:54:16"},"nodeType":"YulExpressionStatement","src":"1720:54:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1794:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1805:4:16","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1790:3:16"},"nodeType":"YulFunctionCall","src":"1790:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1822:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1830:4:16","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1818:3:16"},"nodeType":"YulFunctionCall","src":"1818:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1812:5:16"},"nodeType":"YulFunctionCall","src":"1812:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1783:6:16"},"nodeType":"YulFunctionCall","src":"1783:54:16"},"nodeType":"YulExpressionStatement","src":"1783:54:16"},{"nodeType":"YulVariableDeclaration","src":"1846:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1856:6:16","type":"","value":"0x0100"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1850:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1871:44:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1903:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1911:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1899:3:16"},"nodeType":"YulFunctionCall","src":"1899:15:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1893:5:16"},"nodeType":"YulFunctionCall","src":"1893:22:16"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"1875:14:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"1940:14:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1960:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1971:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1956:3:16"},"nodeType":"YulFunctionCall","src":"1956:18:16"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"1924:15:16"},"nodeType":"YulFunctionCall","src":"1924:51:16"},"nodeType":"YulExpressionStatement","src":"1924:51:16"},{"nodeType":"YulVariableDeclaration","src":"1984:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1994:6:16","type":"","value":"0x0120"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1988:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2009:44:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:16"},{"name":"_2","nodeType":"YulIdentifier","src":"2049:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2037:3:16"},"nodeType":"YulFunctionCall","src":"2037:15:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2031:5:16"},"nodeType":"YulFunctionCall","src":"2031:22:16"},"variables":[{"name":"memberValue0_4","nodeType":"YulTypedName","src":"2013:14:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_4","nodeType":"YulIdentifier","src":"2078:14:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2098:9:16"},{"name":"_2","nodeType":"YulIdentifier","src":"2109:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2094:3:16"},"nodeType":"YulFunctionCall","src":"2094:18:16"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"2062:15:16"},"nodeType":"YulFunctionCall","src":"2062:51:16"},"nodeType":"YulExpressionStatement","src":"2062:51:16"}]},"name":"abi_encode_tuple_t_struct$_SwapOrder_$2436_memory_ptr__to_t_struct$_SwapOrder_$2436_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1108:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1119:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1130:4:16","type":""}],"src":"984:1135:16"},{"body":{"nodeType":"YulBlock","src":"2279:508:16","statements":[{"body":{"nodeType":"YulBlock","src":"2326:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2335:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2338:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2328:6:16"},"nodeType":"YulFunctionCall","src":"2328:12:16"},"nodeType":"YulExpressionStatement","src":"2328:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2300:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2309:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2296:3:16"},"nodeType":"YulFunctionCall","src":"2296:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2321:3:16","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2292:3:16"},"nodeType":"YulFunctionCall","src":"2292:33:16"},"nodeType":"YulIf","src":"2289:53:16"},{"nodeType":"YulVariableDeclaration","src":"2351:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2377:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2364:12:16"},"nodeType":"YulFunctionCall","src":"2364:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2355:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2421:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2396:24:16"},"nodeType":"YulFunctionCall","src":"2396:31:16"},"nodeType":"YulExpressionStatement","src":"2396:31:16"},{"nodeType":"YulAssignment","src":"2436:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2446:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2436:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2460:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2492:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2503:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2488:3:16"},"nodeType":"YulFunctionCall","src":"2488:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2475:12:16"},"nodeType":"YulFunctionCall","src":"2475:32:16"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2464:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2541:7:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2516:24:16"},"nodeType":"YulFunctionCall","src":"2516:33:16"},"nodeType":"YulExpressionStatement","src":"2516:33:16"},{"nodeType":"YulAssignment","src":"2558:17:16","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2568:7:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2558:6:16"}]},{"nodeType":"YulAssignment","src":"2584:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2611:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2622:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2607:3:16"},"nodeType":"YulFunctionCall","src":"2607:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2594:12:16"},"nodeType":"YulFunctionCall","src":"2594:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2584:6:16"}]},{"nodeType":"YulAssignment","src":"2635:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2662:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2673:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2658:3:16"},"nodeType":"YulFunctionCall","src":"2658:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2645:12:16"},"nodeType":"YulFunctionCall","src":"2645:32:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2635:6:16"}]},{"nodeType":"YulAssignment","src":"2686:43:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2713:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2724:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2709:3:16"},"nodeType":"YulFunctionCall","src":"2709:19:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2696:12:16"},"nodeType":"YulFunctionCall","src":"2696:33:16"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2686:6:16"}]},{"nodeType":"YulAssignment","src":"2738:43:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2765:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2776:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2761:3:16"},"nodeType":"YulFunctionCall","src":"2761:19:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2748:12:16"},"nodeType":"YulFunctionCall","src":"2748:33:16"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2738:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2205:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2216:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2228:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2236:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2244:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2252:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2260:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2268:6:16","type":""}],"src":"2124:663:16"},{"body":{"nodeType":"YulBlock","src":"2893:76:16","statements":[{"nodeType":"YulAssignment","src":"2903:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2915:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2926:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2911:3:16"},"nodeType":"YulFunctionCall","src":"2911:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2903:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2945:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2956:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2938:6:16"},"nodeType":"YulFunctionCall","src":"2938:25:16"},"nodeType":"YulExpressionStatement","src":"2938:25:16"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2862:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2873:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2884:4:16","type":""}],"src":"2792:177:16"},{"body":{"nodeType":"YulBlock","src":"3315:576:16","statements":[{"nodeType":"YulAssignment","src":"3325:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3337:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3348:3:16","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3333:3:16"},"nodeType":"YulFunctionCall","src":"3333:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3325:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"3361:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3379:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3384:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3375:3:16"},"nodeType":"YulFunctionCall","src":"3375:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"3388:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3371:3:16"},"nodeType":"YulFunctionCall","src":"3371:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3365:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3406:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3421:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"3429:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3417:3:16"},"nodeType":"YulFunctionCall","src":"3417:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3399:6:16"},"nodeType":"YulFunctionCall","src":"3399:34:16"},"nodeType":"YulExpressionStatement","src":"3399:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3453:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3464:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3449:3:16"},"nodeType":"YulFunctionCall","src":"3449:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3473:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"3481:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3469:3:16"},"nodeType":"YulFunctionCall","src":"3469:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3442:6:16"},"nodeType":"YulFunctionCall","src":"3442:43:16"},"nodeType":"YulExpressionStatement","src":"3442:43:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3505:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3516:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3501:3:16"},"nodeType":"YulFunctionCall","src":"3501:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"3521:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3494:6:16"},"nodeType":"YulFunctionCall","src":"3494:34:16"},"nodeType":"YulExpressionStatement","src":"3494:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3559:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:16"},"nodeType":"YulFunctionCall","src":"3544:18:16"},{"name":"value3","nodeType":"YulIdentifier","src":"3564:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3537:6:16"},"nodeType":"YulFunctionCall","src":"3537:34:16"},"nodeType":"YulExpressionStatement","src":"3537:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3591:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3602:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3587:3:16"},"nodeType":"YulFunctionCall","src":"3587:19:16"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3612:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"3620:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3608:3:16"},"nodeType":"YulFunctionCall","src":"3608:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3580:6:16"},"nodeType":"YulFunctionCall","src":"3580:44:16"},"nodeType":"YulExpressionStatement","src":"3580:44:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3644:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3655:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3640:3:16"},"nodeType":"YulFunctionCall","src":"3640:19:16"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"3665:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"3673:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3661:3:16"},"nodeType":"YulFunctionCall","src":"3661:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3633:6:16"},"nodeType":"YulFunctionCall","src":"3633:44:16"},"nodeType":"YulExpressionStatement","src":"3633:44:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3697:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3708:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3693:3:16"},"nodeType":"YulFunctionCall","src":"3693:19:16"},{"name":"value6","nodeType":"YulIdentifier","src":"3714:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3686:6:16"},"nodeType":"YulFunctionCall","src":"3686:35:16"},"nodeType":"YulExpressionStatement","src":"3686:35:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3741:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3752:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3737:3:16"},"nodeType":"YulFunctionCall","src":"3737:19:16"},{"name":"value7","nodeType":"YulIdentifier","src":"3758:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3730:6:16"},"nodeType":"YulFunctionCall","src":"3730:35:16"},"nodeType":"YulExpressionStatement","src":"3730:35:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3785:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:16","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3781:3:16"},"nodeType":"YulFunctionCall","src":"3781:19:16"},{"arguments":[{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"3816:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3809:6:16"},"nodeType":"YulFunctionCall","src":"3809:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3802:6:16"},"nodeType":"YulFunctionCall","src":"3802:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3774:6:16"},"nodeType":"YulFunctionCall","src":"3774:51:16"},"nodeType":"YulExpressionStatement","src":"3774:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3845:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3856:3:16","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3841:3:16"},"nodeType":"YulFunctionCall","src":"3841:19:16"},{"arguments":[{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"3876:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3869:6:16"},"nodeType":"YulFunctionCall","src":"3869:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3862:6:16"},"nodeType":"YulFunctionCall","src":"3862:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3834:6:16"},"nodeType":"YulFunctionCall","src":"3834:51:16"},"nodeType":"YulExpressionStatement","src":"3834:51:16"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3212:9:16","type":""},{"name":"value9","nodeType":"YulTypedName","src":"3223:6:16","type":""},{"name":"value8","nodeType":"YulTypedName","src":"3231:6:16","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3239:6:16","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3247:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3255:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3263:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3271:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3279:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3287:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3295:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3306:4:16","type":""}],"src":"2974:917:16"},{"body":{"nodeType":"YulBlock","src":"3997:102:16","statements":[{"nodeType":"YulAssignment","src":"4007:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4019:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4030:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4015:3:16"},"nodeType":"YulFunctionCall","src":"4015:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4007:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4049:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4064:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4085:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4076:3:16"},"nodeType":"YulFunctionCall","src":"4076:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"4089:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4072:3:16"},"nodeType":"YulFunctionCall","src":"4072:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4060:3:16"},"nodeType":"YulFunctionCall","src":"4060:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4042:6:16"},"nodeType":"YulFunctionCall","src":"4042:51:16"},"nodeType":"YulExpressionStatement","src":"4042:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3966:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3977:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3988:4:16","type":""}],"src":"3896:203:16"},{"body":{"nodeType":"YulBlock","src":"4208:212:16","statements":[{"body":{"nodeType":"YulBlock","src":"4254:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4263:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4266:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4256:6:16"},"nodeType":"YulFunctionCall","src":"4256:12:16"},"nodeType":"YulExpressionStatement","src":"4256:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4229:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4238:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4225:3:16"},"nodeType":"YulFunctionCall","src":"4225:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4250:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4221:3:16"},"nodeType":"YulFunctionCall","src":"4221:32:16"},"nodeType":"YulIf","src":"4218:52:16"},{"nodeType":"YulAssignment","src":"4279:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4302:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4289:12:16"},"nodeType":"YulFunctionCall","src":"4289:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4279:6:16"}]},{"nodeType":"YulAssignment","src":"4321:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4348:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4359:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4344:3:16"},"nodeType":"YulFunctionCall","src":"4344:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4331:12:16"},"nodeType":"YulFunctionCall","src":"4331:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4321:6:16"}]},{"nodeType":"YulAssignment","src":"4372:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4399:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4410:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4395:3:16"},"nodeType":"YulFunctionCall","src":"4395:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4382:12:16"},"nodeType":"YulFunctionCall","src":"4382:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4372:6:16"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4158:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4169:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4181:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4189:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4197:6:16","type":""}],"src":"4104:316:16"},{"body":{"nodeType":"YulBlock","src":"4599:165:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4616:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4627:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4609:6:16"},"nodeType":"YulFunctionCall","src":"4609:21:16"},"nodeType":"YulExpressionStatement","src":"4609:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4650:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4661:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4646:3:16"},"nodeType":"YulFunctionCall","src":"4646:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"4666:2:16","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4639:6:16"},"nodeType":"YulFunctionCall","src":"4639:30:16"},"nodeType":"YulExpressionStatement","src":"4639:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4689:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4700:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4685:3:16"},"nodeType":"YulFunctionCall","src":"4685:18:16"},{"hexValue":"4f72646572206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"4705:17:16","type":"","value":"Order not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4678:6:16"},"nodeType":"YulFunctionCall","src":"4678:45:16"},"nodeType":"YulExpressionStatement","src":"4678:45:16"},{"nodeType":"YulAssignment","src":"4732:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4744:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4755:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4740:3:16"},"nodeType":"YulFunctionCall","src":"4740:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4732:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4576:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4590:4:16","type":""}],"src":"4425:339:16"},{"body":{"nodeType":"YulBlock","src":"4943:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4960:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4971:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4953:6:16"},"nodeType":"YulFunctionCall","src":"4953:21:16"},"nodeType":"YulExpressionStatement","src":"4953:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4994:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5005:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4990:3:16"},"nodeType":"YulFunctionCall","src":"4990:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"5010:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4983:6:16"},"nodeType":"YulFunctionCall","src":"4983:30:16"},"nodeType":"YulExpressionStatement","src":"4983:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5033:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5044:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5029:3:16"},"nodeType":"YulFunctionCall","src":"5029:18:16"},{"hexValue":"4f7264657220616c72656164792066756c66696c6c6564","kind":"string","nodeType":"YulLiteral","src":"5049:25:16","type":"","value":"Order already fulfilled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5022:6:16"},"nodeType":"YulFunctionCall","src":"5022:53:16"},"nodeType":"YulExpressionStatement","src":"5022:53:16"},{"nodeType":"YulAssignment","src":"5084:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5096:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5107:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:16"},"nodeType":"YulFunctionCall","src":"5092:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5084:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4920:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4934:4:16","type":""}],"src":"4769:347:16"},{"body":{"nodeType":"YulBlock","src":"5295:166:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5312:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5323:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5305:6:16"},"nodeType":"YulFunctionCall","src":"5305:21:16"},"nodeType":"YulExpressionStatement","src":"5305:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5346:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5357:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5342:3:16"},"nodeType":"YulFunctionCall","src":"5342:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"5362:2:16","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5335:6:16"},"nodeType":"YulFunctionCall","src":"5335:30:16"},"nodeType":"YulExpressionStatement","src":"5335:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5385:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5381:3:16"},"nodeType":"YulFunctionCall","src":"5381:18:16"},{"hexValue":"416c726561647920726566756e646564","kind":"string","nodeType":"YulLiteral","src":"5401:18:16","type":"","value":"Already refunded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5374:6:16"},"nodeType":"YulFunctionCall","src":"5374:46:16"},"nodeType":"YulExpressionStatement","src":"5374:46:16"},{"nodeType":"YulAssignment","src":"5429:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5441:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5452:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5437:3:16"},"nodeType":"YulFunctionCall","src":"5437:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5429:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5272:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5286:4:16","type":""}],"src":"5121:340:16"},{"body":{"nodeType":"YulBlock","src":"5640:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5657:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5668:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5650:6:16"},"nodeType":"YulFunctionCall","src":"5650:21:16"},"nodeType":"YulExpressionStatement","src":"5650:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5691:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5702:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5687:3:16"},"nodeType":"YulFunctionCall","src":"5687:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"5707:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5680:6:16"},"nodeType":"YulFunctionCall","src":"5680:30:16"},"nodeType":"YulExpressionStatement","src":"5680:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5730:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5741:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5726:3:16"},"nodeType":"YulFunctionCall","src":"5726:18:16"},{"hexValue":"446561646c696e65206e6f742072656163686564","kind":"string","nodeType":"YulLiteral","src":"5746:22:16","type":"","value":"Deadline not reached"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5719:6:16"},"nodeType":"YulFunctionCall","src":"5719:50:16"},"nodeType":"YulExpressionStatement","src":"5719:50:16"},{"nodeType":"YulAssignment","src":"5778:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5790:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5801:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5786:3:16"},"nodeType":"YulFunctionCall","src":"5786:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5778:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5617:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5631:4:16","type":""}],"src":"5466:344:16"},{"body":{"nodeType":"YulBlock","src":"5989:169:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6006:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6017:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5999:6:16"},"nodeType":"YulFunctionCall","src":"5999:21:16"},"nodeType":"YulExpressionStatement","src":"5999:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6040:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6051:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6036:3:16"},"nodeType":"YulFunctionCall","src":"6036:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"6056:2:16","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6029:6:16"},"nodeType":"YulFunctionCall","src":"6029:30:16"},"nodeType":"YulExpressionStatement","src":"6029:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6079:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6090:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6075:3:16"},"nodeType":"YulFunctionCall","src":"6075:18:16"},{"hexValue":"4e6f74206f7264657220696e69746961746f72","kind":"string","nodeType":"YulLiteral","src":"6095:21:16","type":"","value":"Not order initiator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6068:6:16"},"nodeType":"YulFunctionCall","src":"6068:49:16"},"nodeType":"YulExpressionStatement","src":"6068:49:16"},{"nodeType":"YulAssignment","src":"6126:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6138:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6149:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6134:3:16"},"nodeType":"YulFunctionCall","src":"6134:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6126:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_101deeb84a7b30c3ba1b40b0f7f4c505ac09a1a50e6d9ef928905ad230187381__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5966:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5980:4:16","type":""}],"src":"5815:343:16"},{"body":{"nodeType":"YulBlock","src":"6337:181:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6354:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6365:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6347:6:16"},"nodeType":"YulFunctionCall","src":"6347:21:16"},"nodeType":"YulExpressionStatement","src":"6347:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6388:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6399:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6384:3:16"},"nodeType":"YulFunctionCall","src":"6384:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"6404:2:16","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6377:6:16"},"nodeType":"YulFunctionCall","src":"6377:30:16"},"nodeType":"YulExpressionStatement","src":"6377:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6427:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6438:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6423:3:16"},"nodeType":"YulFunctionCall","src":"6423:18:16"},{"hexValue":"576f726b657257616c6c657420616c72656164792072656769737465726564","kind":"string","nodeType":"YulLiteral","src":"6443:33:16","type":"","value":"WorkerWallet already registered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6416:6:16"},"nodeType":"YulFunctionCall","src":"6416:61:16"},"nodeType":"YulExpressionStatement","src":"6416:61:16"},{"nodeType":"YulAssignment","src":"6486:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6498:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6509:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6494:3:16"},"nodeType":"YulFunctionCall","src":"6494:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6486:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_08c77cb49204932981fc3b304c521ce64119bfd2a60ef913c832a1417c23d11f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6314:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6328:4:16","type":""}],"src":"6163:355:16"},{"body":{"nodeType":"YulBlock","src":"6697:161:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6714:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6725:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6707:6:16"},"nodeType":"YulFunctionCall","src":"6707:21:16"},"nodeType":"YulExpressionStatement","src":"6707:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6748:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6759:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6744:3:16"},"nodeType":"YulFunctionCall","src":"6744:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"6764:2:16","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6737:6:16"},"nodeType":"YulFunctionCall","src":"6737:30:16"},"nodeType":"YulExpressionStatement","src":"6737:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6787:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6798:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6783:3:16"},"nodeType":"YulFunctionCall","src":"6783:18:16"},{"hexValue":"5a65726f20616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"6803:13:16","type":"","value":"Zero amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6776:6:16"},"nodeType":"YulFunctionCall","src":"6776:41:16"},"nodeType":"YulExpressionStatement","src":"6776:41:16"},{"nodeType":"YulAssignment","src":"6826:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6838:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6849:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6834:3:16"},"nodeType":"YulFunctionCall","src":"6834:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6826:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6674:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6688:4:16","type":""}],"src":"6523:335:16"},{"body":{"nodeType":"YulBlock","src":"7037:166:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7054:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7065:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7047:6:16"},"nodeType":"YulFunctionCall","src":"7047:21:16"},"nodeType":"YulExpressionStatement","src":"7047:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7088:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7099:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7084:3:16"},"nodeType":"YulFunctionCall","src":"7084:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7104:2:16","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7077:6:16"},"nodeType":"YulFunctionCall","src":"7077:30:16"},"nodeType":"YulExpressionStatement","src":"7077:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7127:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7138:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7123:3:16"},"nodeType":"YulFunctionCall","src":"7123:18:16"},{"hexValue":"496e76616c696420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"7143:18:16","type":"","value":"Invalid deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7116:6:16"},"nodeType":"YulFunctionCall","src":"7116:46:16"},"nodeType":"YulExpressionStatement","src":"7116:46:16"},{"nodeType":"YulAssignment","src":"7171:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7183:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7194:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7179:3:16"},"nodeType":"YulFunctionCall","src":"7179:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7171:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7014:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7028:4:16","type":""}],"src":"6863:340:16"},{"body":{"nodeType":"YulBlock","src":"7382:169:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7399:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7410:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7392:6:16"},"nodeType":"YulFunctionCall","src":"7392:21:16"},"nodeType":"YulExpressionStatement","src":"7392:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7433:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7444:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7429:3:16"},"nodeType":"YulFunctionCall","src":"7429:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7449:2:16","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7422:6:16"},"nodeType":"YulFunctionCall","src":"7422:30:16"},"nodeType":"YulExpressionStatement","src":"7422:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7472:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7483:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7468:3:16"},"nodeType":"YulFunctionCall","src":"7468:18:16"},{"hexValue":"496e76616c6964207365637265742068617368","kind":"string","nodeType":"YulLiteral","src":"7488:21:16","type":"","value":"Invalid secret hash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7461:6:16"},"nodeType":"YulFunctionCall","src":"7461:49:16"},"nodeType":"YulExpressionStatement","src":"7461:49:16"},{"nodeType":"YulAssignment","src":"7519:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7531:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7542:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7527:3:16"},"nodeType":"YulFunctionCall","src":"7527:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7519:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_29a9499b24c7c1c30de658e39e1b3b85bfcb2ce57b413521c2a3cb2388c5d10e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7359:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7373:4:16","type":""}],"src":"7208:343:16"},{"body":{"nodeType":"YulBlock","src":"7815:355:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7825:41:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7839:26:16","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7835:3:16"},"nodeType":"YulFunctionCall","src":"7835:31:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7829:2:16","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7882:3:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7895:2:16","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"7899:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7891:3:16"},"nodeType":"YulFunctionCall","src":"7891:15:16"},{"name":"_1","nodeType":"YulIdentifier","src":"7908:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7887:3:16"},"nodeType":"YulFunctionCall","src":"7887:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7875:6:16"},"nodeType":"YulFunctionCall","src":"7875:37:16"},"nodeType":"YulExpressionStatement","src":"7875:37:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7932:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7937:2:16","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7928:3:16"},"nodeType":"YulFunctionCall","src":"7928:12:16"},{"name":"value1","nodeType":"YulIdentifier","src":"7942:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7921:6:16"},"nodeType":"YulFunctionCall","src":"7921:28:16"},"nodeType":"YulExpressionStatement","src":"7921:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7969:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7974:2:16","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7965:3:16"},"nodeType":"YulFunctionCall","src":"7965:12:16"},{"name":"value2","nodeType":"YulIdentifier","src":"7979:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7958:6:16"},"nodeType":"YulFunctionCall","src":"7958:28:16"},"nodeType":"YulExpressionStatement","src":"7958:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8006:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8011:2:16","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8002:3:16"},"nodeType":"YulFunctionCall","src":"8002:12:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8024:2:16","type":"","value":"96"},{"name":"value3","nodeType":"YulIdentifier","src":"8028:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8020:3:16"},"nodeType":"YulFunctionCall","src":"8020:15:16"},{"name":"_1","nodeType":"YulIdentifier","src":"8037:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8016:3:16"},"nodeType":"YulFunctionCall","src":"8016:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7995:6:16"},"nodeType":"YulFunctionCall","src":"7995:46:16"},"nodeType":"YulExpressionStatement","src":"7995:46:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8061:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8066:3:16","type":"","value":"104"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8057:3:16"},"nodeType":"YulFunctionCall","src":"8057:13:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8080:2:16","type":"","value":"96"},{"name":"value4","nodeType":"YulIdentifier","src":"8084:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8076:3:16"},"nodeType":"YulFunctionCall","src":"8076:15:16"},{"name":"_1","nodeType":"YulIdentifier","src":"8093:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8072:3:16"},"nodeType":"YulFunctionCall","src":"8072:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8050:6:16"},"nodeType":"YulFunctionCall","src":"8050:47:16"},"nodeType":"YulExpressionStatement","src":"8050:47:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8117:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8122:3:16","type":"","value":"124"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8113:3:16"},"nodeType":"YulFunctionCall","src":"8113:13:16"},{"name":"value5","nodeType":"YulIdentifier","src":"8128:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8106:6:16"},"nodeType":"YulFunctionCall","src":"8106:29:16"},"nodeType":"YulExpressionStatement","src":"8106:29:16"},{"nodeType":"YulAssignment","src":"8144:20:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8155:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8160:3:16","type":"","value":"156"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8151:3:16"},"nodeType":"YulFunctionCall","src":"8151:13:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8144:3:16"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__to_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7751:3:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7756:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7764:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7772:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7780:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7788:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7796:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7807:3:16","type":""}],"src":"7556:614:16"},{"body":{"nodeType":"YulBlock","src":"8349:162:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8366:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8377:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8359:6:16"},"nodeType":"YulFunctionCall","src":"8359:21:16"},"nodeType":"YulExpressionStatement","src":"8359:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8400:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8411:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8396:3:16"},"nodeType":"YulFunctionCall","src":"8396:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"8416:2:16","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8389:6:16"},"nodeType":"YulFunctionCall","src":"8389:30:16"},"nodeType":"YulExpressionStatement","src":"8389:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8439:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8450:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8435:3:16"},"nodeType":"YulFunctionCall","src":"8435:18:16"},{"hexValue":"4f7264657220657869737473","kind":"string","nodeType":"YulLiteral","src":"8455:14:16","type":"","value":"Order exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8428:6:16"},"nodeType":"YulFunctionCall","src":"8428:42:16"},"nodeType":"YulExpressionStatement","src":"8428:42:16"},{"nodeType":"YulAssignment","src":"8479:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8502:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8487:3:16"},"nodeType":"YulFunctionCall","src":"8487:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8479:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_c1d924f126c3222497ebba66a9b4321d9b6a8b8b39b3938bb6a4a6dbe0bdc4e0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8326:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8340:4:16","type":""}],"src":"8175:336:16"},{"body":{"nodeType":"YulBlock","src":"8690:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8707:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8718:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8700:6:16"},"nodeType":"YulFunctionCall","src":"8700:21:16"},"nodeType":"YulExpressionStatement","src":"8700:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8741:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8752:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8737:3:16"},"nodeType":"YulFunctionCall","src":"8737:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"8757:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8730:6:16"},"nodeType":"YulFunctionCall","src":"8730:30:16"},"nodeType":"YulExpressionStatement","src":"8730:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8780:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8791:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8776:3:16"},"nodeType":"YulFunctionCall","src":"8776:18:16"},{"hexValue":"496e636f72726563742045544820616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"8796:22:16","type":"","value":"Incorrect ETH amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8769:6:16"},"nodeType":"YulFunctionCall","src":"8769:50:16"},"nodeType":"YulExpressionStatement","src":"8769:50:16"},{"nodeType":"YulAssignment","src":"8828:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8840:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8851:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8836:3:16"},"nodeType":"YulFunctionCall","src":"8836:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8828:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8667:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8681:4:16","type":""}],"src":"8516:344:16"},{"body":{"nodeType":"YulBlock","src":"9078:306:16","statements":[{"nodeType":"YulAssignment","src":"9088:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9100:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9111:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9096:3:16"},"nodeType":"YulFunctionCall","src":"9096:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9088:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"9124:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9142:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9147:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9138:3:16"},"nodeType":"YulFunctionCall","src":"9138:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"9151:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9134:3:16"},"nodeType":"YulFunctionCall","src":"9134:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9128:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9169:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9184:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"9192:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9180:3:16"},"nodeType":"YulFunctionCall","src":"9180:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9162:6:16"},"nodeType":"YulFunctionCall","src":"9162:34:16"},"nodeType":"YulExpressionStatement","src":"9162:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9216:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9227:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9212:3:16"},"nodeType":"YulFunctionCall","src":"9212:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9236:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"9244:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9232:3:16"},"nodeType":"YulFunctionCall","src":"9232:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9205:6:16"},"nodeType":"YulFunctionCall","src":"9205:43:16"},"nodeType":"YulExpressionStatement","src":"9205:43:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9268:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9279:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9264:3:16"},"nodeType":"YulFunctionCall","src":"9264:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"9284:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9257:6:16"},"nodeType":"YulFunctionCall","src":"9257:34:16"},"nodeType":"YulExpressionStatement","src":"9257:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9311:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9322:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9307:3:16"},"nodeType":"YulFunctionCall","src":"9307:18:16"},{"name":"value3","nodeType":"YulIdentifier","src":"9327:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9300:6:16"},"nodeType":"YulFunctionCall","src":"9300:34:16"},"nodeType":"YulExpressionStatement","src":"9300:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9354:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9365:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9350:3:16"},"nodeType":"YulFunctionCall","src":"9350:19:16"},{"name":"value4","nodeType":"YulIdentifier","src":"9371:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9343:6:16"},"nodeType":"YulFunctionCall","src":"9343:35:16"},"nodeType":"YulExpressionStatement","src":"9343:35:16"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9015:9:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9026:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9034:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9042:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9050:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9058:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9069:4:16","type":""}],"src":"8865:519:16"},{"body":{"nodeType":"YulBlock","src":"9563:168:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9580:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9591:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9573:6:16"},"nodeType":"YulFunctionCall","src":"9573:21:16"},"nodeType":"YulExpressionStatement","src":"9573:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9614:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9625:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9610:3:16"},"nodeType":"YulFunctionCall","src":"9610:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"9630:2:16","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9603:6:16"},"nodeType":"YulFunctionCall","src":"9603:30:16"},"nodeType":"YulExpressionStatement","src":"9603:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9653:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9664:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9649:3:16"},"nodeType":"YulFunctionCall","src":"9649:18:16"},{"hexValue":"4f726465722077617320726566756e646564","kind":"string","nodeType":"YulLiteral","src":"9669:20:16","type":"","value":"Order was refunded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9642:6:16"},"nodeType":"YulFunctionCall","src":"9642:48:16"},"nodeType":"YulExpressionStatement","src":"9642:48:16"},{"nodeType":"YulAssignment","src":"9699:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9711:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9722:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9707:3:16"},"nodeType":"YulFunctionCall","src":"9707:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9699:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_890a6771b112b68c8156f7e98f853dfb4045cf1cc9f5289e3c6a09bc0e92fbd6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9540:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9554:4:16","type":""}],"src":"9389:342:16"},{"body":{"nodeType":"YulBlock","src":"9910:163:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9927:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9938:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9920:6:16"},"nodeType":"YulFunctionCall","src":"9920:21:16"},"nodeType":"YulExpressionStatement","src":"9920:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9961:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9972:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9957:3:16"},"nodeType":"YulFunctionCall","src":"9957:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"9977:2:16","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9950:6:16"},"nodeType":"YulFunctionCall","src":"9950:30:16"},"nodeType":"YulExpressionStatement","src":"9950:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10000:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10011:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9996:3:16"},"nodeType":"YulFunctionCall","src":"9996:18:16"},{"hexValue":"4f726465722065787069726564","kind":"string","nodeType":"YulLiteral","src":"10016:15:16","type":"","value":"Order expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9989:6:16"},"nodeType":"YulFunctionCall","src":"9989:43:16"},"nodeType":"YulExpressionStatement","src":"9989:43:16"},{"nodeType":"YulAssignment","src":"10041:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10053:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10064:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10049:3:16"},"nodeType":"YulFunctionCall","src":"10049:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10041:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2f4bfb2dcf7e06902cf8f2c0c97f84cc4c3e789bd0a5ba2698f8afbe21430ae__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9887:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9901:4:16","type":""}],"src":"9736:337:16"},{"body":{"nodeType":"YulBlock","src":"10197:63:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10214:3:16"},{"name":"value0","nodeType":"YulIdentifier","src":"10219:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10207:6:16"},"nodeType":"YulFunctionCall","src":"10207:19:16"},"nodeType":"YulExpressionStatement","src":"10207:19:16"},{"nodeType":"YulAssignment","src":"10235:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10246:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"10251:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10242:3:16"},"nodeType":"YulFunctionCall","src":"10242:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10235:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10173:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10178:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10189:3:16","type":""}],"src":"10078:182:16"},{"body":{"nodeType":"YulBlock","src":"10439:164:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10456:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10467:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10449:6:16"},"nodeType":"YulFunctionCall","src":"10449:21:16"},"nodeType":"YulExpressionStatement","src":"10449:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10490:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10501:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10486:3:16"},"nodeType":"YulFunctionCall","src":"10486:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10506:2:16","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10479:6:16"},"nodeType":"YulFunctionCall","src":"10479:30:16"},"nodeType":"YulExpressionStatement","src":"10479:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10529:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10540:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10525:3:16"},"nodeType":"YulFunctionCall","src":"10525:18:16"},{"hexValue":"496e76616c696420736563726574","kind":"string","nodeType":"YulLiteral","src":"10545:16:16","type":"","value":"Invalid secret"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10518:6:16"},"nodeType":"YulFunctionCall","src":"10518:44:16"},"nodeType":"YulExpressionStatement","src":"10518:44:16"},{"nodeType":"YulAssignment","src":"10571:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10583:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10594:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10579:3:16"},"nodeType":"YulFunctionCall","src":"10579:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10571:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_22a9a99eda58e74c6eba1e99e395e307fd14f51f225afd0fed99c1a0493e28e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10416:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10430:4:16","type":""}],"src":"10265:338:16"},{"body":{"nodeType":"YulBlock","src":"10782:169:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10799:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10810:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10792:6:16"},"nodeType":"YulFunctionCall","src":"10792:21:16"},"nodeType":"YulExpressionStatement","src":"10792:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10833:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10844:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10829:3:16"},"nodeType":"YulFunctionCall","src":"10829:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10849:2:16","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10822:6:16"},"nodeType":"YulFunctionCall","src":"10822:30:16"},"nodeType":"YulExpressionStatement","src":"10822:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10872:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10883:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10868:3:16"},"nodeType":"YulFunctionCall","src":"10868:18:16"},{"hexValue":"53656372657420616c72656164792075736564","kind":"string","nodeType":"YulLiteral","src":"10888:21:16","type":"","value":"Secret already used"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10861:6:16"},"nodeType":"YulFunctionCall","src":"10861:49:16"},"nodeType":"YulExpressionStatement","src":"10861:49:16"},{"nodeType":"YulAssignment","src":"10919:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10931:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10942:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10927:3:16"},"nodeType":"YulFunctionCall","src":"10927:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10919:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_eaa3ec15dceb626e10a70b0d9e8ba2711073f6106230fded9f2d7cf060f5b71d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10759:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10773:4:16","type":""}],"src":"10608:343:16"},{"body":{"nodeType":"YulBlock","src":"11130:176:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11147:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11158:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11140:6:16"},"nodeType":"YulFunctionCall","src":"11140:21:16"},"nodeType":"YulExpressionStatement","src":"11140:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11181:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11192:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11177:3:16"},"nodeType":"YulFunctionCall","src":"11177:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11197:2:16","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11170:6:16"},"nodeType":"YulFunctionCall","src":"11170:30:16"},"nodeType":"YulExpressionStatement","src":"11170:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11220:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11231:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11216:3:16"},"nodeType":"YulFunctionCall","src":"11216:18:16"},{"hexValue":"496e73756666696369656e74206f757470757420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"11236:28:16","type":"","value":"Insufficient output amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11209:6:16"},"nodeType":"YulFunctionCall","src":"11209:56:16"},"nodeType":"YulExpressionStatement","src":"11209:56:16"},{"nodeType":"YulAssignment","src":"11274:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11286:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11297:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11282:3:16"},"nodeType":"YulFunctionCall","src":"11282:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11274:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11107:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11121:4:16","type":""}],"src":"10956:350:16"},{"body":{"nodeType":"YulBlock","src":"11392:170:16","statements":[{"body":{"nodeType":"YulBlock","src":"11438:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11447:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11450:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11440:6:16"},"nodeType":"YulFunctionCall","src":"11440:12:16"},"nodeType":"YulExpressionStatement","src":"11440:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11413:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"11422:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11409:3:16"},"nodeType":"YulFunctionCall","src":"11409:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"11434:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11405:3:16"},"nodeType":"YulFunctionCall","src":"11405:32:16"},"nodeType":"YulIf","src":"11402:52:16"},{"nodeType":"YulVariableDeclaration","src":"11463:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11482:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11476:5:16"},"nodeType":"YulFunctionCall","src":"11476:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11467:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11526:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"11501:24:16"},"nodeType":"YulFunctionCall","src":"11501:31:16"},"nodeType":"YulExpressionStatement","src":"11501:31:16"},{"nodeType":"YulAssignment","src":"11541:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"11551:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11541:6:16"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11358:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11369:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11381:6:16","type":""}],"src":"11311:251:16"},{"body":{"nodeType":"YulBlock","src":"11741:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11758:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11769:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11751:6:16"},"nodeType":"YulFunctionCall","src":"11751:21:16"},"nodeType":"YulExpressionStatement","src":"11751:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11792:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11803:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11788:3:16"},"nodeType":"YulFunctionCall","src":"11788:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11808:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11781:6:16"},"nodeType":"YulFunctionCall","src":"11781:30:16"},"nodeType":"YulExpressionStatement","src":"11781:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11831:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11842:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11827:3:16"},"nodeType":"YulFunctionCall","src":"11827:18:16"},{"hexValue":"4e6f7420776f726b65722077616c6c6574206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11847:25:16","type":"","value":"Not worker wallet owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11820:6:16"},"nodeType":"YulFunctionCall","src":"11820:53:16"},"nodeType":"YulExpressionStatement","src":"11820:53:16"},{"nodeType":"YulAssignment","src":"11882:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11894:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11905:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11890:3:16"},"nodeType":"YulFunctionCall","src":"11890:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11882:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_9235c93776d67cf588408e5134192cf89ff8ca3094db508a3dc1361854cb73d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11718:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11732:4:16","type":""}],"src":"11567:347:16"},{"body":{"nodeType":"YulBlock","src":"12093:174:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12110:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12121:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12103:6:16"},"nodeType":"YulFunctionCall","src":"12103:21:16"},"nodeType":"YulExpressionStatement","src":"12103:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12144:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12155:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12140:3:16"},"nodeType":"YulFunctionCall","src":"12140:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12160:2:16","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12133:6:16"},"nodeType":"YulFunctionCall","src":"12133:30:16"},"nodeType":"YulExpressionStatement","src":"12133:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12183:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12194:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12179:3:16"},"nodeType":"YulFunctionCall","src":"12179:18:16"},{"hexValue":"496e73756666696369656e74204554482062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12199:26:16","type":"","value":"Insufficient ETH balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12172:6:16"},"nodeType":"YulFunctionCall","src":"12172:54:16"},"nodeType":"YulExpressionStatement","src":"12172:54:16"},{"nodeType":"YulAssignment","src":"12235:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12247:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12258:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12243:3:16"},"nodeType":"YulFunctionCall","src":"12243:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12235:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12070:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12084:4:16","type":""}],"src":"11919:348:16"},{"body":{"nodeType":"YulBlock","src":"12463:14:16","statements":[{"nodeType":"YulAssignment","src":"12465:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"12472:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12465:3:16"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12447:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12455:3:16","type":""}],"src":"12272:205:16"},{"body":{"nodeType":"YulBlock","src":"12656:169:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12673:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12684:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12666:6:16"},"nodeType":"YulFunctionCall","src":"12666:21:16"},"nodeType":"YulExpressionStatement","src":"12666:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12707:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12718:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12703:3:16"},"nodeType":"YulFunctionCall","src":"12703:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12723:2:16","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12696:6:16"},"nodeType":"YulFunctionCall","src":"12696:30:16"},"nodeType":"YulExpressionStatement","src":"12696:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12746:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12757:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12742:3:16"},"nodeType":"YulFunctionCall","src":"12742:18:16"},{"hexValue":"455448207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"12762:21:16","type":"","value":"ETH transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12735:6:16"},"nodeType":"YulFunctionCall","src":"12735:49:16"},"nodeType":"YulExpressionStatement","src":"12735:49:16"},{"nodeType":"YulAssignment","src":"12793:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12805:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12816:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12801:3:16"},"nodeType":"YulFunctionCall","src":"12801:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12793:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12633:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12647:4:16","type":""}],"src":"12482:343:16"},{"body":{"nodeType":"YulBlock","src":"13004:171:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13021:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13032:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13014:6:16"},"nodeType":"YulFunctionCall","src":"13014:21:16"},"nodeType":"YulExpressionStatement","src":"13014:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13055:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13066:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13051:3:16"},"nodeType":"YulFunctionCall","src":"13051:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"13071:2:16","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13044:6:16"},"nodeType":"YulFunctionCall","src":"13044:30:16"},"nodeType":"YulExpressionStatement","src":"13044:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13094:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13105:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13090:3:16"},"nodeType":"YulFunctionCall","src":"13090:18:16"},{"hexValue":"496e73756666696369656e74204554482073656e74","kind":"string","nodeType":"YulLiteral","src":"13110:23:16","type":"","value":"Insufficient ETH sent"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13083:6:16"},"nodeType":"YulFunctionCall","src":"13083:51:16"},"nodeType":"YulExpressionStatement","src":"13083:51:16"},{"nodeType":"YulAssignment","src":"13143:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13155:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13166:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13151:3:16"},"nodeType":"YulFunctionCall","src":"13151:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13143:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12981:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12995:4:16","type":""}],"src":"12830:345:16"},{"body":{"nodeType":"YulBlock","src":"13229:176:16","statements":[{"nodeType":"YulAssignment","src":"13239:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13251:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"13254:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13247:3:16"},"nodeType":"YulFunctionCall","src":"13247:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"13239:4:16"}]},{"body":{"nodeType":"YulBlock","src":"13288:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13309:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13316:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13321:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13312:3:16"},"nodeType":"YulFunctionCall","src":"13312:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13302:6:16"},"nodeType":"YulFunctionCall","src":"13302:31:16"},"nodeType":"YulExpressionStatement","src":"13302:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13353:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13356:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13346:6:16"},"nodeType":"YulFunctionCall","src":"13346:15:16"},"nodeType":"YulExpressionStatement","src":"13346:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13381:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13384:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13374:6:16"},"nodeType":"YulFunctionCall","src":"13374:15:16"},"nodeType":"YulExpressionStatement","src":"13374:15:16"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"13271:4:16"},{"name":"x","nodeType":"YulIdentifier","src":"13277:1:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13268:2:16"},"nodeType":"YulFunctionCall","src":"13268:11:16"},"nodeType":"YulIf","src":"13265:134:16"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13211:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"13214:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"13220:4:16","type":""}],"src":"13180:225:16"},{"body":{"nodeType":"YulBlock","src":"13584:181:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13601:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13612:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13594:6:16"},"nodeType":"YulFunctionCall","src":"13594:21:16"},"nodeType":"YulExpressionStatement","src":"13594:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13635:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13646:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13631:3:16"},"nodeType":"YulFunctionCall","src":"13631:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"13651:2:16","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13624:6:16"},"nodeType":"YulFunctionCall","src":"13624:30:16"},"nodeType":"YulExpressionStatement","src":"13624:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13674:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13685:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13670:3:16"},"nodeType":"YulFunctionCall","src":"13670:18:16"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"13690:33:16","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13663:6:16"},"nodeType":"YulFunctionCall","src":"13663:61:16"},"nodeType":"YulExpressionStatement","src":"13663:61:16"},{"nodeType":"YulAssignment","src":"13733:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13745:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13756:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13741:3:16"},"nodeType":"YulFunctionCall","src":"13741:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13733:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13561:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13575:4:16","type":""}],"src":"13410:355:16"},{"body":{"nodeType":"YulBlock","src":"13899:145:16","statements":[{"nodeType":"YulAssignment","src":"13909:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13921:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13932:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13917:3:16"},"nodeType":"YulFunctionCall","src":"13917:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13909:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13951:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13966:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13982:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13987:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13978:3:16"},"nodeType":"YulFunctionCall","src":"13978:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"13991:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13974:3:16"},"nodeType":"YulFunctionCall","src":"13974:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13962:3:16"},"nodeType":"YulFunctionCall","src":"13962:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13944:6:16"},"nodeType":"YulFunctionCall","src":"13944:51:16"},"nodeType":"YulExpressionStatement","src":"13944:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14015:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14026:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14011:3:16"},"nodeType":"YulFunctionCall","src":"14011:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"14031:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14004:6:16"},"nodeType":"YulFunctionCall","src":"14004:34:16"},"nodeType":"YulExpressionStatement","src":"14004:34:16"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13860:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13871:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13879:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13890:4:16","type":""}],"src":"13770:274:16"},{"body":{"nodeType":"YulBlock","src":"14206:218:16","statements":[{"nodeType":"YulAssignment","src":"14216:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14228:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14239:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14224:3:16"},"nodeType":"YulFunctionCall","src":"14224:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14216:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"14251:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14269:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14274:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14265:3:16"},"nodeType":"YulFunctionCall","src":"14265:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"14278:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14261:3:16"},"nodeType":"YulFunctionCall","src":"14261:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14255:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14296:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14311:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"14319:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14307:3:16"},"nodeType":"YulFunctionCall","src":"14307:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14289:6:16"},"nodeType":"YulFunctionCall","src":"14289:34:16"},"nodeType":"YulExpressionStatement","src":"14289:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14343:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14354:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14339:3:16"},"nodeType":"YulFunctionCall","src":"14339:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14363:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"14371:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14359:3:16"},"nodeType":"YulFunctionCall","src":"14359:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14332:6:16"},"nodeType":"YulFunctionCall","src":"14332:43:16"},"nodeType":"YulExpressionStatement","src":"14332:43:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14395:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14406:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14391:3:16"},"nodeType":"YulFunctionCall","src":"14391:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"14411:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14384:6:16"},"nodeType":"YulFunctionCall","src":"14384:34:16"},"nodeType":"YulExpressionStatement","src":"14384:34:16"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14159:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14170:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14178:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14186:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14197:4:16","type":""}],"src":"14049:375:16"},{"body":{"nodeType":"YulBlock","src":"14507:199:16","statements":[{"body":{"nodeType":"YulBlock","src":"14553:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14562:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14565:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14555:6:16"},"nodeType":"YulFunctionCall","src":"14555:12:16"},"nodeType":"YulExpressionStatement","src":"14555:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14528:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"14537:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14524:3:16"},"nodeType":"YulFunctionCall","src":"14524:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"14549:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14520:3:16"},"nodeType":"YulFunctionCall","src":"14520:32:16"},"nodeType":"YulIf","src":"14517:52:16"},{"nodeType":"YulVariableDeclaration","src":"14578:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14597:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14591:5:16"},"nodeType":"YulFunctionCall","src":"14591:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14582:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"14660:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14669:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14672:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14662:6:16"},"nodeType":"YulFunctionCall","src":"14662:12:16"},"nodeType":"YulExpressionStatement","src":"14662:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14629:5:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14650:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14643:6:16"},"nodeType":"YulFunctionCall","src":"14643:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14636:6:16"},"nodeType":"YulFunctionCall","src":"14636:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14626:2:16"},"nodeType":"YulFunctionCall","src":"14626:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14619:6:16"},"nodeType":"YulFunctionCall","src":"14619:40:16"},"nodeType":"YulIf","src":"14616:60:16"},{"nodeType":"YulAssignment","src":"14685:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"14695:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14685:6:16"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14473:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14484:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14496:6:16","type":""}],"src":"14429:277:16"},{"body":{"nodeType":"YulBlock","src":"14885:232:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14902:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14913:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14895:6:16"},"nodeType":"YulFunctionCall","src":"14895:21:16"},"nodeType":"YulExpressionStatement","src":"14895:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14936:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14947:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14932:3:16"},"nodeType":"YulFunctionCall","src":"14932:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14952:2:16","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14925:6:16"},"nodeType":"YulFunctionCall","src":"14925:30:16"},"nodeType":"YulExpressionStatement","src":"14925:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14975:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14986:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14971:3:16"},"nodeType":"YulFunctionCall","src":"14971:18:16"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"14991:34:16","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14964:6:16"},"nodeType":"YulFunctionCall","src":"14964:62:16"},"nodeType":"YulExpressionStatement","src":"14964:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15046:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15057:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15042:3:16"},"nodeType":"YulFunctionCall","src":"15042:18:16"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"15062:12:16","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15035:6:16"},"nodeType":"YulFunctionCall","src":"15035:40:16"},"nodeType":"YulExpressionStatement","src":"15035:40:16"},{"nodeType":"YulAssignment","src":"15084:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15096:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15107:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15092:3:16"},"nodeType":"YulFunctionCall","src":"15092:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15084:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14862:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14876:4:16","type":""}],"src":"14711:406:16"},{"body":{"nodeType":"YulBlock","src":"15296:228:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15313:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15324:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15306:6:16"},"nodeType":"YulFunctionCall","src":"15306:21:16"},"nodeType":"YulExpressionStatement","src":"15306:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15347:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15358:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15343:3:16"},"nodeType":"YulFunctionCall","src":"15343:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"15363:2:16","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15336:6:16"},"nodeType":"YulFunctionCall","src":"15336:30:16"},"nodeType":"YulExpressionStatement","src":"15336:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15386:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15397:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15382:3:16"},"nodeType":"YulFunctionCall","src":"15382:18:16"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"15402:34:16","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15375:6:16"},"nodeType":"YulFunctionCall","src":"15375:62:16"},"nodeType":"YulExpressionStatement","src":"15375:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15457:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15468:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15453:3:16"},"nodeType":"YulFunctionCall","src":"15453:18:16"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"15473:8:16","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15446:6:16"},"nodeType":"YulFunctionCall","src":"15446:36:16"},"nodeType":"YulExpressionStatement","src":"15446:36:16"},{"nodeType":"YulAssignment","src":"15491:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15503:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15514:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15499:3:16"},"nodeType":"YulFunctionCall","src":"15499:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15491:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15273:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15287:4:16","type":""}],"src":"15122:402:16"},{"body":{"nodeType":"YulBlock","src":"15595:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15605:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15614:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15609:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15674:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15699:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"15704:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15695:3:16"},"nodeType":"YulFunctionCall","src":"15695:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15718:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"15723:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15714:3:16"},"nodeType":"YulFunctionCall","src":"15714:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15708:5:16"},"nodeType":"YulFunctionCall","src":"15708:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15688:6:16"},"nodeType":"YulFunctionCall","src":"15688:39:16"},"nodeType":"YulExpressionStatement","src":"15688:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15635:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"15638:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15632:2:16"},"nodeType":"YulFunctionCall","src":"15632:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15646:19:16","statements":[{"nodeType":"YulAssignment","src":"15648:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15657:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"15660:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15653:3:16"},"nodeType":"YulFunctionCall","src":"15653:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15648:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"15628:3:16","statements":[]},"src":"15624:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15757:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"15762:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15753:3:16"},"nodeType":"YulFunctionCall","src":"15753:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"15771:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15746:6:16"},"nodeType":"YulFunctionCall","src":"15746:27:16"},"nodeType":"YulExpressionStatement","src":"15746:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"15573:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"15578:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"15583:6:16","type":""}],"src":"15529:250:16"},{"body":{"nodeType":"YulBlock","src":"15921:150:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15931:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15951:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15945:5:16"},"nodeType":"YulFunctionCall","src":"15945:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15935:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16006:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16014:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16002:3:16"},"nodeType":"YulFunctionCall","src":"16002:17:16"},{"name":"pos","nodeType":"YulIdentifier","src":"16021:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"16026:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15967:34:16"},"nodeType":"YulFunctionCall","src":"15967:66:16"},"nodeType":"YulExpressionStatement","src":"15967:66:16"},{"nodeType":"YulAssignment","src":"16042:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16053:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"16058:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16049:3:16"},"nodeType":"YulFunctionCall","src":"16049:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16042:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15897:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15902:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15913:3:16","type":""}],"src":"15784:287:16"},{"body":{"nodeType":"YulBlock","src":"16250:179:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16267:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16278:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16260:6:16"},"nodeType":"YulFunctionCall","src":"16260:21:16"},"nodeType":"YulExpressionStatement","src":"16260:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16301:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16312:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16297:3:16"},"nodeType":"YulFunctionCall","src":"16297:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"16317:2:16","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16290:6:16"},"nodeType":"YulFunctionCall","src":"16290:30:16"},"nodeType":"YulExpressionStatement","src":"16290:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16340:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16351:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16336:3:16"},"nodeType":"YulFunctionCall","src":"16336:18:16"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"16356:31:16","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16329:6:16"},"nodeType":"YulFunctionCall","src":"16329:59:16"},"nodeType":"YulExpressionStatement","src":"16329:59:16"},{"nodeType":"YulAssignment","src":"16397:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16409:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16420:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16405:3:16"},"nodeType":"YulFunctionCall","src":"16405:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16397:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16227:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16241:4:16","type":""}],"src":"16076:353:16"},{"body":{"nodeType":"YulBlock","src":"16555:275:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16572:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16583:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16565:6:16"},"nodeType":"YulFunctionCall","src":"16565:21:16"},"nodeType":"YulExpressionStatement","src":"16565:21:16"},{"nodeType":"YulVariableDeclaration","src":"16595:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16615:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16609:5:16"},"nodeType":"YulFunctionCall","src":"16609:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16599:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16642:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16653:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16638:3:16"},"nodeType":"YulFunctionCall","src":"16638:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"16658:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16631:6:16"},"nodeType":"YulFunctionCall","src":"16631:34:16"},"nodeType":"YulExpressionStatement","src":"16631:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16713:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16721:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16709:3:16"},"nodeType":"YulFunctionCall","src":"16709:15:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16730:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16741:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16726:3:16"},"nodeType":"YulFunctionCall","src":"16726:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"16746:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16674:34:16"},"nodeType":"YulFunctionCall","src":"16674:79:16"},"nodeType":"YulExpressionStatement","src":"16674:79:16"},{"nodeType":"YulAssignment","src":"16762:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16778:9:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16797:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16805:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16793:3:16"},"nodeType":"YulFunctionCall","src":"16793:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16814:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16810:3:16"},"nodeType":"YulFunctionCall","src":"16810:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16789:3:16"},"nodeType":"YulFunctionCall","src":"16789:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16774:3:16"},"nodeType":"YulFunctionCall","src":"16774:45:16"},{"kind":"number","nodeType":"YulLiteral","src":"16821:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16770:3:16"},"nodeType":"YulFunctionCall","src":"16770:54:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16762:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16524:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16535:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16546:4:16","type":""}],"src":"16434:396:16"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_struct$_SwapOrder_$2436_memory_ptr__to_t_struct$_SwapOrder_$2436_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 320)\n        abi_encode_address(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_address(memberValue0, add(headStart, 0x20))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        let memberValue0_1 := mload(add(value0, 0x80))\n        abi_encode_address(memberValue0_1, add(headStart, 0x80))\n        let memberValue0_2 := mload(add(value0, 0xa0))\n        abi_encode_address(memberValue0_2, add(headStart, 0xa0))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _1 := 0x0100\n        let memberValue0_3 := mload(add(value0, _1))\n        abi_encode_bool(memberValue0_3, add(headStart, _1))\n        let _2 := 0x0120\n        let memberValue0_4 := mload(add(value0, _2))\n        abi_encode_bool(memberValue0_4, add(headStart, _2))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_address_t_address_t_uint256_t_bytes32_t_bool_t_bool__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 320)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n        mstore(add(headStart, 288), iszero(iszero(value9)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_467bdbb3bd00bc2b974fe03418b934135e785c054a8147de7ab7b4c07e7a6dfc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Order not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_21d0e51a66162b2ca841f28f41d6f36e099846dd8c40a3299df8f40aa9a52970__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Order already fulfilled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a7b6ae2f2794cbd8e44ccea3bdaaf3d23446cd249dfdd1666c7edc60238f9f0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Already refunded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Deadline not reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_101deeb84a7b30c3ba1b40b0f7f4c505ac09a1a50e6d9ef928905ad230187381__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Not order initiator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_08c77cb49204932981fc3b304c521ce64119bfd2a60ef913c832a1417c23d11f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"WorkerWallet already registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Zero amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_29a9499b24c7c1c30de658e39e1b3b85bfcb2ce57b413521c2a3cb2388c5d10e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid secret hash\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__to_t_address_t_uint256_t_uint256_t_address_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), and(shl(96, value3), _1))\n        mstore(add(pos, 104), and(shl(96, value4), _1))\n        mstore(add(pos, 124), value5)\n        end := add(pos, 156)\n    }\n    function abi_encode_tuple_t_stringliteral_c1d924f126c3222497ebba66a9b4321d9b6a8b8b39b3938bb6a4a6dbe0bdc4e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Order exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Incorrect ETH amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_890a6771b112b68c8156f7e98f853dfb4045cf1cc9f5289e3c6a09bc0e92fbd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Order was refunded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2f4bfb2dcf7e06902cf8f2c0c97f84cc4c3e789bd0a5ba2698f8afbe21430ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Order expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_t_stringliteral_22a9a99eda58e74c6eba1e99e395e307fd14f51f225afd0fed99c1a0493e28e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid secret\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eaa3ec15dceb626e10a70b0d9e8ba2711073f6106230fded9f2d7cf060f5b71d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Secret already used\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Insufficient output amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9235c93776d67cf588408e5134192cf89ff8ca3094db508a3dc1361854cb73d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Not worker wallet owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Insufficient ETH balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ETH transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Insufficient ETH sent\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1556":[{"length":32,"start":894}]},"linkReferences":{},"object":"60806040526004361061008a5760003560e01c80637535f2df116100595780637535f2df146102375780639c3f1e9014610258578063a4516c481461033c578063ad5c46481461036c578063f6dccf2e146103b857600080fd5b8063116a1d9a146100965780631f6d2eac146100b85780635778472a146100fd5780636808d5871461021757600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506100b66100b1366004611404565b6103cb565b005b3480156100c457600080fd5b506100e86100d3366004611432565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561010957600080fd5b5061020a610118366004611404565b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101919091525060009081526001602081815260409283902083516101408101855281546001600160a01b0390811682529382015484169281019290925260028101549382019390935260038301546060820152600483015482166080820152600583015490911660a0820152600682015460c0820152600782015460e082015260089091015460ff80821615156101008085019190915290910416151561012082015290565b6040516100f49190611456565b34801561022357600080fd5b506100b6610232366004611432565b610627565b61024a610245366004611508565b6106b4565b6040519081526020016100f4565b34801561026457600080fd5b506102db610273366004611404565b60016020819052600091825260409091208054918101546002820154600383015460048401546005850154600686015460078701546008909701546001600160a01b039889169896871697959694959385169490921692909160ff808216916101009004168a565b604080516001600160a01b039b8c168152998b1660208b015289019790975260608801959095529287166080870152951660a085015260c084019490945260e0830193909352911515610100820152901515610120820152610140016100f4565b34801561034857600080fd5b506100e8610357366004611404565b60026020526000908152604090205460ff1681565b34801561037857600080fd5b506103a07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100f4565b6100b66103c6366004611561565b610ad8565b6103d36110a5565b600081815260016020526040902080546001600160a01b031661042f5760405162461bcd60e51b815260206004820152600f60248201526e13dc99195c881b9bdd08199bdd5b99608a1b60448201526064015b60405180910390fd5b600881015460ff161561047e5760405162461bcd60e51b815260206004820152601760248201527613dc99195c88185b1c9958591e48199d5b199a5b1b1959604a1b6044820152606401610426565b6008810154610100900460ff16156104cb5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c99599d5b99195960821b6044820152606401610426565b806006015442116105155760405162461bcd60e51b8152602060048201526014602482015273111958591b1a5b99481b9bdd081c995858da195960621b6044820152606401610426565b80546001600160a01b031633146105645760405162461bcd60e51b81526020600482015260136024820152722737ba1037b93232b91034b734ba34b0ba37b960691b6044820152606401610426565b60088101805461ff00191661010017905560048101546001600160a01b03166105ca57805460028201546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156105c4573d6000803e3d6000fd5b506105ee565b8054600282015460048301546105ee926001600160a01b03918216929116906110fe565b60405182907fa60671d8537ed193e567f86ddf28cf35dc67073b5ad80a2d41359cfa78db0a1e90600090a2506106246001600055565b50565b6001600160a01b03811660009081526003602052604090205460ff16156106905760405162461bcd60e51b815260206004820152601f60248201527f576f726b657257616c6c657420616c72656164792072656769737465726564006044820152606401610426565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b60006106be6110a5565b600085116106fc5760405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b6044820152606401610426565b42831161073e5760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420646561646c696e6560801b6044820152606401610426565b816107815760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840e6cac6e4cae840d0c2e6d606b1b6044820152606401610426565b6040516bffffffffffffffffffffffff1933606090811b821660208401524260348401526054830188905289811b8216607484015288901b166088820152609c810183905260009060bc0160408051601f198184030181529181528151602092830120600081815260019093529120549091506001600160a01b0316156108395760405162461bcd60e51b815260206004820152600c60248201526b4f726465722065786973747360a01b6044820152606401610426565b6001600160a01b0388166108925785341461088d5760405162461bcd60e51b8152602060048201526014602482015273125b98dbdc9c9958dd0811551208185b5bdd5b9d60621b6044820152606401610426565b6108a7565b6108a76001600160a01b038916333089611161565b604051806101400160405280336001600160a01b0316815260200160006001600160a01b03168152602001878152602001868152602001896001600160a01b03168152602001886001600160a01b03168152602001858152602001848152602001600015158152602001600015158152506001600083815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003015560808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160050160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff0219169083151502179055506101208201518160080160016101000a81548160ff021916908315150217905550905050336001600160a01b0316817f958da44420b864737ad53ea0aa959279a3e21574047c9737df230d1f350577a08a8a8a8a89604051610aba9594939291906001600160a01b03958616815293909416602084015260408301919091526060820152608081019190915260a00190565b60405180910390a39050610ace6001600055565b9695505050505050565b610ae06110a5565b600083815260016020526040902080546001600160a01b0316610b375760405162461bcd60e51b815260206004820152600f60248201526e13dc99195c881b9bdd08199bdd5b99608a1b6044820152606401610426565b600881015460ff1615610b865760405162461bcd60e51b815260206004820152601760248201527613dc99195c88185b1c9958591e48199d5b199a5b1b1959604a1b6044820152606401610426565b6008810154610100900460ff1615610bd55760405162461bcd60e51b815260206004820152601260248201527113dc99195c881dd85cc81c99599d5b99195960721b6044820152606401610426565b8060060154421115610c195760405162461bcd60e51b815260206004820152600d60248201526c13dc99195c88195e1c1a5c9959609a1b6044820152606401610426565b60078101546040805160208101859052016040516020818303038152906040528051906020012014610c7e5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081cd958dc995d60921b6044820152606401610426565b60008281526002602052604090205460ff1615610cd35760405162461bcd60e51b815260206004820152601360248201527214d958dc995d08185b1c9958591e481d5cd959606a1b6044820152606401610426565b8060030154831015610d275760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74206f757470757420616d6f756e740000000000006044820152606401610426565b3360009081526003602052604090205460ff1615610e08576000339050326001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db0919061158d565b6001600160a01b031614610e065760405162461bcd60e51b815260206004820152601760248201527f4e6f7420776f726b65722077616c6c6574206f776e65720000000000000000006044820152606401610426565b505b60088101805460ff19908116600190811790925582820180546001600160a01b0319163317905560008481526002602052604090208054909116909117905560048101546001600160a01b0316610f44578060020154471015610ead5760405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e74204554482062616c616e636500000000000000006044820152606401610426565b600281015460405160009133918381818185875af1925050503d8060008114610ef2576040519150601f19603f3d011682016040523d82523d6000602084013e610ef7565b606091505b5050905080610f3e5760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610426565b50610f65565b60028101546004820154610f65916001600160a01b039091169033906110fe565b60058101546001600160a01b031661103e5782341015610fbf5760405162461bcd60e51b8152602060048201526015602482015274125b9cdd59999a58da595b9d08115512081cd95b9d605a1b6044820152606401610426565b82341115610fff57336108fc610fd585346115aa565b6040518115909202916000818181858888f19350505050158015610ffd573d6000803e3d6000fd5b505b80546040516001600160a01b039091169084156108fc029085906000818181858888f19350505050158015611038573d6000803e3d6000fd5b5061105e565b8054600582015461105e916001600160a01b039182169133911686611161565b604051828152339085907fc0dec645483244c37030b06224e60b121eadd7ee71a4ce18862c979d5584042b9060200160405180910390a3506110a06001600055565b505050565b6002600054036110f75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610426565b6002600055565b6040516001600160a01b0383166024820152604481018290526110a090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261119f565b6040516001600160a01b03808516602483015283166044820152606481018290526111999085906323b872dd60e01b9060840161112a565b50505050565b60006111f4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112749092919063ffffffff16565b905080516000148061121557508080602001905181019061121591906115d1565b6110a05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610426565b6060611283848460008561128b565b949350505050565b6060824710156112ec5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610426565b600080866001600160a01b031685876040516113089190611617565b60006040518083038185875af1925050503d8060008114611345576040519150601f19603f3d011682016040523d82523d6000602084013e61134a565b606091505b509150915061135b87838387611366565b979650505050505050565b606083156113d55782516000036113ce576001600160a01b0385163b6113ce5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610426565b5081611283565b61128383838151156113ea5781518083602001fd5b8060405162461bcd60e51b81526004016104269190611633565b60006020828403121561141657600080fd5b5035919050565b6001600160a01b038116811461062457600080fd5b60006020828403121561144457600080fd5b813561144f8161141d565b9392505050565b81516001600160a01b031681526101408101602083015161148260208401826001600160a01b03169052565b50604083015160408301526060830151606083015260808301516114b160808401826001600160a01b03169052565b5060a08301516114cc60a08401826001600160a01b03169052565b5060c083015160c083015260e083015160e0830152610100808401516114f58285018215159052565b5050610120928301511515919092015290565b60008060008060008060c0878903121561152157600080fd5b863561152c8161141d565b9550602087013561153c8161141d565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060006060848603121561157657600080fd5b505081359360208301359350604090920135919050565b60006020828403121561159f57600080fd5b815161144f8161141d565b818103818111156115cb57634e487b7160e01b600052601160045260246000fd5b92915050565b6000602082840312156115e357600080fd5b8151801515811461144f57600080fd5b60005b8381101561160e5781810151838201526020016115f6565b50506000910152565b600082516116298184602087016115f3565b9190910192915050565b60208152600082518060208401526116528160408501602087016115f3565b601f01601f1916919091016040019291505056fea264697066735822122016ef2023eb52aff2fa89ec129d71f4434664c74ad951c026249b280ba920bbaa64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7535F2DF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7535F2DF EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x9C3F1E90 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xA4516C48 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xF6DCCF2E EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x116A1D9A EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x1F6D2EAC EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5778472A EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x6808D587 EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x140 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE SWAP4 DUP3 ADD SLOAD DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD DUP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH2 0x100 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x1456 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x627 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND SWAP9 SWAP7 DUP8 AND SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 DUP6 AND SWAP5 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND DUP2 MSTORE SWAP10 DUP12 AND PUSH1 0x20 DUP12 ADD MSTORE DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x60 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP3 DUP8 AND PUSH1 0x80 DUP8 ADD MSTORE SWAP6 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xE0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD PUSH2 0xF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1561 JUMP JUMPDEST PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13DC99195C881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x13DC99195C88185B1C9958591E48199D5B199A5B1B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C99599D5B991959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP GT PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111958591B1A5B99481B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737BA1037B93232B91034B734BA34B0BA37B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5CA JUMPI DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x5EE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x5EE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0xA60671D8537ED193E567F86DDF28CF35DC67073B5AD80A2D41359CFA78DB0A1E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH2 0x624 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C657420616C7265616479207265676973746572656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BE PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST TIMESTAMP DUP4 GT PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP2 PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840E6CAC6E4CAE840D0C2E6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE TIMESTAMP PUSH1 0x34 DUP5 ADD MSTORE PUSH1 0x54 DUP4 ADD DUP9 SWAP1 MSTORE DUP10 DUP2 SHL DUP3 AND PUSH1 0x74 DUP5 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x88 DUP3 ADD MSTORE PUSH1 0x9C DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xBC ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4F7264657220657869737473 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x892 JUMPI DUP6 CALLVALUE EQ PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD0811551208185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x8A7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND CALLER ADDRESS DUP10 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x958DA44420B864737AD53EA0AA959279A3E21574047C9737DF230D1F350577A0 DUP11 DUP11 DUP11 DUP11 DUP10 PUSH1 0x40 MLOAD PUSH2 0xABA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP1 POP PUSH2 0xACE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAE0 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13DC99195C881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x13DC99195C88185B1C9958591E48199D5B199A5B1B1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13DC99195C881DD85CC81C99599D5B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xC19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DC99195C88195E1C1A5C9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081CD958DC995D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14D958DC995D08185B1C9958591E481D5CD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP4 LT ISZERO PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE08 JUMPI PUSH1 0x0 CALLER SWAP1 POP ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB0 SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420776F726B65722077616C6C6574206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST POP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE DUP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF44 JUMPI DUP1 PUSH1 0x2 ADD SLOAD SELFBALANCE LT ISZERO PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204554482062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 CALLER SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST POP PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0xF65 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x103E JUMPI DUP3 CALLVALUE LT ISZERO PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9CDD59999A58DA595B9D08115512081CD95B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST DUP3 CALLVALUE GT ISZERO PUSH2 0xFFF JUMPI CALLER PUSH2 0x8FC PUSH2 0xFD5 DUP6 CALLVALUE PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1038 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x105E JUMP JUMPDEST DUP1 SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x105E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 CALLER SWAP2 AND DUP7 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 DUP6 SWAP1 PUSH32 0xC0DEC645483244C37030B06224E60B121EADD7EE71A4CE18862C979D5584042B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x10A0 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x10F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x10A0 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1199 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x112A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1274 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x1215 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1215 SWAP2 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1283 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x128B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x426 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1308 SWAP2 SWAP1 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1345 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x134A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x135B DUP8 DUP4 DUP4 DUP8 PUSH2 0x1366 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13D5 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x13CE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x426 JUMP JUMPDEST POP DUP2 PUSH2 0x1283 JUMP JUMPDEST PUSH2 0x1283 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x13EA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x144F DUP2 PUSH2 0x141D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH2 0x140 DUP2 ADD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1482 PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x14B1 PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x14CC PUSH1 0xA0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD PUSH2 0x14F5 DUP3 DUP6 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH2 0x120 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x152C DUP2 PUSH2 0x141D JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x153C DUP2 PUSH2 0x141D JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x144F DUP2 PUSH2 0x141D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x15CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x144F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x160E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15F6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1629 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x15F3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1652 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xEF KECCAK256 0x23 0xEB MSTORE 0xAF CALLCODE STATICCALL DUP10 0xEC SLT SWAP14 PUSH18 0xF4434664C74AD951C026249B280BA920BBAA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"326:5195:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4660:738;;;;;;;;;;-1:-1:-1;4660:738:8;;;;;:::i;:::-;;:::i;:::-;;517:46;;;;;;;;;;-1:-1:-1;517:46:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;848:14:16;;841:22;823:41;;811:2;796:18;517:46:8;;;;;;;;5404:115;;;;;;;;;;-1:-1:-1;5404:115:8;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5497:15:8;;;;:6;:15;;;;;;;;;5490:22;;;;;;;;;-1:-1:-1;;;;;5490:22:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5404:115;;;;;;;;:::i;2291:205::-;;;;;;;;;;-1:-1:-1;2291:205:8;;;;;:::i;:::-;;:::i;709:1576::-;;;;;;:::i;:::-;;:::i;:::-;;;2938:25:16;;;2926:2;2911:18;709:1576:8;2792:177:16;419:43:8;;;;;;;;;;-1:-1:-1;419:43:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;419:43:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3417:15:16;;;3399:34;;3469:15;;;3464:2;3449:18;;3442:43;3501:18;;3494:34;;;;3559:2;3544:18;;3537:34;;;;3608:15;;;3602:3;3587:19;;3580:44;3661:15;;3379:3;3640:19;;3633:44;3708:3;3693:19;;3686:35;;;;3752:3;3737:19;;3730:35;;;;3809:14;;3802:22;3796:3;3781:19;;3774:51;3869:14;;3862:22;3856:3;3841:19;;3834:51;3348:3;3333:19;419:43:8;2974:917:16;468:43:8;;;;;;;;;;-1:-1:-1;468:43:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;574:29;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4060:32:16;;;4042:51;;4030:2;4015:18;574:29:8;3896:203:16;2502:2152:8;;;;;;:::i;:::-;;:::i;4660:738::-;2261:21:0;:19;:21::i;:::-;4730:23:8::1;4756:15:::0;;;:6:::1;:15;::::0;;;;4789;;-1:-1:-1;;;;;4789:15:8::1;4781:57;;;::::0;-1:-1:-1;;;4781:57:8;;4627:2:16;4781:57:8::1;::::0;::::1;4609:21:16::0;4666:2;4646:18;;;4639:30;-1:-1:-1;;;4685:18:16;;;4678:45;4740:18;;4781:57:8::1;;;;;;;;;4857:17;::::0;::::1;::::0;::::1;;4856:18;4848:54;;;::::0;-1:-1:-1;;;4848:54:8;;4971:2:16;4848:54:8::1;::::0;::::1;4953:21:16::0;5010:2;4990:18;;;4983:30;-1:-1:-1;;;5029:18:16;;;5022:53;5092:18;;4848:54:8::1;4769:347:16::0;4848:54:8::1;4921:16;::::0;::::1;::::0;::::1;::::0;::::1;;;4920:17;4912:46;;;::::0;-1:-1:-1;;;4912:46:8;;5323:2:16;4912:46:8::1;::::0;::::1;5305:21:16::0;5362:2;5342:18;;;5335:30;-1:-1:-1;;;5381:18:16;;;5374:46;5437:18;;4912:46:8::1;5121:340:16::0;4912:46:8::1;4994:5;:14;;;4976:15;:32;4968:65;;;::::0;-1:-1:-1;;;4968:65:8;;5668:2:16;4968:65:8::1;::::0;::::1;5650:21:16::0;5707:2;5687:18;;;5680:30;-1:-1:-1;;;5726:18:16;;;5719:50;5786:18;;4968:65:8::1;5466:344:16::0;4968:65:8::1;5065:15:::0;;-1:-1:-1;;;;;5065:15:8::1;5051:10;:29;5043:61;;;::::0;-1:-1:-1;;;5043:61:8;;6017:2:16;5043:61:8::1;::::0;::::1;5999:21:16::0;6056:2;6036:18;;;6029:30;-1:-1:-1;;;6075:18:16;;;6068:49;6134:18;;5043:61:8::1;5815:343:16::0;5043:61:8::1;5115:16;::::0;::::1;:23:::0;;-1:-1:-1;;5115:23:8::1;;;::::0;;5153:13:::1;::::0;::::1;::::0;-1:-1:-1;;;;;5153:13:8::1;5149:205;;5204:15:::0;;5230:14:::1;::::0;::::1;::::0;5196:49:::1;::::0;-1:-1:-1;;;;;5204:15:8;;::::1;::::0;5196:49;::::1;;;::::0;5230:14;5204:15:::1;5196:49:::0;5204:15;5196:49;5230:14;5204:15;5196:49;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5149:205;;;5311:15:::0;;5328:14:::1;::::0;::::1;::::0;5283:13:::1;::::0;::::1;::::0;5276:67:::1;::::0;-1:-1:-1;;;;;5283:13:8;;::::1;::::0;5311:15;::::1;::::0;5276:34:::1;:67::i;:::-;5369:22;::::0;5383:7;;5369:22:::1;::::0;;;::::1;4720:678;2303:20:0::0;1716:1;2809:7;:22;2629:209;2303:20;4660:738:8;:::o;2291:205::-;-1:-1:-1;;;;;2380:28:8;;;;;;:14;:28;;;;;;;;2379:29;2371:73;;;;-1:-1:-1;;;2371:73:8;;6365:2:16;2371:73:8;;;6347:21:16;6404:2;6384:18;;;6377:30;6443:33;6423:18;;;6416:61;6494:18;;2371:73:8;6163:355:16;2371:73:8;-1:-1:-1;;;;;2454:28:8;;;;;:14;:28;;;;;:35;;-1:-1:-1;;2454:35:8;2485:4;2454:35;;;2291:205::o;709:1576::-;936:7;2261:21:0;:19;:21::i;:::-;974:1:8::1;963:8;:12;955:36;;;::::0;-1:-1:-1;;;955:36:8;;6725:2:16;955:36:8::1;::::0;::::1;6707:21:16::0;6764:2;6744:18;;;6737:30;-1:-1:-1;;;6783:18:16;;;6776:41;6834:18;;955:36:8::1;6523:335:16::0;955:36:8::1;1020:15;1009:8;:26;1001:55;;;::::0;-1:-1:-1;;;1001:55:8;;7065:2:16;1001:55:8::1;::::0;::::1;7047:21:16::0;7104:2;7084:18;;;7077:30;-1:-1:-1;;;7123:18:16;;;7116:46;7179:18;;1001:55:8::1;6863:340:16::0;1001:55:8::1;1074:10:::0;1066:56:::1;;;::::0;-1:-1:-1;;;1066:56:8;;7410:2:16;1066:56:8::1;::::0;::::1;7392:21:16::0;7449:2;7429:18;;;7422:30;-1:-1:-1;;;7468:18:16;;;7461:49;7527:18;;1066:56:8::1;7208:343:16::0;1066:56:8::1;1174:196;::::0;-1:-1:-1;;1208:10:8::1;7895:2:16::0;7891:15;;;7887:24;;1174:196:8::1;::::0;::::1;7875:37:16::0;1236:15:8::1;7928:12:16::0;;;7921:28;7965:12;;;7958:28;;;8020:15;;;8016:24;;8002:12;;;7995:46;8076:15;;;8072:24;8057:13;;;8050:47;8113:13;;;8106:29;;;1133:15:8::1;::::0;8151:13:16;;1174:196:8::1;::::0;;-1:-1:-1;;1174:196:8;;::::1;::::0;;;;;;1151:229;;1174:196:::1;1151:229:::0;;::::1;::::0;1436:1:::1;1399:15:::0;;;:6:::1;:15:::0;;;;;:25;1151:229;;-1:-1:-1;;;;;;1399:25:8::1;:39:::0;1391:64:::1;;;::::0;-1:-1:-1;;;1391:64:8;;8377:2:16;1391:64:8::1;::::0;::::1;8359:21:16::0;8416:2;8396:18;;;8389:30;-1:-1:-1;;;8435:18:16;;;8428:42;8487:18;;1391:64:8::1;8175:336:16::0;1391:64:8::1;-1:-1:-1::0;;;;;1470:21:8;::::1;1466:206;;1528:8;1515:9;:21;1507:54;;;::::0;-1:-1:-1;;;1507:54:8;;8718:2:16;1507:54:8::1;::::0;::::1;8700:21:16::0;8757:2;8737:18;;;8730:30;-1:-1:-1;;;8776:18:16;;;8769:50;8836:18;;1507:54:8::1;8516:344:16::0;1507:54:8::1;1466:206;;;1592:69;-1:-1:-1::0;;;;;1592:32:8;::::1;1625:10;1645:4;1652:8:::0;1592:32:::1;:69::i;:::-;1700:355;;;;;;;;1735:10;-1:-1:-1::0;;;;;1700:355:8::1;;;;;1777:1;-1:-1:-1::0;;;;;1700:355:8::1;;;;;1803:8;1700:355;;;;1839:12;1700:355;;;;1874:7;-1:-1:-1::0;;;;;1700:355:8::1;;;;;1905:8;-1:-1:-1::0;;;;;1700:355:8::1;;;;;1937:8;1700:355;;;;1971:10;1700:355;;;;2008:5;1700:355;;;;;;2039:5;1700:355;;;;::::0;1682:6:::1;:15;1689:7;1682:15;;;;;;;;;;;:373;;;;;;;;;;;;;-1:-1:-1::0;;;;;1682:373:8::1;;;;;-1:-1:-1::0;;;;;1682:373:8::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1682:373:8::1;;;;;-1:-1:-1::0;;;;;1682:373:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1682:373:8::1;;;;;-1:-1:-1::0;;;;;1682:373:8::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1682:373:8::1;;;;;-1:-1:-1::0;;;;;1682:373:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:10;-1:-1:-1::0;;;;;2071:182:8::1;2097:7;2071:182;2142:7;2163:8;2185;2207:12;2233:10;2071:182;;;;;;;;;-1:-1:-1::0;;;;;9180:15:16;;;9162:34;;9232:15;;;;9227:2;9212:18;;9205:43;9279:2;9264:18;;9257:34;;;;9322:2;9307:18;;9300:34;9365:3;9350:19;;9343:35;;;;9111:3;9096:19;;8865:519;2071:182:8::1;;;;;;;;2271:7:::0;-1:-1:-1;2303:20:0;1716:1;2809:7;:22;2629:209;2303:20;709:1576:8;;;;;;;;:::o;2502:2152::-;2261:21:0;:19;:21::i;:::-;2646:23:8::1;2672:15:::0;;;:6:::1;:15;::::0;;;;2705;;-1:-1:-1;;;;;2705:15:8::1;2697:57;;;::::0;-1:-1:-1;;;2697:57:8;;4627:2:16;2697:57:8::1;::::0;::::1;4609:21:16::0;4666:2;4646:18;;;4639:30;-1:-1:-1;;;4685:18:16;;;4678:45;4740:18;;2697:57:8::1;4425:339:16::0;2697:57:8::1;2773:17;::::0;::::1;::::0;::::1;;2772:18;2764:54;;;::::0;-1:-1:-1;;;2764:54:8;;4971:2:16;2764:54:8::1;::::0;::::1;4953:21:16::0;5010:2;4990:18;;;4983:30;-1:-1:-1;;;5029:18:16;;;5022:53;5092:18;;2764:54:8::1;4769:347:16::0;2764:54:8::1;2837:16;::::0;::::1;::::0;::::1;::::0;::::1;;;2836:17;2828:48;;;::::0;-1:-1:-1;;;2828:48:8;;9591:2:16;2828:48:8::1;::::0;::::1;9573:21:16::0;9630:2;9610:18;;;9603:30;-1:-1:-1;;;9649:18:16;;;9642:48;9707:18;;2828:48:8::1;9389:342:16::0;2828:48:8::1;2913:5;:14;;;2894:15;:33;;2886:59;;;::::0;-1:-1:-1;;;2886:59:8;;9938:2:16;2886:59:8::1;::::0;::::1;9920:21:16::0;9977:2;9957:18;;;9950:30;-1:-1:-1;;;9996:18:16;;;9989:43;10049:18;;2886:59:8::1;9736:337:16::0;2886:59:8::1;3002:16;::::0;::::1;::::0;2973:24:::1;::::0;;::::1;::::0;::::1;10207:19:16::0;;;10242:12;2973:24:8::1;;;;;;;;;;;;2963:35;;;;;;:55;2955:82;;;::::0;-1:-1:-1;;;2955:82:8;;10467:2:16;2955:82:8::1;::::0;::::1;10449:21:16::0;10506:2;10486:18;;;10479:30;-1:-1:-1;;;10525:18:16;;;10518:44;10579:18;;2955:82:8::1;10265:338:16::0;2955:82:8::1;3056:19;::::0;;;:11:::1;:19;::::0;;;;;::::1;;3055:20;3047:52;;;::::0;-1:-1:-1;;;3047:52:8;;10810:2:16;3047:52:8::1;::::0;::::1;10792:21:16::0;10849:2;10829:18;;;10822:30;-1:-1:-1;;;10868:18:16;;;10861:49;10927:18;;3047:52:8::1;10608:343:16::0;3047:52:8::1;3130:5;:18;;;3117:9;:31;;3109:70;;;::::0;-1:-1:-1;;;3109:70:8;;11158:2:16;3109:70:8::1;::::0;::::1;11140:21:16::0;11197:2;11177:18;;;11170:30;11236:28;11216:18;;;11209:56;11282:18;;3109:70:8::1;10956:350:16::0;3109:70:8::1;3294:10;3279:26;::::0;;;:14:::1;:26;::::0;;;;;::::1;;3275:194;;;3321:26;3364:10;3321:54;;3421:9;-1:-1:-1::0;;;;;3397:33:8::1;:12;-1:-1:-1::0;;;;;3397:18:8::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3397:33:8::1;;3389:69;;;::::0;-1:-1:-1;;;3389:69:8;;11769:2:16;3389:69:8::1;::::0;::::1;11751:21:16::0;11808:2;11788:18;;;11781:30;11847:25;11827:18;;;11820:53;11890:18;;3389:69:8::1;11567:347:16::0;3389:69:8::1;3307:162;3275:194;3479:17;::::0;::::1;:24:::0;;-1:-1:-1;;3479:24:8;;::::1;3499:4;3479:24:::0;;::::1;::::0;;;3513:14;;::::1;:27:::0;;-1:-1:-1;;;;;;3513:27:8::1;3530:10;3513:27;::::0;;3479:17:::1;3550:19:::0;;;:11:::1;:19;::::0;;;;:26;;;;::::1;::::0;;::::1;::::0;;3630:13:::1;::::0;::::1;::::0;-1:-1:-1;;;;;3630:13:8::1;3626:423;;3774:5;:14;;;3749:21;:39;;3741:76;;;::::0;-1:-1:-1;;;3741:76:8;;12121:2:16;3741:76:8::1;::::0;::::1;12103:21:16::0;12160:2;12140:18;;;12133:30;12199:26;12179:18;;;12172:54;12243:18;;3741:76:8::1;11919:348:16::0;3741:76:8::1;3873:14;::::0;::::1;::::0;3850:42:::1;::::0;3832:12:::1;::::0;3850:10:::1;::::0;3832:12;3850:42;3832:12;3850:42;3873:14;3850:10;:42:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3831:61;;;3914:7;3906:39;;;::::0;-1:-1:-1;;;3906:39:8;;12684:2:16;3906:39:8::1;::::0;::::1;12666:21:16::0;12723:2;12703:18;;;12696:30;-1:-1:-1;;;12742:18:16;;;12735:49;12801:18;;3906:39:8::1;12482:343:16::0;3906:39:8::1;3659:297;3626:423;;;4023:14;::::0;::::1;::::0;3983:13:::1;::::0;::::1;::::0;3976:62:::1;::::0;-1:-1:-1;;;;;3983:13:8;;::::1;::::0;4011:10:::1;::::0;3976:34:::1;:62::i;:::-;4124:14;::::0;::::1;::::0;-1:-1:-1;;;;;4124:14:8::1;4120:469;;4189:9;4176;:22;;4168:56;;;::::0;-1:-1:-1;;;4168:56:8;;13032:2:16;4168:56:8::1;::::0;::::1;13014:21:16::0;13071:2;13051:18;;;13044:30;-1:-1:-1;;;13090:18:16;;;13083:51;13151:18;;4168:56:8::1;12830:345:16::0;4168:56:8::1;4254:9;4242;:21;4238:111;;;4291:10;4283:51;4312:21;4324:9:::0;4312::::1;:21;:::i;:::-;4283:51;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;4238:111;4370:15:::0;;4362:44:::1;::::0;-1:-1:-1;;;;;4370:15:8;;::::1;::::0;4362:44;::::1;;;::::0;4396:9;;4370:15:::1;4362:44:::0;4370:15;4362:44;4396:9;4370:15;4362:44;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;4120:469;;;4522:15:::0;;4444:14:::1;::::0;::::1;::::0;4437:141:::1;::::0;-1:-1:-1;;;;;4444:14:8;;::::1;::::0;4494:10:::1;::::0;4522:15:::1;4555:9:::0;4437:39:::1;:141::i;:::-;4604:43;::::0;2938:25:16;;;4628:10:8::1;::::0;4619:7;;4604:43:::1;::::0;2926:2:16;2911:18;4604:43:8::1;;;;;;;2636:2018;2303:20:0::0;1716:1;2809:7;:22;2629:209;2303:20;2502:2152:8;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:0;;13612:2:16;2460:63:0;;;13594:21:16;13651:2;13631:18;;;13624:30;13690:33;13670:18;;;13663:61;13741:18;;2460:63:0;13410:355:16;2460:63:0;1759:1;2598:7;:18;2336:287::o;941:175:5:-;1050:58;;-1:-1:-1;;;;;13962:32:16;;1050:58:5;;;13944:51:16;14011:18;;;14004:34;;;1023:86:5;;1043:5;;-1:-1:-1;;;1073:23:5;13917:18:16;;1050:58:5;;;;-1:-1:-1;;1050:58:5;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:5;-1:-1:-1;;;;;;1050:58:5;;;;;;;;;;1023:19;:86::i;1355:203::-;1482:68;;-1:-1:-1;;;;;14307:15:16;;;1482:68:5;;;14289:34:16;14359:15;;14339:18;;;14332:43;14391:18;;;14384:34;;;1455:96:5;;1475:5;;-1:-1:-1;;;1505:27:5;14224:18:16;;1482:68:5;14049:375:16;1455:96:5;1355:203;;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:5;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:5;;14913:2:16;5720:111:5;;;14895:21:16;14952:2;14932:18;;;14925:30;14991:34;14971:18;;;14964:62;-1:-1:-1;;;15042:18:16;;;15035:40;15092:19;;5720:111:5;14711:406:16;4108:223:6;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:6:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:6;;15324:2:16;5354:81:6;;;15306:21:16;15363:2;15343:18;;;15336:30;15402:34;15382:18;;;15375:62;-1:-1:-1;;;15453:18:16;;;15446:36;15499:19;;5354:81:6;15122:402:16;5354:81:6;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:6;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:6:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:6;;;8113:60;;;;-1:-1:-1;;;8113:60:6;;16278:2:16;8113:60:6;;;16260:21:16;16317:2;16297:18;;;16290:30;16356:31;16336:18;;;16329:59;16405:18;;8113:60:6;16076:353:16;8113:60:6;-1:-1:-1;8208:10:6;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:6;;;;;;;;:::i;14:180:16:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:16;;14:180;-1:-1:-1;14:180:16:o;199:131::-;-1:-1:-1;;;;;274:31:16;;264:42;;254:70;;320:1;317;310:12;335:247;394:6;447:2;435:9;426:7;422:23;418:32;415:52;;;463:1;460;453:12;415:52;502:9;489:23;521:31;546:5;521:31;:::i;:::-;571:5;335:247;-1:-1:-1;;;335:247:16:o;984:1135::-;1204:13;;-1:-1:-1;;;;;941:31:16;929:44;;1172:3;1157:19;;1276:4;1268:6;1264:17;1258:24;1291:54;1339:4;1328:9;1324:20;1310:12;-1:-1:-1;;;;;941:31:16;929:44;;875:104;1291:54;;1401:4;1393:6;1389:17;1383:24;1376:4;1365:9;1361:20;1354:54;1464:4;1456:6;1452:17;1446:24;1439:4;1428:9;1424:20;1417:54;1520:4;1512:6;1508:17;1502:24;1535:56;1585:4;1574:9;1570:20;1554:14;-1:-1:-1;;;;;941:31:16;929:44;;875:104;1535:56;;1640:4;1632:6;1628:17;1622:24;1655:56;1705:4;1694:9;1690:20;1674:14;-1:-1:-1;;;;;941:31:16;929:44;;875:104;1655:56;;1767:4;1759:6;1755:17;1749:24;1742:4;1731:9;1727:20;1720:54;1830:4;1822:6;1818:17;1812:24;1805:4;1794:9;1790:20;1783:54;1856:6;1911:2;1903:6;1899:15;1893:22;1924:51;1971:2;1960:9;1956:18;1940:14;657:13;650:21;638:34;;587:91;1924:51;-1:-1:-1;;1994:6:16;2037:15;;;2031:22;657:13;650:21;2094:18;;;;638:34;984:1135;:::o;2124:663::-;2228:6;2236;2244;2252;2260;2268;2321:3;2309:9;2300:7;2296:23;2292:33;2289:53;;;2338:1;2335;2328:12;2289:53;2377:9;2364:23;2396:31;2421:5;2396:31;:::i;:::-;2446:5;-1:-1:-1;2503:2:16;2488:18;;2475:32;2516:33;2475:32;2516:33;:::i;:::-;2124:663;;2568:7;;-1:-1:-1;;;;2622:2:16;2607:18;;2594:32;;2673:2;2658:18;;2645:32;;2724:3;2709:19;;2696:33;;-1:-1:-1;2776:3:16;2761:19;;;2748:33;;-1:-1:-1;2124:663:16:o;4104:316::-;4181:6;4189;4197;4250:2;4238:9;4229:7;4225:23;4221:32;4218:52;;;4266:1;4263;4256:12;4218:52;-1:-1:-1;;4289:23:16;;;4359:2;4344:18;;4331:32;;-1:-1:-1;4410:2:16;4395:18;;;4382:32;;4104:316;-1:-1:-1;4104:316:16:o;11311:251::-;11381:6;11434:2;11422:9;11413:7;11409:23;11405:32;11402:52;;;11450:1;11447;11440:12;11402:52;11482:9;11476:16;11501:31;11526:5;11501:31;:::i;13180:225::-;13247:9;;;13268:11;;;13265:134;;;13321:10;13316:3;13312:20;13309:1;13302:31;13356:4;13353:1;13346:15;13384:4;13381:1;13374:15;13265:134;13180:225;;;;:::o;14429:277::-;14496:6;14549:2;14537:9;14528:7;14524:23;14520:32;14517:52;;;14565:1;14562;14555:12;14517:52;14597:9;14591:16;14650:5;14643:13;14636:21;14629:5;14626:32;14616:60;;14672:1;14669;14662:12;15529:250;15614:1;15624:113;15638:6;15635:1;15632:13;15624:113;;;15714:11;;;15708:18;15695:11;;;15688:39;15660:2;15653:10;15624:113;;;-1:-1:-1;;15771:1:16;15753:16;;15746:27;15529:250::o;15784:287::-;15913:3;15951:6;15945:13;15967:66;16026:6;16021:3;16014:4;16006:6;16002:17;15967:66;:::i;:::-;16049:16;;;;;15784:287;-1:-1:-1;;15784:287:16:o;16434:396::-;16583:2;16572:9;16565:21;16546:4;16615:6;16609:13;16658:6;16653:2;16642:9;16638:18;16631:34;16674:79;16746:6;16741:2;16730:9;16726:18;16721:2;16713:6;16709:15;16674:79;:::i;:::-;16814:2;16793:15;-1:-1:-1;;16789:29:16;16774:45;;;;16821:2;16770:54;;16434:396;-1:-1:-1;;16434:396:16:o"},"gasEstimates":{"creation":{"codeDepositCost":"1157600","executionCost":"infinite","totalCost":"infinite"},"external":{"WETH()":"infinite","createOrder(address,address,uint256,uint256,uint256,bytes32)":"infinite","fulfillOrder(bytes32,uint256,bytes32)":"infinite","getOrder(bytes32)":"20331","isWorkerWallet(address)":"2537","orders(bytes32)":"19691","refundOrder(bytes32)":"infinite","registerWorkerWallet(address)":"26884","usedSecrets(bytes32)":"2483"}},"methodIdentifiers":{"WETH()":"ad5c4648","createOrder(address,address,uint256,uint256,uint256,bytes32)":"7535f2df","fulfillOrder(bytes32,uint256,bytes32)":"f6dccf2e","getOrder(bytes32)":"5778472a","isWorkerWallet(address)":"1f6d2eac","orders(bytes32)":"9c3f1e90","refundOrder(bytes32)":"116a1d9a","registerWorkerWallet(address)":"6808d587","usedSecrets(bytes32)":"a4516c48"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"OrderFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"OrderRefunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"fulfillOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"}],\"internalType\":\"struct ISwapManager.SwapOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWorkerWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"refundOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"workerWallet\",\"type\":\"address\"}],\"name\":\"registerWorkerWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedSecrets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"registerWorkerWallet(address)\":{\"params\":{\"workerWallet\":\"The address of the worker wallet to register\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"registerWorkerWallet(address)\":{\"notice\":\"Register a worker wallet that can be used to fulfill orders\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapManager.sol\":\"SwapManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/SwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./interfaces/ISwapManager.sol\\\";\\nimport \\\"./interfaces/IWorkerWallet.sol\\\";\\n\\ncontract SwapManager is ISwapManager, ReentrancyGuard {\\n    using SafeERC20 for IERC20;\\n\\n    mapping(bytes32 => SwapOrder) public orders;\\n    mapping(bytes32 => bool) public usedSecrets;\\n    mapping(address => bool) public isWorkerWallet;\\n    \\n    address public immutable WETH;\\n    \\n    constructor(address weth) {\\n        WETH = weth;\\n    }\\n\\n    receive() external payable {}\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable nonReentrant returns (bytes32) {\\n        require(amountIn > 0, \\\"Zero amount\\\");\\n        require(deadline > block.timestamp, \\\"Invalid deadline\\\");\\n        require(secretHash != bytes32(0), \\\"Invalid secret hash\\\");\\n\\n        bytes32 orderId = keccak256(\\n            abi.encodePacked(\\n                msg.sender,\\n                block.timestamp,\\n                amountIn,\\n                tokenIn,\\n                tokenOut,\\n                secretHash\\n            )\\n        );\\n\\n        require(orders[orderId].initiator == address(0), \\\"Order exists\\\");\\n\\n        if (tokenIn == address(0)) {\\n            require(msg.value == amountIn, \\\"Incorrect ETH amount\\\");\\n        } else {\\n            IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn);\\n        }\\n\\n        orders[orderId] = SwapOrder({\\n            initiator: msg.sender,\\n            resolver: address(0),\\n            amountIn: amountIn,\\n            amountOutMin: amountOutMin,\\n            tokenIn: tokenIn,\\n            tokenOut: tokenOut,\\n            deadline: deadline,\\n            secretHash: secretHash,\\n            isFulfilled: false,\\n            isRefunded: false\\n        });\\n\\n        emit OrderCreated(\\n            orderId,\\n            msg.sender,\\n            tokenIn,\\n            tokenOut,\\n            amountIn,\\n            amountOutMin,\\n            secretHash\\n        );\\n\\n        return orderId;\\n    }\\n\\n    function registerWorkerWallet(address workerWallet) external override {\\n        require(!isWorkerWallet[workerWallet], \\\"WorkerWallet already registered\\\");\\n        isWorkerWallet[workerWallet] = true;\\n    }\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable nonReentrant {\\n        SwapOrder storage order = orders[orderId];\\n        require(order.initiator != address(0), \\\"Order not found\\\");\\n        require(!order.isFulfilled, \\\"Order already fulfilled\\\");\\n        require(!order.isRefunded, \\\"Order was refunded\\\");\\n        require(block.timestamp <= order.deadline, \\\"Order expired\\\");\\n        require(keccak256(abi.encodePacked(secret)) == order.secretHash, \\\"Invalid secret\\\");\\n        require(!usedSecrets[secret], \\\"Secret already used\\\");\\n        require(amountOut >= order.amountOutMin, \\\"Insufficient output amount\\\");\\n        \\n        // If called by a worker wallet, verify it's the owner of the wallet\\n        if (isWorkerWallet[msg.sender]) {\\n            IWorkerWallet workerWallet = IWorkerWallet(msg.sender);\\n            require(workerWallet.owner() == tx.origin, \\\"Not worker wallet owner\\\");\\n        }\\n\\n        order.isFulfilled = true;\\n        order.resolver = msg.sender;\\n        usedSecrets[secret] = true;\\n\\n        // Transfer tokens to resolver\\n        if (order.tokenIn == address(0)) {\\n            // For native ETH, the amount should be in the contract\\n            require(address(this).balance >= order.amountIn, \\\"Insufficient ETH balance\\\");\\n            (bool success, ) = msg.sender.call{value: order.amountIn}(\\\"\\\");\\n            require(success, \\\"ETH transfer failed\\\");\\n        } else {\\n            IERC20(order.tokenIn).safeTransfer(msg.sender, order.amountIn);\\n        }\\n\\n        // Transfer output tokens from resolver to initiator\\n        if (order.tokenOut == address(0)) {\\n            require(msg.value >= amountOut, \\\"Insufficient ETH sent\\\");\\n            if (msg.value > amountOut) {\\n                payable(msg.sender).transfer(msg.value - amountOut);\\n            }\\n            payable(order.initiator).transfer(amountOut);\\n        } else {\\n            IERC20(order.tokenOut).safeTransferFrom(\\n                msg.sender,\\n                order.initiator,\\n                amountOut\\n            );\\n        }\\n\\n        emit OrderFulfilled(orderId, msg.sender, secret);\\n    }\\n\\n    function refundOrder(bytes32 orderId) external nonReentrant {\\n        SwapOrder storage order = orders[orderId];\\n        require(order.initiator != address(0), \\\"Order not found\\\");\\n        require(!order.isFulfilled, \\\"Order already fulfilled\\\");\\n        require(!order.isRefunded, \\\"Already refunded\\\");\\n        require(block.timestamp > order.deadline, \\\"Deadline not reached\\\");\\n        require(msg.sender == order.initiator, \\\"Not order initiator\\\");\\n\\n        order.isRefunded = true;\\n\\n        if (order.tokenIn == address(0)) {\\n            payable(order.initiator).transfer(order.amountIn);\\n        } else {\\n            IERC20(order.tokenIn).safeTransfer(order.initiator, order.amountIn);\\n        }\\n\\n        emit OrderRefunded(orderId);\\n    }\\n\\n    function getOrder(bytes32 orderId) external view returns (SwapOrder memory) {\\n        return orders[orderId];\\n    }\\n}\\n\",\"keccak256\":\"0x9ec6a61483117ab2e3cfec4af083ad70a2ce769274f9694754cdd99c0ca5581e\",\"license\":\"MIT\"},\"contracts/interfaces/ISwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ISwapManager {\\n    struct SwapOrder {\\n        address initiator;\\n        address resolver;\\n        uint256 amountIn;\\n        uint256 amountOutMin;\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 deadline;\\n        bytes32 secretHash;\\n        bool isFulfilled;\\n        bool isRefunded;\\n    }\\n\\n    event OrderCreated(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n\\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        bytes32 secret\\n    );\\n\\n    event OrderRefunded(bytes32 indexed orderId);\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32);\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable;\\n\\n    function refundOrder(bytes32 orderId) external;\\n\\n    function getOrder(bytes32 orderId) external view returns (SwapOrder memory);\\n    \\n    /**\\n     * @notice Register a worker wallet that can be used to fulfill orders\\n     * @param workerWallet The address of the worker wallet to register\\n     */\\n    function registerWorkerWallet(address workerWallet) external;\\n}\\n\",\"keccak256\":\"0xab77d3bf5618e43532c34e3ba26ee043d7479e42b81d345953d47ac2db8e4bff\",\"license\":\"MIT\"},\"contracts/interfaces/IWorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IWorkerWallet {\\n    event Executed(address indexed target, uint256 value, bytes data, bool success);\\n    event Withdrawn(address token, uint256 amount, address to);\\n    \\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory result);\\n    \\n    function withdraw(address token, uint256 amount, address to) external;\\n    \\n    function owner() external view returns (address);\\n    \\n    function swapManager() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd06ff72662f22d4288875f589eb91c4cb09d28003282dce92e4cd56de351277c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"contracts/SwapManager.sol:SwapManager","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":1546,"contract":"contracts/SwapManager.sol:SwapManager","label":"orders","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_struct(SwapOrder)2436_storage)"},{"astId":1550,"contract":"contracts/SwapManager.sol:SwapManager","label":"usedSecrets","offset":0,"slot":"2","type":"t_mapping(t_bytes32,t_bool)"},{"astId":1554,"contract":"contracts/SwapManager.sol:SwapManager","label":"isWorkerWallet","offset":0,"slot":"3","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(SwapOrder)2436_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct ISwapManager.SwapOrder)","numberOfBytes":"32","value":"t_struct(SwapOrder)2436_storage"},"t_struct(SwapOrder)2436_storage":{"encoding":"inplace","label":"struct ISwapManager.SwapOrder","members":[{"astId":2417,"contract":"contracts/SwapManager.sol:SwapManager","label":"initiator","offset":0,"slot":"0","type":"t_address"},{"astId":2419,"contract":"contracts/SwapManager.sol:SwapManager","label":"resolver","offset":0,"slot":"1","type":"t_address"},{"astId":2421,"contract":"contracts/SwapManager.sol:SwapManager","label":"amountIn","offset":0,"slot":"2","type":"t_uint256"},{"astId":2423,"contract":"contracts/SwapManager.sol:SwapManager","label":"amountOutMin","offset":0,"slot":"3","type":"t_uint256"},{"astId":2425,"contract":"contracts/SwapManager.sol:SwapManager","label":"tokenIn","offset":0,"slot":"4","type":"t_address"},{"astId":2427,"contract":"contracts/SwapManager.sol:SwapManager","label":"tokenOut","offset":0,"slot":"5","type":"t_address"},{"astId":2429,"contract":"contracts/SwapManager.sol:SwapManager","label":"deadline","offset":0,"slot":"6","type":"t_uint256"},{"astId":2431,"contract":"contracts/SwapManager.sol:SwapManager","label":"secretHash","offset":0,"slot":"7","type":"t_bytes32"},{"astId":2433,"contract":"contracts/SwapManager.sol:SwapManager","label":"isFulfilled","offset":0,"slot":"8","type":"t_bool"},{"astId":2435,"contract":"contracts/SwapManager.sol:SwapManager","label":"isRefunded","offset":1,"slot":"8","type":"t_bool"}],"numberOfBytes":"288"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"registerWorkerWallet(address)":{"notice":"Register a worker wallet that can be used to fulfill orders"}},"version":1}}},"contracts/WorkerWallet.sol":{"WorkerWallet":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_swapManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swapManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2160":{"entryPoint":null,"id":2160,"parameterSlots":2,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":304,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":332,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_stringliteral_388b26b8752cb9bc2935bdbdaaff189c636297a6151c254979ebb6679c000647__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6ccdfc9ccc81f068aea89db7f9732f839acfc5c72bb0c0b89415226633ad9254__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1306:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:16","statements":[{"nodeType":"YulAssignment","src":"84:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:16"},"nodeType":"YulFunctionCall","src":"93:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:16"}]},{"body":{"nodeType":"YulBlock","src":"169:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:16"},"nodeType":"YulFunctionCall","src":"171:12:16"},"nodeType":"YulExpressionStatement","src":"171:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:16"},"nodeType":"YulFunctionCall","src":"150:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:16"},"nodeType":"YulFunctionCall","src":"146:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:16"},"nodeType":"YulFunctionCall","src":"135:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:16"},"nodeType":"YulFunctionCall","src":"125:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:16"},"nodeType":"YulFunctionCall","src":"118:50:16"},"nodeType":"YulIf","src":"115:70:16"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:16","type":""}],"src":"14:177:16"},{"body":{"nodeType":"YulBlock","src":"294:195:16","statements":[{"body":{"nodeType":"YulBlock","src":"340:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"349:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"352:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:16"},"nodeType":"YulFunctionCall","src":"342:12:16"},"nodeType":"YulExpressionStatement","src":"342:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:16"},"nodeType":"YulFunctionCall","src":"311:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:16"},"nodeType":"YulFunctionCall","src":"307:32:16"},"nodeType":"YulIf","src":"304:52:16"},{"nodeType":"YulAssignment","src":"365:50:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"405:9:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"375:29:16"},"nodeType":"YulFunctionCall","src":"375:40:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"365:6:16"}]},{"nodeType":"YulAssignment","src":"424:59:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:16"},"nodeType":"YulFunctionCall","src":"464:18:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"434:29:16"},"nodeType":"YulFunctionCall","src":"434:49:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"424:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:16","type":""}],"src":"196:293:16"},{"body":{"nodeType":"YulBlock","src":"668:225:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"685:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"696:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"678:6:16"},"nodeType":"YulFunctionCall","src":"678:21:16"},"nodeType":"YulExpressionStatement","src":"678:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"719:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"730:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"715:3:16"},"nodeType":"YulFunctionCall","src":"715:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:16","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"708:6:16"},"nodeType":"YulFunctionCall","src":"708:30:16"},"nodeType":"YulExpressionStatement","src":"708:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"758:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:16"},"nodeType":"YulFunctionCall","src":"754:18:16"},{"hexValue":"576f726b657257616c6c65743a206f776e6572206973207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"774:34:16","type":"","value":"WorkerWallet: owner is zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"747:6:16"},"nodeType":"YulFunctionCall","src":"747:62:16"},"nodeType":"YulExpressionStatement","src":"747:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"829:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"840:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"825:3:16"},"nodeType":"YulFunctionCall","src":"825:18:16"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"845:5:16","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"818:6:16"},"nodeType":"YulFunctionCall","src":"818:33:16"},"nodeType":"YulExpressionStatement","src":"818:33:16"},{"nodeType":"YulAssignment","src":"860:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"872:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"883:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"868:3:16"},"nodeType":"YulFunctionCall","src":"868:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"860:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_388b26b8752cb9bc2935bdbdaaff189c636297a6151c254979ebb6679c000647__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"645:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"659:4:16","type":""}],"src":"494:399:16"},{"body":{"nodeType":"YulBlock","src":"1072:232:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1089:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1100:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1082:6:16"},"nodeType":"YulFunctionCall","src":"1082:21:16"},"nodeType":"YulExpressionStatement","src":"1082:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1123:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1134:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1119:3:16"},"nodeType":"YulFunctionCall","src":"1119:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"1139:2:16","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1112:6:16"},"nodeType":"YulFunctionCall","src":"1112:30:16"},"nodeType":"YulExpressionStatement","src":"1112:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1162:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1173:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1158:3:16"},"nodeType":"YulFunctionCall","src":"1158:18:16"},{"hexValue":"576f726b657257616c6c65743a2073776170206d616e61676572206973207a65","kind":"string","nodeType":"YulLiteral","src":"1178:34:16","type":"","value":"WorkerWallet: swap manager is ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1151:6:16"},"nodeType":"YulFunctionCall","src":"1151:62:16"},"nodeType":"YulExpressionStatement","src":"1151:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1233:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1244:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1229:3:16"},"nodeType":"YulFunctionCall","src":"1229:18:16"},{"hexValue":"726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"1249:12:16","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1222:6:16"},"nodeType":"YulFunctionCall","src":"1222:40:16"},"nodeType":"YulExpressionStatement","src":"1222:40:16"},{"nodeType":"YulAssignment","src":"1271:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1283:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1294:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1279:3:16"},"nodeType":"YulFunctionCall","src":"1279:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1271:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_6ccdfc9ccc81f068aea89db7f9732f839acfc5c72bb0c0b89415226633ad9254__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1049:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1063:4:16","type":""}],"src":"898:406:16"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_388b26b8752cb9bc2935bdbdaaff189c636297a6151c254979ebb6679c000647__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"WorkerWallet: owner is zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6ccdfc9ccc81f068aea89db7f9732f839acfc5c72bb0c0b89415226633ad9254__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"WorkerWallet: swap manager is ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a59380380610a5983398101604081905261002f9161014c565b6001600160a01b0382166100965760405162461bcd60e51b815260206004820152602360248201527f576f726b657257616c6c65743a206f776e6572206973207a65726f206164647260448201526265737360e81b60648201526084015b60405180910390fd5b6001600160a01b0381166100ff5760405162461bcd60e51b815260206004820152602a60248201527f576f726b657257616c6c65743a2073776170206d616e61676572206973207a65604482015269726f206164647265737360b01b606482015260840161008d565b600080546001600160a01b039384166001600160a01b0319918216179091556001805492909316911617905561017f565b80516001600160a01b038116811461014757600080fd5b919050565b6000806040838503121561015f57600080fd5b61016883610130565b915061017660208401610130565b90509250929050565b6108cb8061018e6000396000f3fe6080604052600436106100435760003560e01c806369328dec1461004f578063709d039d146100715780638da5cb5b146100ae578063b61d27f6146100ce57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a36600461067a565b6100fc565b005b34801561007d57600080fd5b50600154610091906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ba57600080fd5b50600054610091906001600160a01b031681565b3480156100da57600080fd5b506100ee6100e93660046106b6565b6102bf565b6040516100a592919061078d565b6000546001600160a01b0316331461012f5760405162461bcd60e51b8152600401610126906107a8565b60405180910390fd5b6001600160a01b03811661019b5760405162461bcd60e51b815260206004820152602d60248201527f576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f60448201526c207a65726f206164647265737360981b6064820152608401610126565b6001600160a01b03831661025c576000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146101f6576040519150601f19603f3d011682016040523d82523d6000602084013e6101fb565b606091505b50509050806102565760405162461bcd60e51b815260206004820152602160248201527f576f726b657257616c6c65743a20455448207472616e73666572206661696c656044820152601960fa1b6064820152608401610126565b50610270565b6102706001600160a01b03841682846103a2565b604080516001600160a01b0385811682526020820185905283168183015290517fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9181900360600190a1505050565b600080546060906001600160a01b031633146102ed5760405162461bcd60e51b8152600401610126906107a8565b856001600160a01b03168585856040516103089291906107ed565b60006040518083038185875af1925050503d8060008114610345576040519150601f19603f3d011682016040523d82523d6000602084013e61034a565b606091505b5060405191935091506001600160a01b038716907f4232d48319210b7bc959a61fd7785051da1497df2a1400e3340f42a8a6efd541906103919088908890889088906107fd565b60405180910390a294509492505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103f49084906103f9565b505050565b600061044e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104ce9092919063ffffffff16565b905080516000148061046f57508080602001905181019061046f919061083d565b6103f45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610126565b60606104dd84846000856104e5565b949350505050565b6060824710156105465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610126565b600080866001600160a01b031685876040516105629190610866565b60006040518083038185875af1925050503d806000811461059f576040519150601f19603f3d011682016040523d82523d6000602084013e6105a4565b606091505b50915091506105b5878383876105c0565b979650505050505050565b6060831561062f578251600003610628576001600160a01b0385163b6106285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610126565b50816104dd565b6104dd83838151156106445781518083602001fd5b8060405162461bcd60e51b81526004016101269190610882565b80356001600160a01b038116811461067557600080fd5b919050565b60008060006060848603121561068f57600080fd5b6106988461065e565b9250602084013591506106ad6040850161065e565b90509250925092565b600080600080606085870312156106cc57600080fd5b6106d58561065e565b935060208501359250604085013567ffffffffffffffff808211156106f957600080fd5b818701915087601f83011261070d57600080fd5b81358181111561071c57600080fd5b88602082850101111561072e57600080fd5b95989497505060200194505050565b60005b83811015610758578181015183820152602001610740565b50506000910152565b6000815180845261077981602086016020860161073d565b601f01601f19169290920160200192915050565b82151581526040602082015260006104dd6040830184610761565b60208082526025908201527f576f726b657257616c6c65743a2063616c6c6572206973206e6f74207468652060408201526437bbb732b960d91b606082015260800190565b8183823760009101908152919050565b848152606060208201528260608201528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b60006020828403121561084f57600080fd5b8151801515811461085f57600080fd5b9392505050565b6000825161087881846020870161073d565b9190910192915050565b60208152600061085f602083018461076156fea2646970667358221220d02057af3360c3d7515f0c51ccbdc569010f38cdfa82f818a2c05e9a5553c30864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA59 CODESIZE SUB DUP1 PUSH2 0xA59 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x14C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A206F776E6572206973207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2073776170206D616E61676572206973207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x17F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168 DUP4 PUSH2 0x130 JUMP JUMPDEST SWAP2 POP PUSH2 0x176 PUSH1 0x20 DUP5 ADD PUSH2 0x130 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CB DUP1 PUSH2 0x18E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69328DEC EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x709D039D EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616E6E6F7420776974686472617720746F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25C JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A20455448207472616E73666572206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST POP PUSH2 0x270 JUMP JUMPDEST PUSH2 0x270 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xCBCDBDF10631A43CC99C80ACACE8232649421C3F4F73919F16013D47C83A687A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x308 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x4232D48319210B7BC959A61FD7785051DA1497DF2A1400E3340F42A8A6EFD541 SWAP1 PUSH2 0x391 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3F4 SWAP1 DUP5 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x46F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4DD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x5C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x62F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x628 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x126 JUMP JUMPDEST POP DUP2 PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x644 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x6AD PUSH1 0x40 DUP6 ADD PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D5 DUP6 PUSH2 0x65E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x740 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x779 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x73D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4DD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x878 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x85F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x761 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 KECCAK256 JUMPI 0xAF CALLER PUSH1 0xC3 0xD7 MLOAD PUSH0 0xC MLOAD 0xCC 0xBD 0xC5 PUSH10 0x10F38CDFA82F818A2C0 0x5E SWAP11 SSTORE MSTORE8 0xC3 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"263:1569:9:-:0;;;715:295;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;783:20:9;;775:68;;;;-1:-1:-1;;;775:68:9;;696:2:16;775:68:9;;;678:21:16;735:2;715:18;;;708:30;774:34;754:18;;;747:62;-1:-1:-1;;;825:18:16;;;818:33;868:19;;775:68:9;;;;;;;;;-1:-1:-1;;;;;861:26:9;;853:81;;;;-1:-1:-1;;;853:81:9;;1100:2:16;853:81:9;;;1082:21:16;1139:2;1119:18;;;1112:30;1178:34;1158:18;;;1151:62;-1:-1:-1;;;1229:18:16;;;1222:40;1279:19;;853:81:9;898:406:16;853:81:9;953:5;:14;;-1:-1:-1;;;;;953:14:9;;;-1:-1:-1;;;;;;953:14:9;;;;;;;;977:26;;;;;;;;;;;263:1569;;14:177:16;93:13;;-1:-1:-1;;;;;135:31:16;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;898:406::-;263:1569:9;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_2164":{"entryPoint":null,"id":2164,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_1117":{"entryPoint":1017,"id":1117,"parameterSlots":2,"returnSlots":0},"@_revert_1495":{"entryPoint":null,"id":1495,"parameterSlots":2,"returnSlots":0},"@execute_2199":{"entryPoint":703,"id":2199,"parameterSlots":4,"returnSlots":2},"@functionCallWithValue_1320":{"entryPoint":1253,"id":1320,"parameterSlots":4,"returnSlots":1},"@functionCall_1256":{"entryPoint":1230,"id":1256,"parameterSlots":3,"returnSlots":1},"@isContract_1184":{"entryPoint":null,"id":1184,"parameterSlots":1,"returnSlots":1},"@owner_2095":{"entryPoint":null,"id":2095,"parameterSlots":0,"returnSlots":0},"@safeTransfer_823":{"entryPoint":930,"id":823,"parameterSlots":3,"returnSlots":0},"@swapManager_2098":{"entryPoint":null,"id":2098,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_1451":{"entryPoint":1472,"id":1451,"parameterSlots":4,"returnSlots":1},"@withdraw_2259":{"entryPoint":252,"id":2259,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":1630,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_address":{"entryPoint":1658,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":1718,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2109,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":1889,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2029,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":1933,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2178,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32dd410984bef2bdfdef125880368ec1269daa3858f98485cbe6ef6fe38878fb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4ad542fc758949f2eac41186c24b6c7c9118aa12ce89931fcbcd70c2a1bcf2ed__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_506443333bcaabf6bbdd18bc57ac25e5a604386cc920f2333665e0320024f142__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1960,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bool__to_t_uint256_t_bytes_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":2045,"id":null,"parameterSlots":5,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1853,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7190:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:16","statements":[{"nodeType":"YulAssignment","src":"73:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:16"},"nodeType":"YulFunctionCall","src":"82:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:16"}]},{"body":{"nodeType":"YulBlock","src":"165:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:16"},"nodeType":"YulFunctionCall","src":"167:12:16"},"nodeType":"YulExpressionStatement","src":"167:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:16"},"nodeType":"YulFunctionCall","src":"146:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:16"},"nodeType":"YulFunctionCall","src":"142:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:16"},"nodeType":"YulFunctionCall","src":"131:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:16"},"nodeType":"YulFunctionCall","src":"121:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:16"},"nodeType":"YulFunctionCall","src":"114:50:16"},"nodeType":"YulIf","src":"111:70:16"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:16","type":""}],"src":"14:173:16"},{"body":{"nodeType":"YulBlock","src":"296:224:16","statements":[{"body":{"nodeType":"YulBlock","src":"342:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"351:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"354:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"344:6:16"},"nodeType":"YulFunctionCall","src":"344:12:16"},"nodeType":"YulExpressionStatement","src":"344:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"317:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"326:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"313:3:16"},"nodeType":"YulFunctionCall","src":"313:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"338:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"309:3:16"},"nodeType":"YulFunctionCall","src":"309:32:16"},"nodeType":"YulIf","src":"306:52:16"},{"nodeType":"YulAssignment","src":"367:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"396:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"377:18:16"},"nodeType":"YulFunctionCall","src":"377:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"367:6:16"}]},{"nodeType":"YulAssignment","src":"415:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"442:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"453:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"438:3:16"},"nodeType":"YulFunctionCall","src":"438:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"425:12:16"},"nodeType":"YulFunctionCall","src":"425:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"415:6:16"}]},{"nodeType":"YulAssignment","src":"466:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"499:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"510:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"495:3:16"},"nodeType":"YulFunctionCall","src":"495:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"476:18:16"},"nodeType":"YulFunctionCall","src":"476:38:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"466:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"246:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"257:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"269:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"277:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"285:6:16","type":""}],"src":"192:328:16"},{"body":{"nodeType":"YulBlock","src":"626:102:16","statements":[{"nodeType":"YulAssignment","src":"636:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"648:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"659:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"644:3:16"},"nodeType":"YulFunctionCall","src":"644:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"636:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"678:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"693:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"709:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"714:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"705:3:16"},"nodeType":"YulFunctionCall","src":"705:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"718:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"701:3:16"},"nodeType":"YulFunctionCall","src":"701:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"689:3:16"},"nodeType":"YulFunctionCall","src":"689:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"671:6:16"},"nodeType":"YulFunctionCall","src":"671:51:16"},"nodeType":"YulExpressionStatement","src":"671:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"595:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"606:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"617:4:16","type":""}],"src":"525:203:16"},{"body":{"nodeType":"YulBlock","src":"856:610:16","statements":[{"body":{"nodeType":"YulBlock","src":"902:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"911:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"914:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"904:6:16"},"nodeType":"YulFunctionCall","src":"904:12:16"},"nodeType":"YulExpressionStatement","src":"904:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"877:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"886:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"873:3:16"},"nodeType":"YulFunctionCall","src":"873:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"898:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"869:3:16"},"nodeType":"YulFunctionCall","src":"869:32:16"},"nodeType":"YulIf","src":"866:52:16"},{"nodeType":"YulAssignment","src":"927:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"956:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"937:18:16"},"nodeType":"YulFunctionCall","src":"937:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"927:6:16"}]},{"nodeType":"YulAssignment","src":"975:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1002:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1013:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"998:3:16"},"nodeType":"YulFunctionCall","src":"998:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"985:12:16"},"nodeType":"YulFunctionCall","src":"985:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"975:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1026:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1057:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1068:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1053:3:16"},"nodeType":"YulFunctionCall","src":"1053:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1040:12:16"},"nodeType":"YulFunctionCall","src":"1040:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1030:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1081:28:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1091:18:16","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1085:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1136:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1145:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1138:6:16"},"nodeType":"YulFunctionCall","src":"1138:12:16"},"nodeType":"YulExpressionStatement","src":"1138:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1124:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1132:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1121:2:16"},"nodeType":"YulFunctionCall","src":"1121:14:16"},"nodeType":"YulIf","src":"1118:34:16"},{"nodeType":"YulVariableDeclaration","src":"1161:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1175:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1186:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1171:3:16"},"nodeType":"YulFunctionCall","src":"1171:22:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1165:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1241:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1250:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1253:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1243:6:16"},"nodeType":"YulFunctionCall","src":"1243:12:16"},"nodeType":"YulExpressionStatement","src":"1243:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1220:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"1224:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1216:3:16"},"nodeType":"YulFunctionCall","src":"1216:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1231:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1212:3:16"},"nodeType":"YulFunctionCall","src":"1212:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1205:6:16"},"nodeType":"YulFunctionCall","src":"1205:35:16"},"nodeType":"YulIf","src":"1202:55:16"},{"nodeType":"YulVariableDeclaration","src":"1266:30:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1293:2:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1280:12:16"},"nodeType":"YulFunctionCall","src":"1280:16:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1270:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1323:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1332:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1335:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1325:6:16"},"nodeType":"YulFunctionCall","src":"1325:12:16"},"nodeType":"YulExpressionStatement","src":"1325:12:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1311:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1319:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1308:2:16"},"nodeType":"YulFunctionCall","src":"1308:14:16"},"nodeType":"YulIf","src":"1305:34:16"},{"body":{"nodeType":"YulBlock","src":"1389:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1398:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1401:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1391:6:16"},"nodeType":"YulFunctionCall","src":"1391:12:16"},"nodeType":"YulExpressionStatement","src":"1391:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1362:2:16"},{"name":"length","nodeType":"YulIdentifier","src":"1366:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1358:3:16"},"nodeType":"YulFunctionCall","src":"1358:15:16"},{"kind":"number","nodeType":"YulLiteral","src":"1375:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1354:3:16"},"nodeType":"YulFunctionCall","src":"1354:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1380:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1351:2:16"},"nodeType":"YulFunctionCall","src":"1351:37:16"},"nodeType":"YulIf","src":"1348:57:16"},{"nodeType":"YulAssignment","src":"1414:21:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1428:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"1432:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1424:3:16"},"nodeType":"YulFunctionCall","src":"1424:11:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1414:6:16"}]},{"nodeType":"YulAssignment","src":"1444:16:16","value":{"name":"length","nodeType":"YulIdentifier","src":"1454:6:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1444:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"798:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"809:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"821:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"829:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"837:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"845:6:16","type":""}],"src":"733:733:16"},{"body":{"nodeType":"YulBlock","src":"1537:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1547:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1556:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1551:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1616:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1641:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1646:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1637:3:16"},"nodeType":"YulFunctionCall","src":"1637:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1660:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1665:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1656:3:16"},"nodeType":"YulFunctionCall","src":"1656:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1650:5:16"},"nodeType":"YulFunctionCall","src":"1650:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1630:6:16"},"nodeType":"YulFunctionCall","src":"1630:39:16"},"nodeType":"YulExpressionStatement","src":"1630:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1577:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1580:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1574:2:16"},"nodeType":"YulFunctionCall","src":"1574:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1588:19:16","statements":[{"nodeType":"YulAssignment","src":"1590:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1599:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1602:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:16"},"nodeType":"YulFunctionCall","src":"1595:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1590:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1570:3:16","statements":[]},"src":"1566:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1699:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1704:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1695:3:16"},"nodeType":"YulFunctionCall","src":"1695:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1688:6:16"},"nodeType":"YulFunctionCall","src":"1688:27:16"},"nodeType":"YulExpressionStatement","src":"1688:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1515:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1520:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1525:6:16","type":""}],"src":"1471:250:16"},{"body":{"nodeType":"YulBlock","src":"1775:221:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1785:26:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1805:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1799:5:16"},"nodeType":"YulFunctionCall","src":"1799:12:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1789:6:16","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1827:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1832:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:16"},"nodeType":"YulFunctionCall","src":"1820:19:16"},"nodeType":"YulExpressionStatement","src":"1820:19:16"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1887:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1894:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1883:3:16"},"nodeType":"YulFunctionCall","src":"1883:16:16"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1905:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1910:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1901:3:16"},"nodeType":"YulFunctionCall","src":"1901:14:16"},{"name":"length","nodeType":"YulIdentifier","src":"1917:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1848:34:16"},"nodeType":"YulFunctionCall","src":"1848:76:16"},"nodeType":"YulExpressionStatement","src":"1848:76:16"},{"nodeType":"YulAssignment","src":"1933:57:16","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1948:3:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1961:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1969:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1957:3:16"},"nodeType":"YulFunctionCall","src":"1957:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1978:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1974:3:16"},"nodeType":"YulFunctionCall","src":"1974:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1953:3:16"},"nodeType":"YulFunctionCall","src":"1953:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1944:3:16"},"nodeType":"YulFunctionCall","src":"1944:39:16"},{"kind":"number","nodeType":"YulLiteral","src":"1985:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1940:3:16"},"nodeType":"YulFunctionCall","src":"1940:50:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1933:3:16"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1752:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1759:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1767:3:16","type":""}],"src":"1726:270:16"},{"body":{"nodeType":"YulBlock","src":"2142:157:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2159:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2184:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2177:6:16"},"nodeType":"YulFunctionCall","src":"2177:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2170:6:16"},"nodeType":"YulFunctionCall","src":"2170:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2152:6:16"},"nodeType":"YulFunctionCall","src":"2152:41:16"},"nodeType":"YulExpressionStatement","src":"2152:41:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2213:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2224:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2209:3:16"},"nodeType":"YulFunctionCall","src":"2209:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"2229:2:16","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2202:6:16"},"nodeType":"YulFunctionCall","src":"2202:30:16"},"nodeType":"YulExpressionStatement","src":"2202:30:16"},{"nodeType":"YulAssignment","src":"2241:52:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2266:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2289:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2274:3:16"},"nodeType":"YulFunctionCall","src":"2274:18:16"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"2249:16:16"},"nodeType":"YulFunctionCall","src":"2249:44:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2241:4:16"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2103:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2114:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2122:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2133:4:16","type":""}],"src":"2001:298:16"},{"body":{"nodeType":"YulBlock","src":"2478:227:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2495:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2506:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2488:6:16"},"nodeType":"YulFunctionCall","src":"2488:21:16"},"nodeType":"YulExpressionStatement","src":"2488:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2529:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2540:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2525:3:16"},"nodeType":"YulFunctionCall","src":"2525:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"2545:2:16","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2518:6:16"},"nodeType":"YulFunctionCall","src":"2518:30:16"},"nodeType":"YulExpressionStatement","src":"2518:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2568:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2579:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2564:3:16"},"nodeType":"YulFunctionCall","src":"2564:18:16"},{"hexValue":"576f726b657257616c6c65743a2063616c6c6572206973206e6f742074686520","kind":"string","nodeType":"YulLiteral","src":"2584:34:16","type":"","value":"WorkerWallet: caller is not the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2557:6:16"},"nodeType":"YulFunctionCall","src":"2557:62:16"},"nodeType":"YulExpressionStatement","src":"2557:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2639:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2650:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2635:3:16"},"nodeType":"YulFunctionCall","src":"2635:18:16"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"2655:7:16","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2628:6:16"},"nodeType":"YulFunctionCall","src":"2628:35:16"},"nodeType":"YulExpressionStatement","src":"2628:35:16"},{"nodeType":"YulAssignment","src":"2672:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2684:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2695:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2680:3:16"},"nodeType":"YulFunctionCall","src":"2680:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2672:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_506443333bcaabf6bbdd18bc57ac25e5a604386cc920f2333665e0320024f142__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2455:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2469:4:16","type":""}],"src":"2304:401:16"},{"body":{"nodeType":"YulBlock","src":"2884:235:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2901:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2912:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2894:6:16"},"nodeType":"YulFunctionCall","src":"2894:21:16"},"nodeType":"YulExpressionStatement","src":"2894:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2935:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2946:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2931:3:16"},"nodeType":"YulFunctionCall","src":"2931:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"2951:2:16","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2924:6:16"},"nodeType":"YulFunctionCall","src":"2924:30:16"},"nodeType":"YulExpressionStatement","src":"2924:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2974:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2985:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2970:3:16"},"nodeType":"YulFunctionCall","src":"2970:18:16"},{"hexValue":"576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f","kind":"string","nodeType":"YulLiteral","src":"2990:34:16","type":"","value":"WorkerWallet: cannot withdraw to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2963:6:16"},"nodeType":"YulFunctionCall","src":"2963:62:16"},"nodeType":"YulExpressionStatement","src":"2963:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3045:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3056:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3041:3:16"},"nodeType":"YulFunctionCall","src":"3041:18:16"},{"hexValue":"207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"3061:15:16","type":"","value":" zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3034:6:16"},"nodeType":"YulFunctionCall","src":"3034:43:16"},"nodeType":"YulExpressionStatement","src":"3034:43:16"},{"nodeType":"YulAssignment","src":"3086:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3098:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3109:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3094:3:16"},"nodeType":"YulFunctionCall","src":"3094:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3086:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_32dd410984bef2bdfdef125880368ec1269daa3858f98485cbe6ef6fe38878fb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2861:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2875:4:16","type":""}],"src":"2710:409:16"},{"body":{"nodeType":"YulBlock","src":"3315:14:16","statements":[{"nodeType":"YulAssignment","src":"3317:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"3324:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3317:3:16"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3299:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3307:3:16","type":""}],"src":"3124:205:16"},{"body":{"nodeType":"YulBlock","src":"3508:223:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3525:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3536:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3518:6:16"},"nodeType":"YulFunctionCall","src":"3518:21:16"},"nodeType":"YulExpressionStatement","src":"3518:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3559:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3570:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3555:3:16"},"nodeType":"YulFunctionCall","src":"3555:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"3575:2:16","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3548:6:16"},"nodeType":"YulFunctionCall","src":"3548:30:16"},"nodeType":"YulExpressionStatement","src":"3548:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3598:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3609:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3594:3:16"},"nodeType":"YulFunctionCall","src":"3594:18:16"},{"hexValue":"576f726b657257616c6c65743a20455448207472616e73666572206661696c65","kind":"string","nodeType":"YulLiteral","src":"3614:34:16","type":"","value":"WorkerWallet: ETH transfer faile"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3587:6:16"},"nodeType":"YulFunctionCall","src":"3587:62:16"},"nodeType":"YulExpressionStatement","src":"3587:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3669:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3680:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3665:3:16"},"nodeType":"YulFunctionCall","src":"3665:18:16"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"3685:3:16","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3658:6:16"},"nodeType":"YulFunctionCall","src":"3658:31:16"},"nodeType":"YulExpressionStatement","src":"3658:31:16"},{"nodeType":"YulAssignment","src":"3698:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3710:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3721:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3706:3:16"},"nodeType":"YulFunctionCall","src":"3706:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3698:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_4ad542fc758949f2eac41186c24b6c7c9118aa12ce89931fcbcd70c2a1bcf2ed__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3485:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3499:4:16","type":""}],"src":"3334:397:16"},{"body":{"nodeType":"YulBlock","src":"3893:218:16","statements":[{"nodeType":"YulAssignment","src":"3903:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3915:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3926:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3911:3:16"},"nodeType":"YulFunctionCall","src":"3911:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3903:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"3938:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3956:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3961:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3952:3:16"},"nodeType":"YulFunctionCall","src":"3952:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"3965:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3948:3:16"},"nodeType":"YulFunctionCall","src":"3948:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3942:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3983:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3998:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4006:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3994:3:16"},"nodeType":"YulFunctionCall","src":"3994:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3976:6:16"},"nodeType":"YulFunctionCall","src":"3976:34:16"},"nodeType":"YulExpressionStatement","src":"3976:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4030:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4041:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4026:3:16"},"nodeType":"YulFunctionCall","src":"4026:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"4046:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4019:6:16"},"nodeType":"YulFunctionCall","src":"4019:34:16"},"nodeType":"YulExpressionStatement","src":"4019:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4073:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4084:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4069:3:16"},"nodeType":"YulFunctionCall","src":"4069:18:16"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4093:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4101:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4089:3:16"},"nodeType":"YulFunctionCall","src":"4089:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4062:6:16"},"nodeType":"YulFunctionCall","src":"4062:43:16"},"nodeType":"YulExpressionStatement","src":"4062:43:16"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3846:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3857:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3865:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3873:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3884:4:16","type":""}],"src":"3736:375:16"},{"body":{"nodeType":"YulBlock","src":"4263:124:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4286:3:16"},{"name":"value0","nodeType":"YulIdentifier","src":"4291:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"4299:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4273:12:16"},"nodeType":"YulFunctionCall","src":"4273:33:16"},"nodeType":"YulExpressionStatement","src":"4273:33:16"},{"nodeType":"YulVariableDeclaration","src":"4315:26:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4329:3:16"},{"name":"value1","nodeType":"YulIdentifier","src":"4334:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4325:3:16"},"nodeType":"YulFunctionCall","src":"4325:16:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4319:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4357:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"4361:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4350:6:16"},"nodeType":"YulFunctionCall","src":"4350:13:16"},"nodeType":"YulExpressionStatement","src":"4350:13:16"},{"nodeType":"YulAssignment","src":"4372:9:16","value":{"name":"_1","nodeType":"YulIdentifier","src":"4379:2:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4372:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4231:3:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4236:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4244:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4255:3:16","type":""}],"src":"4116:271:16"},{"body":{"nodeType":"YulBlock","src":"4571:364:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4588:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"4599:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4581:6:16"},"nodeType":"YulFunctionCall","src":"4581:25:16"},"nodeType":"YulExpressionStatement","src":"4581:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4626:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4637:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:16"},"nodeType":"YulFunctionCall","src":"4622:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"4642:2:16","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4615:6:16"},"nodeType":"YulFunctionCall","src":"4615:30:16"},"nodeType":"YulExpressionStatement","src":"4615:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4665:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4676:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4661:3:16"},"nodeType":"YulFunctionCall","src":"4661:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"4681:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4654:6:16"},"nodeType":"YulFunctionCall","src":"4654:34:16"},"nodeType":"YulExpressionStatement","src":"4654:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4714:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4725:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4710:3:16"},"nodeType":"YulFunctionCall","src":"4710:19:16"},{"name":"value1","nodeType":"YulIdentifier","src":"4731:6:16"},{"name":"value2","nodeType":"YulIdentifier","src":"4739:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4697:12:16"},"nodeType":"YulFunctionCall","src":"4697:49:16"},"nodeType":"YulExpressionStatement","src":"4697:49:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4770:9:16"},{"name":"value2","nodeType":"YulIdentifier","src":"4781:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4766:3:16"},"nodeType":"YulFunctionCall","src":"4766:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"4790:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4762:3:16"},"nodeType":"YulFunctionCall","src":"4762:32:16"},{"kind":"number","nodeType":"YulLiteral","src":"4796:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4755:6:16"},"nodeType":"YulFunctionCall","src":"4755:43:16"},"nodeType":"YulExpressionStatement","src":"4755:43:16"},{"nodeType":"YulAssignment","src":"4807:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4823:9:16"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4842:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4850:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4838:3:16"},"nodeType":"YulFunctionCall","src":"4838:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4859:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4855:3:16"},"nodeType":"YulFunctionCall","src":"4855:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4834:3:16"},"nodeType":"YulFunctionCall","src":"4834:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4819:3:16"},"nodeType":"YulFunctionCall","src":"4819:45:16"},{"kind":"number","nodeType":"YulLiteral","src":"4866:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4815:3:16"},"nodeType":"YulFunctionCall","src":"4815:55:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4807:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4890:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4901:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4886:3:16"},"nodeType":"YulFunctionCall","src":"4886:18:16"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4920:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4913:6:16"},"nodeType":"YulFunctionCall","src":"4913:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4906:6:16"},"nodeType":"YulFunctionCall","src":"4906:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4879:6:16"},"nodeType":"YulFunctionCall","src":"4879:50:16"},"nodeType":"YulExpressionStatement","src":"4879:50:16"}]},"name":"abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bool__to_t_uint256_t_bytes_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4516:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4527:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4535:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4543:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4551:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4562:4:16","type":""}],"src":"4392:543:16"},{"body":{"nodeType":"YulBlock","src":"5069:145:16","statements":[{"nodeType":"YulAssignment","src":"5079:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5091:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5102:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5087:3:16"},"nodeType":"YulFunctionCall","src":"5087:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5079:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5121:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5136:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5152:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5157:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5148:3:16"},"nodeType":"YulFunctionCall","src":"5148:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"5161:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5144:3:16"},"nodeType":"YulFunctionCall","src":"5144:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5132:3:16"},"nodeType":"YulFunctionCall","src":"5132:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5114:6:16"},"nodeType":"YulFunctionCall","src":"5114:51:16"},"nodeType":"YulExpressionStatement","src":"5114:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5196:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:16"},"nodeType":"YulFunctionCall","src":"5181:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"5201:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5174:6:16"},"nodeType":"YulFunctionCall","src":"5174:34:16"},"nodeType":"YulExpressionStatement","src":"5174:34:16"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5030:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5041:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5049:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5060:4:16","type":""}],"src":"4940:274:16"},{"body":{"nodeType":"YulBlock","src":"5297:199:16","statements":[{"body":{"nodeType":"YulBlock","src":"5343:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5352:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5355:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5345:6:16"},"nodeType":"YulFunctionCall","src":"5345:12:16"},"nodeType":"YulExpressionStatement","src":"5345:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5318:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5327:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5314:3:16"},"nodeType":"YulFunctionCall","src":"5314:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5339:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5310:3:16"},"nodeType":"YulFunctionCall","src":"5310:32:16"},"nodeType":"YulIf","src":"5307:52:16"},{"nodeType":"YulVariableDeclaration","src":"5368:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5387:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5381:5:16"},"nodeType":"YulFunctionCall","src":"5381:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5372:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5450:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5459:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5462:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5452:6:16"},"nodeType":"YulFunctionCall","src":"5452:12:16"},"nodeType":"YulExpressionStatement","src":"5452:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5419:5:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5440:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5433:6:16"},"nodeType":"YulFunctionCall","src":"5433:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5426:6:16"},"nodeType":"YulFunctionCall","src":"5426:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5416:2:16"},"nodeType":"YulFunctionCall","src":"5416:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5409:6:16"},"nodeType":"YulFunctionCall","src":"5409:40:16"},"nodeType":"YulIf","src":"5406:60:16"},{"nodeType":"YulAssignment","src":"5475:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5485:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5475:6:16"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5263:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5274:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5286:6:16","type":""}],"src":"5219:277:16"},{"body":{"nodeType":"YulBlock","src":"5675:232:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5692:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5703:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5685:6:16"},"nodeType":"YulFunctionCall","src":"5685:21:16"},"nodeType":"YulExpressionStatement","src":"5685:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5726:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5737:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5722:3:16"},"nodeType":"YulFunctionCall","src":"5722:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"5742:2:16","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5715:6:16"},"nodeType":"YulFunctionCall","src":"5715:30:16"},"nodeType":"YulExpressionStatement","src":"5715:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5765:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5776:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5761:3:16"},"nodeType":"YulFunctionCall","src":"5761:18:16"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"5781:34:16","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5754:6:16"},"nodeType":"YulFunctionCall","src":"5754:62:16"},"nodeType":"YulExpressionStatement","src":"5754:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5836:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5847:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5832:3:16"},"nodeType":"YulFunctionCall","src":"5832:18:16"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"5852:12:16","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5825:6:16"},"nodeType":"YulFunctionCall","src":"5825:40:16"},"nodeType":"YulExpressionStatement","src":"5825:40:16"},{"nodeType":"YulAssignment","src":"5874:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5886:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5897:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5882:3:16"},"nodeType":"YulFunctionCall","src":"5882:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5874:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5652:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5666:4:16","type":""}],"src":"5501:406:16"},{"body":{"nodeType":"YulBlock","src":"6086:228:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6103:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6114:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6096:6:16"},"nodeType":"YulFunctionCall","src":"6096:21:16"},"nodeType":"YulExpressionStatement","src":"6096:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6137:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6148:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6133:3:16"},"nodeType":"YulFunctionCall","src":"6133:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:16","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6126:6:16"},"nodeType":"YulFunctionCall","src":"6126:30:16"},"nodeType":"YulExpressionStatement","src":"6126:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6176:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6187:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6172:3:16"},"nodeType":"YulFunctionCall","src":"6172:18:16"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"6192:34:16","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6165:6:16"},"nodeType":"YulFunctionCall","src":"6165:62:16"},"nodeType":"YulExpressionStatement","src":"6165:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6247:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6258:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6243:3:16"},"nodeType":"YulFunctionCall","src":"6243:18:16"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"6263:8:16","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6236:6:16"},"nodeType":"YulFunctionCall","src":"6236:36:16"},"nodeType":"YulExpressionStatement","src":"6236:36:16"},{"nodeType":"YulAssignment","src":"6281:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6293:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6304:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6289:3:16"},"nodeType":"YulFunctionCall","src":"6289:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6281:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6063:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6077:4:16","type":""}],"src":"5912:402:16"},{"body":{"nodeType":"YulBlock","src":"6456:150:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6466:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6486:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6480:5:16"},"nodeType":"YulFunctionCall","src":"6480:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6470:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6541:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6549:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6537:3:16"},"nodeType":"YulFunctionCall","src":"6537:17:16"},{"name":"pos","nodeType":"YulIdentifier","src":"6556:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"6561:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6502:34:16"},"nodeType":"YulFunctionCall","src":"6502:66:16"},"nodeType":"YulExpressionStatement","src":"6502:66:16"},{"nodeType":"YulAssignment","src":"6577:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6588:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"6593:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6584:3:16"},"nodeType":"YulFunctionCall","src":"6584:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6577:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6432:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6437:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6448:3:16","type":""}],"src":"6319:287:16"},{"body":{"nodeType":"YulBlock","src":"6785:179:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6802:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6813:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6795:6:16"},"nodeType":"YulFunctionCall","src":"6795:21:16"},"nodeType":"YulExpressionStatement","src":"6795:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6836:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6847:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6832:3:16"},"nodeType":"YulFunctionCall","src":"6832:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"6852:2:16","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6825:6:16"},"nodeType":"YulFunctionCall","src":"6825:30:16"},"nodeType":"YulExpressionStatement","src":"6825:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6875:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6886:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6871:3:16"},"nodeType":"YulFunctionCall","src":"6871:18:16"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"6891:31:16","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6864:6:16"},"nodeType":"YulFunctionCall","src":"6864:59:16"},"nodeType":"YulExpressionStatement","src":"6864:59:16"},{"nodeType":"YulAssignment","src":"6932:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6944:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6955:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6940:3:16"},"nodeType":"YulFunctionCall","src":"6940:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6932:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6762:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6776:4:16","type":""}],"src":"6611:353:16"},{"body":{"nodeType":"YulBlock","src":"7090:98:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7107:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7118:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7100:6:16"},"nodeType":"YulFunctionCall","src":"7100:21:16"},"nodeType":"YulExpressionStatement","src":"7100:21:16"},{"nodeType":"YulAssignment","src":"7130:52:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7155:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7167:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7178:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7163:3:16"},"nodeType":"YulFunctionCall","src":"7163:18:16"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"7138:16:16"},"nodeType":"YulFunctionCall","src":"7138:44:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7130:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7059:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7070:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7081:4:16","type":""}],"src":"6969:219:16"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_506443333bcaabf6bbdd18bc57ac25e5a604386cc920f2333665e0320024f142__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"WorkerWallet: caller is not the \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_32dd410984bef2bdfdef125880368ec1269daa3858f98485cbe6ef6fe38878fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"WorkerWallet: cannot withdraw to\")\n        mstore(add(headStart, 96), \" zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_4ad542fc758949f2eac41186c24b6c7c9118aa12ce89931fcbcd70c2a1bcf2ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"WorkerWallet: ETH transfer faile\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bool__to_t_uint256_t_bytes_memory_ptr_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        mstore(add(headStart, 96), value2)\n        calldatacopy(add(headStart, 128), value1, value2)\n        mstore(add(add(headStart, value2), 128), 0)\n        tail := add(add(headStart, and(add(value2, 31), not(31))), 128)\n        mstore(add(headStart, 64), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100435760003560e01c806369328dec1461004f578063709d039d146100715780638da5cb5b146100ae578063b61d27f6146100ce57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a36600461067a565b6100fc565b005b34801561007d57600080fd5b50600154610091906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ba57600080fd5b50600054610091906001600160a01b031681565b3480156100da57600080fd5b506100ee6100e93660046106b6565b6102bf565b6040516100a592919061078d565b6000546001600160a01b0316331461012f5760405162461bcd60e51b8152600401610126906107a8565b60405180910390fd5b6001600160a01b03811661019b5760405162461bcd60e51b815260206004820152602d60248201527f576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f60448201526c207a65726f206164647265737360981b6064820152608401610126565b6001600160a01b03831661025c576000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146101f6576040519150601f19603f3d011682016040523d82523d6000602084013e6101fb565b606091505b50509050806102565760405162461bcd60e51b815260206004820152602160248201527f576f726b657257616c6c65743a20455448207472616e73666572206661696c656044820152601960fa1b6064820152608401610126565b50610270565b6102706001600160a01b03841682846103a2565b604080516001600160a01b0385811682526020820185905283168183015290517fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9181900360600190a1505050565b600080546060906001600160a01b031633146102ed5760405162461bcd60e51b8152600401610126906107a8565b856001600160a01b03168585856040516103089291906107ed565b60006040518083038185875af1925050503d8060008114610345576040519150601f19603f3d011682016040523d82523d6000602084013e61034a565b606091505b5060405191935091506001600160a01b038716907f4232d48319210b7bc959a61fd7785051da1497df2a1400e3340f42a8a6efd541906103919088908890889088906107fd565b60405180910390a294509492505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103f49084906103f9565b505050565b600061044e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104ce9092919063ffffffff16565b905080516000148061046f57508080602001905181019061046f919061083d565b6103f45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610126565b60606104dd84846000856104e5565b949350505050565b6060824710156105465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610126565b600080866001600160a01b031685876040516105629190610866565b60006040518083038185875af1925050503d806000811461059f576040519150601f19603f3d011682016040523d82523d6000602084013e6105a4565b606091505b50915091506105b5878383876105c0565b979650505050505050565b6060831561062f578251600003610628576001600160a01b0385163b6106285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610126565b50816104dd565b6104dd83838151156106445781518083602001fd5b8060405162461bcd60e51b81526004016101269190610882565b80356001600160a01b038116811461067557600080fd5b919050565b60008060006060848603121561068f57600080fd5b6106988461065e565b9250602084013591506106ad6040850161065e565b90509250925092565b600080600080606085870312156106cc57600080fd5b6106d58561065e565b935060208501359250604085013567ffffffffffffffff808211156106f957600080fd5b818701915087601f83011261070d57600080fd5b81358181111561071c57600080fd5b88602082850101111561072e57600080fd5b95989497505060200194505050565b60005b83811015610758578181015183820152602001610740565b50506000910152565b6000815180845261077981602086016020860161073d565b601f01601f19169290920160200192915050565b82151581526040602082015260006104dd6040830184610761565b60208082526025908201527f576f726b657257616c6c65743a2063616c6c6572206973206e6f74207468652060408201526437bbb732b960d91b606082015260800190565b8183823760009101908152919050565b848152606060208201528260608201528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b60006020828403121561084f57600080fd5b8151801515811461085f57600080fd5b9392505050565b6000825161087881846020870161073d565b9190910192915050565b60208152600061085f602083018461076156fea2646970667358221220d02057af3360c3d7515f0c51ccbdc569010f38cdfa82f818a2c05e9a5553c30864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69328DEC EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x709D039D EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616E6E6F7420776974686472617720746F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25C JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A20455448207472616E73666572206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST POP PUSH2 0x270 JUMP JUMPDEST PUSH2 0x270 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xCBCDBDF10631A43CC99C80ACACE8232649421C3F4F73919F16013D47C83A687A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x308 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x4232D48319210B7BC959A61FD7785051DA1497DF2A1400E3340F42A8A6EFD541 SWAP1 PUSH2 0x391 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3F4 SWAP1 DUP5 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x46F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4DD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x5C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x62F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x628 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x126 JUMP JUMPDEST POP DUP2 PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x644 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x6AD PUSH1 0x40 DUP6 ADD PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D5 DUP6 PUSH2 0x65E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x740 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x779 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x73D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4DD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x878 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x85F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x761 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 KECCAK256 JUMPI 0xAF CALLER PUSH1 0xC3 0xD7 MLOAD PUSH0 0xC MLOAD 0xCC 0xBD 0xC5 PUSH10 0x10F38CDFA82F818A2C0 0x5E SWAP11 SSTORE MSTORE8 0xC3 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"263:1569:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1349:481;;;;;;;;;;-1:-1:-1;1349:481:9;;;;;:::i;:::-;;:::i;:::-;;376:35;;;;;;;;;;-1:-1:-1;376:35:9;;;;-1:-1:-1;;;;;376:35:9;;;;;;-1:-1:-1;;;;;689:32:16;;;671:51;;659:2;644:18;376:35:9;;;;;;;;341:29;;;;;;;;;;-1:-1:-1;341:29:9;;;;-1:-1:-1;;;;;341:29:9;;;1051:292;;;;;;;;;;-1:-1:-1;1051:292:9;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1349:481::-;501:5;;-1:-1:-1;;;;;501:5:9;487:10;:19;479:69;;;;-1:-1:-1;;;479:69:9;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1456:16:9;::::1;1448:74;;;::::0;-1:-1:-1;;;1448:74:9;;2912:2:16;1448:74:9::1;::::0;::::1;2894:21:16::0;2951:2;2931:18;;;2924:30;2990:34;2970:18;;;2963:62;-1:-1:-1;;;3041:18:16;;;3034:43;3094:19;;1448:74:9::1;2710:409:16::0;1448:74:9::1;-1:-1:-1::0;;;;;1545:19:9;::::1;1541:231;;1581:12;1599:2;-1:-1:-1::0;;;;;1599:7:9::1;1614:6;1599:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1580:45;;;1647:7;1639:53;;;::::0;-1:-1:-1;;;1639:53:9;;3536:2:16;1639:53:9::1;::::0;::::1;3518:21:16::0;3575:2;3555:18;;;3548:30;3614:34;3594:18;;;3587:62;-1:-1:-1;;;3665:18:16;;;3658:31;3706:19;;1639:53:9::1;3334:397:16::0;1639:53:9::1;1566:137;1541:231;;;1723:38;-1:-1:-1::0;;;;;1723:26:9;::::1;1750:2:::0;1754:6;1723:26:::1;:38::i;:::-;1795:28;::::0;;-1:-1:-1;;;;;3994:15:16;;;3976:34;;4041:2;4026:18;;4019:34;;;4089:15;;4069:18;;;4062:43;1795:28:9;;::::1;::::0;;;;3926:2:16;1795:28:9;;::::1;1349:481:::0;;;:::o;1051:292::-;1187:12;501:5;;1201:19;;-1:-1:-1;;;;;501:5:9;487:10;:19;479:69;;;;-1:-1:-1;;;479:69:9;;;;;;;:::i;:::-;1252:6:::1;-1:-1:-1::0;;;;;1252:11:9::1;1271:5;1278:4;;1252:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;1298:38:9::1;::::0;1232:51;;-1:-1:-1;1232:51:9;-1:-1:-1;;;;;;1298:38:9;::::1;::::0;::::1;::::0;::::1;::::0;1315:5;;1322:4;;;;1232:51;;1298:38:::1;:::i;:::-;;;;;;;;1051:292:::0;;;;;;;:::o;941:175:5:-;1050:58;;;-1:-1:-1;;;;;5132:32:16;;1050:58:5;;;5114:51:16;5181:18;;;;5174:34;;;1050:58:5;;;;;;;;;;5087:18:16;;;;1050:58:5;;;;;;;;-1:-1:-1;;;;;1050:58:5;-1:-1:-1;;;1050:58:5;;;1023:86;;1043:5;;1023:19;:86::i;:::-;941:175;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:5;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:5;;5703:2:16;5720:111:5;;;5685:21:16;5742:2;5722:18;;;5715:30;5781:34;5761:18;;;5754:62;-1:-1:-1;;;5832:18:16;;;5825:40;5882:19;;5720:111:5;5501:406:16;4108:223:6;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:6:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:6;;6114:2:16;5354:81:6;;;6096:21:16;6153:2;6133:18;;;6126:30;6192:34;6172:18;;;6165:62;-1:-1:-1;;;6243:18:16;;;6236:36;6289:19;;5354:81:6;5912:402:16;5354:81:6;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:6;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:6:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:6;;;8113:60;;;;-1:-1:-1;;;8113:60:6;;6813:2:16;8113:60:6;;;6795:21:16;6852:2;6832:18;;;6825:30;6891:31;6871:18;;;6864:59;6940:18;;8113:60:6;6611:353:16;8113:60:6;-1:-1:-1;8208:10:6;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:6;;;;;;;;:::i;14:173:16:-;82:20;;-1:-1:-1;;;;;131:31:16;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:328::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;453:2;442:9;438:18;425:32;415:42;;476:38;510:2;499:9;495:18;476:38;:::i;:::-;466:48;;192:328;;;;;:::o;733:733::-;821:6;829;837;845;898:2;886:9;877:7;873:23;869:32;866:52;;;914:1;911;904:12;866:52;937:29;956:9;937:29;:::i;:::-;927:39;;1013:2;1002:9;998:18;985:32;975:42;;1068:2;1057:9;1053:18;1040:32;1091:18;1132:2;1124:6;1121:14;1118:34;;;1148:1;1145;1138:12;1118:34;1186:6;1175:9;1171:22;1161:32;;1231:7;1224:4;1220:2;1216:13;1212:27;1202:55;;1253:1;1250;1243:12;1202:55;1293:2;1280:16;1319:2;1311:6;1308:14;1305:34;;;1335:1;1332;1325:12;1305:34;1380:7;1375:2;1366:6;1362:2;1358:15;1354:24;1351:37;1348:57;;;1401:1;1398;1391:12;1348:57;733:733;;;;-1:-1:-1;;1432:2:16;1424:11;;-1:-1:-1;;;733:733:16:o;1471:250::-;1556:1;1566:113;1580:6;1577:1;1574:13;1566:113;;;1656:11;;;1650:18;1637:11;;;1630:39;1602:2;1595:10;1566:113;;;-1:-1:-1;;1713:1:16;1695:16;;1688:27;1471:250::o;1726:270::-;1767:3;1805:5;1799:12;1832:6;1827:3;1820:19;1848:76;1917:6;1910:4;1905:3;1901:14;1894:4;1887:5;1883:16;1848:76;:::i;:::-;1978:2;1957:15;-1:-1:-1;;1953:29:16;1944:39;;;;1985:4;1940:50;;1726:270;-1:-1:-1;;1726:270:16:o;2001:298::-;2184:6;2177:14;2170:22;2159:9;2152:41;2229:2;2224;2213:9;2209:18;2202:30;2133:4;2249:44;2289:2;2278:9;2274:18;2266:6;2249:44;:::i;2304:401::-;2506:2;2488:21;;;2545:2;2525:18;;;2518:30;2584:34;2579:2;2564:18;;2557:62;-1:-1:-1;;;2650:2:16;2635:18;;2628:35;2695:3;2680:19;;2304:401::o;4116:271::-;4299:6;4291;4286:3;4273:33;4255:3;4325:16;;4350:13;;;4325:16;4116:271;-1:-1:-1;4116:271:16:o;4392:543::-;4599:6;4588:9;4581:25;4642:2;4637;4626:9;4622:18;4615:30;4681:6;4676:2;4665:9;4661:18;4654:34;4739:6;4731;4725:3;4714:9;4710:19;4697:49;4796:1;4766:22;;;4790:3;4762:32;;;4755:43;;;;4913:14;;4906:22;4901:2;4886:18;;4879:50;4859:2;4838:15;;;-1:-1:-1;;4834:29:16;4819:45;;;4815:55;;4392:543;-1:-1:-1;;4392:543:16:o;5219:277::-;5286:6;5339:2;5327:9;5318:7;5314:23;5310:32;5307:52;;;5355:1;5352;5345:12;5307:52;5387:9;5381:16;5440:5;5433:13;5426:21;5419:5;5416:32;5406:60;;5462:1;5459;5452:12;5406:60;5485:5;5219:277;-1:-1:-1;;;5219:277:16:o;6319:287::-;6448:3;6486:6;6480:13;6502:66;6561:6;6556:3;6549:4;6541:6;6537:17;6502:66;:::i;:::-;6584:16;;;;;6319:287;-1:-1:-1;;6319:287:16:o;6969:219::-;7118:2;7107:9;7100:21;7081:4;7138:44;7178:2;7167:9;7163:18;7155:6;7138:44;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"450200","executionCost":"infinite","totalCost":"infinite"},"external":{"execute(address,uint256,bytes)":"infinite","owner()":"2348","swapManager()":"2326","withdraw(address,uint256,address)":"infinite"}},"methodIdentifiers":{"execute(address,uint256,bytes)":"b61d27f6","owner()":"8da5cb5b","swapManager()":"709d039d","withdraw(address,uint256,address)":"69328dec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WorkerWallet.sol\":\"WorkerWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/WorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./interfaces/IWorkerWallet.sol\\\";\\nimport \\\"./interfaces/ISwapManager.sol\\\";\\n\\ncontract WorkerWallet is IWorkerWallet {\\n    using SafeERC20 for IERC20;\\n\\n    address public override owner;\\n    address public override swapManager;\\n    bool private initialized;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"WorkerWallet: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    modifier onlySwapManager() {\\n        require(msg.sender == swapManager, \\\"WorkerWallet: caller is not the swap manager\\\");\\n        _;\\n    }\\n\\n    constructor(address _owner, address _swapManager) {\\n        require(_owner != address(0), \\\"WorkerWallet: owner is zero address\\\");\\n        require(_swapManager != address(0), \\\"WorkerWallet: swap manager is zero address\\\");\\n        \\n        owner = _owner;\\n        swapManager = _swapManager;\\n    }\\n\\n    receive() external payable {}\\n\\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external override onlyOwner returns (bool success, bytes memory result) {\\n        (success, result) = target.call{value: value}(data);\\n        emit Executed(target, value, data, success);\\n    }\\n\\n    function withdraw(address token, uint256 amount, address to) external override onlyOwner {\\n        require(to != address(0), \\\"WorkerWallet: cannot withdraw to zero address\\\");\\n        \\n        if (token == address(0)) {\\n            (bool success, ) = to.call{value: amount}(\\\"\\\");\\n            require(success, \\\"WorkerWallet: ETH transfer failed\\\");\\n        } else {\\n            IERC20(token).safeTransfer(to, amount);\\n        }\\n        \\n        emit Withdrawn(token, amount, to);\\n    }\\n}\\n\",\"keccak256\":\"0xaf66df7911357536efec01ed1da116c560499107b75b27e5910a116172b675e4\",\"license\":\"MIT\"},\"contracts/interfaces/ISwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ISwapManager {\\n    struct SwapOrder {\\n        address initiator;\\n        address resolver;\\n        uint256 amountIn;\\n        uint256 amountOutMin;\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 deadline;\\n        bytes32 secretHash;\\n        bool isFulfilled;\\n        bool isRefunded;\\n    }\\n\\n    event OrderCreated(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n\\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        bytes32 secret\\n    );\\n\\n    event OrderRefunded(bytes32 indexed orderId);\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32);\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable;\\n\\n    function refundOrder(bytes32 orderId) external;\\n\\n    function getOrder(bytes32 orderId) external view returns (SwapOrder memory);\\n    \\n    /**\\n     * @notice Register a worker wallet that can be used to fulfill orders\\n     * @param workerWallet The address of the worker wallet to register\\n     */\\n    function registerWorkerWallet(address workerWallet) external;\\n}\\n\",\"keccak256\":\"0xab77d3bf5618e43532c34e3ba26ee043d7479e42b81d345953d47ac2db8e4bff\",\"license\":\"MIT\"},\"contracts/interfaces/IWorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IWorkerWallet {\\n    event Executed(address indexed target, uint256 value, bytes data, bool success);\\n    event Withdrawn(address token, uint256 amount, address to);\\n    \\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory result);\\n    \\n    function withdraw(address token, uint256 amount, address to) external;\\n    \\n    function owner() external view returns (address);\\n    \\n    function swapManager() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd06ff72662f22d4288875f589eb91c4cb09d28003282dce92e4cd56de351277c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2095,"contract":"contracts/WorkerWallet.sol:WorkerWallet","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2098,"contract":"contracts/WorkerWallet.sol:WorkerWallet","label":"swapManager","offset":0,"slot":"1","type":"t_address"},{"astId":2100,"contract":"contracts/WorkerWallet.sol:WorkerWallet","label":"initialized","offset":20,"slot":"1","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/WorkerWalletFactory.sol":{"WorkerWalletFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"wallet","type":"address"}],"name":"WorkerWalletCreated","type":"event"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_swapManager","type":"address"}],"name":"computeWorkerWalletAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_swapManager","type":"address"}],"name":"createWorkerWallet","outputs":[{"internalType":"address","name":"workerWallet","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getWorkerWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isWorkerWallet","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610f5c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631ac38190146100515780631f6d2eac14610081578063aa2dead7146100b4578063af295f35146100dd575b600080fd5b61006461005f36600461042b565b6100f0565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a461008f36600461045e565b60016020526000908152604090205460ff1681565b6040519015158152602001610078565b6100646100c236600461045e565b6000602081905290815260409020546001600160a01b031681565b6100646100eb36600461042b565b6101ce565b6040516001600160601b0319606084811b8216602084015283901b16603482015242604882015260009081906001600160f81b0319903090606801604051602081830303815290604052805190602001206040518060200161015190610402565b6020820181038252601f19601f82011660405250805190602001206040516020016101ae94939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051808303601f190181529190528051602090910120949350505050565b6001600160a01b038281166000908152602081905260408120549091161561024f5760405162461bcd60e51b815260206004820152602a60248201527f576f726b657257616c6c6574466163746f72793a2077616c6c657420616c72656044820152696164792065786973747360b01b606482015260840160405180910390fd5b60006040518060200161026190610402565b601f1982820381018352601f9091011660408181526001600160a01b038781166020840152861681830152805180830382018152606083019091529192506000906102b290849084906080016104b0565b60408051601f19818403018152908290526001600160601b0319606089811b8216602085015288901b1660348301524260488301529150600090606801604051602081830303815290604052805190602001209050808251602084016000f59450843b61031e57600080fd5b6001600160a01b0387811660009081526020818152604080832080546001600160a01b0319168a861690811790915580845260019283905292819020805460ff191690921790915551636808d58760e01b8152600481019190915290871690636808d58790602401600060405180830381600087803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b50506040516001600160a01b0388811682528a1692507f2c91a2feb7f5c7e0c5681eb540d51f84de98235a2e0b6104fd4356684bd96f72915060200160405180910390a25050505092915050565b610a59806104ce83390190565b80356001600160a01b038116811461042657600080fd5b919050565b6000806040838503121561043e57600080fd5b6104478361040f565b91506104556020840161040f565b90509250929050565b60006020828403121561047057600080fd5b6104798261040f565b9392505050565b6000815160005b818110156104a15760208185018101518683015201610487565b50600093019283525090919050565b60006104c56104bf8386610480565b84610480565b94935050505056fe608060405234801561001057600080fd5b50604051610a59380380610a5983398101604081905261002f9161014c565b6001600160a01b0382166100965760405162461bcd60e51b815260206004820152602360248201527f576f726b657257616c6c65743a206f776e6572206973207a65726f206164647260448201526265737360e81b60648201526084015b60405180910390fd5b6001600160a01b0381166100ff5760405162461bcd60e51b815260206004820152602a60248201527f576f726b657257616c6c65743a2073776170206d616e61676572206973207a65604482015269726f206164647265737360b01b606482015260840161008d565b600080546001600160a01b039384166001600160a01b0319918216179091556001805492909316911617905561017f565b80516001600160a01b038116811461014757600080fd5b919050565b6000806040838503121561015f57600080fd5b61016883610130565b915061017660208401610130565b90509250929050565b6108cb8061018e6000396000f3fe6080604052600436106100435760003560e01c806369328dec1461004f578063709d039d146100715780638da5cb5b146100ae578063b61d27f6146100ce57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a36600461067a565b6100fc565b005b34801561007d57600080fd5b50600154610091906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ba57600080fd5b50600054610091906001600160a01b031681565b3480156100da57600080fd5b506100ee6100e93660046106b6565b6102bf565b6040516100a592919061078d565b6000546001600160a01b0316331461012f5760405162461bcd60e51b8152600401610126906107a8565b60405180910390fd5b6001600160a01b03811661019b5760405162461bcd60e51b815260206004820152602d60248201527f576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f60448201526c207a65726f206164647265737360981b6064820152608401610126565b6001600160a01b03831661025c576000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146101f6576040519150601f19603f3d011682016040523d82523d6000602084013e6101fb565b606091505b50509050806102565760405162461bcd60e51b815260206004820152602160248201527f576f726b657257616c6c65743a20455448207472616e73666572206661696c656044820152601960fa1b6064820152608401610126565b50610270565b6102706001600160a01b03841682846103a2565b604080516001600160a01b0385811682526020820185905283168183015290517fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9181900360600190a1505050565b600080546060906001600160a01b031633146102ed5760405162461bcd60e51b8152600401610126906107a8565b856001600160a01b03168585856040516103089291906107ed565b60006040518083038185875af1925050503d8060008114610345576040519150601f19603f3d011682016040523d82523d6000602084013e61034a565b606091505b5060405191935091506001600160a01b038716907f4232d48319210b7bc959a61fd7785051da1497df2a1400e3340f42a8a6efd541906103919088908890889088906107fd565b60405180910390a294509492505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103f49084906103f9565b505050565b600061044e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104ce9092919063ffffffff16565b905080516000148061046f57508080602001905181019061046f919061083d565b6103f45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610126565b60606104dd84846000856104e5565b949350505050565b6060824710156105465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610126565b600080866001600160a01b031685876040516105629190610866565b60006040518083038185875af1925050503d806000811461059f576040519150601f19603f3d011682016040523d82523d6000602084013e6105a4565b606091505b50915091506105b5878383876105c0565b979650505050505050565b6060831561062f578251600003610628576001600160a01b0385163b6106285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610126565b50816104dd565b6104dd83838151156106445781518083602001fd5b8060405162461bcd60e51b81526004016101269190610882565b80356001600160a01b038116811461067557600080fd5b919050565b60008060006060848603121561068f57600080fd5b6106988461065e565b9250602084013591506106ad6040850161065e565b90509250925092565b600080600080606085870312156106cc57600080fd5b6106d58561065e565b935060208501359250604085013567ffffffffffffffff808211156106f957600080fd5b818701915087601f83011261070d57600080fd5b81358181111561071c57600080fd5b88602082850101111561072e57600080fd5b95989497505060200194505050565b60005b83811015610758578181015183820152602001610740565b50506000910152565b6000815180845261077981602086016020860161073d565b601f01601f19169290920160200192915050565b82151581526040602082015260006104dd6040830184610761565b60208082526025908201527f576f726b657257616c6c65743a2063616c6c6572206973206e6f74207468652060408201526437bbb732b960d91b606082015260800190565b8183823760009101908152919050565b848152606060208201528260608201528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b60006020828403121561084f57600080fd5b8151801515811461085f57600080fd5b9392505050565b6000825161087881846020870161073d565b9190910192915050565b60208152600061085f602083018461076156fea2646970667358221220d02057af3360c3d7515f0c51ccbdc569010f38cdfa82f818a2c05e9a5553c30864736f6c63430008140033a26469706673582212208a39c5294af50f77dbed166adc3a8ff885f61ba7947f4078435fe926b43353f764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1AC38190 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x1F6D2EAC EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xAA2DEAD7 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xAF295F35 EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP4 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x48 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 ADDRESS SWAP1 PUSH1 0x68 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x151 SWAP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C6574466163746F72793A2077616C6C657420616C7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x61647920657869737473 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x261 SWAP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP1 PUSH2 0x2B2 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x80 ADD PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP10 DUP2 SHL DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x34 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x48 DUP4 ADD MSTORE SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x68 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP5 POP DUP5 EXTCODESIZE PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP11 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x1 SWAP3 DUP4 SWAP1 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH4 0x6808D587 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 AND SWAP1 PUSH4 0x6808D587 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE DUP11 AND SWAP3 POP PUSH32 0x2C91A2FEB7F5C7E0C5681EB540D51F84DE98235A2E0B6104FD4356684BD96F72 SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA59 DUP1 PUSH2 0x4CE DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 DUP4 PUSH2 0x40F JUMP JUMPDEST SWAP2 POP PUSH2 0x455 PUSH1 0x20 DUP5 ADD PUSH2 0x40F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x479 DUP3 PUSH2 0x40F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0x487 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C5 PUSH2 0x4BF DUP4 DUP7 PUSH2 0x480 JUMP JUMPDEST DUP5 PUSH2 0x480 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA59 CODESIZE SUB DUP1 PUSH2 0xA59 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x14C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A206F776E6572206973207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2073776170206D616E61676572206973207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x17F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168 DUP4 PUSH2 0x130 JUMP JUMPDEST SWAP2 POP PUSH2 0x176 PUSH1 0x20 DUP5 ADD PUSH2 0x130 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CB DUP1 PUSH2 0x18E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69328DEC EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x709D039D EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616E6E6F7420776974686472617720746F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25C JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A20455448207472616E73666572206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST POP PUSH2 0x270 JUMP JUMPDEST PUSH2 0x270 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xCBCDBDF10631A43CC99C80ACACE8232649421C3F4F73919F16013D47C83A687A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x308 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x4232D48319210B7BC959A61FD7785051DA1497DF2A1400E3340F42A8A6EFD541 SWAP1 PUSH2 0x391 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3F4 SWAP1 DUP5 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x46F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4DD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x5C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x62F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x628 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x126 JUMP JUMPDEST POP DUP2 PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x644 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x6AD PUSH1 0x40 DUP6 ADD PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D5 DUP6 PUSH2 0x65E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x740 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x779 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x73D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4DD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x878 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x85F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x761 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 KECCAK256 JUMPI 0xAF CALLER PUSH1 0xC3 0xD7 MLOAD PUSH0 0xC MLOAD 0xCC 0xBD 0xC5 PUSH10 0x10F38CDFA82F818A2C0 0x5E SWAP11 SSTORE MSTORE8 0xC3 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 CODECOPY 0xC5 0x29 0x4A CREATE2 0xF PUSH24 0xDBED166ADC3A8FF885F61BA7947F4078435FE926B43353F7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"128:1952:10:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@computeWorkerWalletAddress_2412":{"entryPoint":240,"id":2412,"parameterSlots":2,"returnSlots":1},"@createWorkerWallet_2360":{"entryPoint":462,"id":2360,"parameterSlots":2,"returnSlots":1},"@getWorkerWallet_2274":{"entryPoint":null,"id":2274,"parameterSlots":0,"returnSlots":0},"@isWorkerWallet_2278":{"entryPoint":null,"id":2278,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":1039,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1067,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_bytes":{"entryPoint":1152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1200,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47df72e5deea8fdd3f5a86012c19a19aa8df1f9e3c75af6b7d82410051da9c1e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3207:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:16","statements":[{"nodeType":"YulAssignment","src":"73:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:16"},"nodeType":"YulFunctionCall","src":"82:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:16"}]},{"body":{"nodeType":"YulBlock","src":"165:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:16"},"nodeType":"YulFunctionCall","src":"167:12:16"},"nodeType":"YulExpressionStatement","src":"167:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:16"},"nodeType":"YulFunctionCall","src":"146:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:16"},"nodeType":"YulFunctionCall","src":"142:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:16"},"nodeType":"YulFunctionCall","src":"131:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:16"},"nodeType":"YulFunctionCall","src":"121:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:16"},"nodeType":"YulFunctionCall","src":"114:50:16"},"nodeType":"YulIf","src":"111:70:16"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:16","type":""}],"src":"14:173:16"},{"body":{"nodeType":"YulBlock","src":"279:173:16","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:16"},"nodeType":"YulFunctionCall","src":"327:12:16"},"nodeType":"YulExpressionStatement","src":"327:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:16"},"nodeType":"YulFunctionCall","src":"296:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:16"},"nodeType":"YulFunctionCall","src":"292:32:16"},"nodeType":"YulIf","src":"289:52:16"},{"nodeType":"YulAssignment","src":"350:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:16"},"nodeType":"YulFunctionCall","src":"360:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:16"}]},{"nodeType":"YulAssignment","src":"398:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"431:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"442:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"427:3:16"},"nodeType":"YulFunctionCall","src":"427:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"408:18:16"},"nodeType":"YulFunctionCall","src":"408:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:16","type":""}],"src":"192:260:16"},{"body":{"nodeType":"YulBlock","src":"558:102:16","statements":[{"nodeType":"YulAssignment","src":"568:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"580:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"591:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"576:3:16"},"nodeType":"YulFunctionCall","src":"576:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"568:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"610:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"625:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"641:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"646:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"637:3:16"},"nodeType":"YulFunctionCall","src":"637:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"650:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"633:3:16"},"nodeType":"YulFunctionCall","src":"633:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"621:3:16"},"nodeType":"YulFunctionCall","src":"621:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"603:6:16"},"nodeType":"YulFunctionCall","src":"603:51:16"},"nodeType":"YulExpressionStatement","src":"603:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"527:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"538:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"549:4:16","type":""}],"src":"457:203:16"},{"body":{"nodeType":"YulBlock","src":"735:116:16","statements":[{"body":{"nodeType":"YulBlock","src":"781:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"790:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"793:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"783:6:16"},"nodeType":"YulFunctionCall","src":"783:12:16"},"nodeType":"YulExpressionStatement","src":"783:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"756:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"765:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"752:3:16"},"nodeType":"YulFunctionCall","src":"752:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"777:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"748:3:16"},"nodeType":"YulFunctionCall","src":"748:32:16"},"nodeType":"YulIf","src":"745:52:16"},{"nodeType":"YulAssignment","src":"806:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"835:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"816:18:16"},"nodeType":"YulFunctionCall","src":"816:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"806:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"701:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"712:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"724:6:16","type":""}],"src":"665:186:16"},{"body":{"nodeType":"YulBlock","src":"951:92:16","statements":[{"nodeType":"YulAssignment","src":"961:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"973:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"984:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"969:3:16"},"nodeType":"YulFunctionCall","src":"969:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"961:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1003:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1028:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1021:6:16"},"nodeType":"YulFunctionCall","src":"1021:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1014:6:16"},"nodeType":"YulFunctionCall","src":"1014:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"996:6:16"},"nodeType":"YulFunctionCall","src":"996:41:16"},"nodeType":"YulExpressionStatement","src":"996:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"920:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"931:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"942:4:16","type":""}],"src":"856:187:16"},{"body":{"nodeType":"YulBlock","src":"1223:223:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1233:41:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1247:26:16","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1243:3:16"},"nodeType":"YulFunctionCall","src":"1243:31:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1237:2:16","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1290:3:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1303:2:16","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"1307:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1299:3:16"},"nodeType":"YulFunctionCall","src":"1299:15:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1316:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1295:3:16"},"nodeType":"YulFunctionCall","src":"1295:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1283:6:16"},"nodeType":"YulFunctionCall","src":"1283:37:16"},"nodeType":"YulExpressionStatement","src":"1283:37:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1340:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1345:2:16","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1336:3:16"},"nodeType":"YulFunctionCall","src":"1336:12:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1358:2:16","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"1362:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1354:3:16"},"nodeType":"YulFunctionCall","src":"1354:15:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1371:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1350:3:16"},"nodeType":"YulFunctionCall","src":"1350:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1329:6:16"},"nodeType":"YulFunctionCall","src":"1329:46:16"},"nodeType":"YulExpressionStatement","src":"1329:46:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1395:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1400:2:16","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1391:3:16"},"nodeType":"YulFunctionCall","src":"1391:12:16"},{"name":"value2","nodeType":"YulIdentifier","src":"1405:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1384:6:16"},"nodeType":"YulFunctionCall","src":"1384:28:16"},"nodeType":"YulExpressionStatement","src":"1384:28:16"},{"nodeType":"YulAssignment","src":"1421:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1432:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1437:2:16","type":"","value":"72"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1428:3:16"},"nodeType":"YulFunctionCall","src":"1428:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1421:3:16"}]}]},"name":"abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1183:3:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1188:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1196:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1204:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1215:3:16","type":""}],"src":"1048:398:16"},{"body":{"nodeType":"YulBlock","src":"1652:240:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1669:3:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1678:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1690:3:16","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"1695:3:16","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1686:3:16"},"nodeType":"YulFunctionCall","src":"1686:13:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1674:3:16"},"nodeType":"YulFunctionCall","src":"1674:26:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1662:6:16"},"nodeType":"YulFunctionCall","src":"1662:39:16"},"nodeType":"YulExpressionStatement","src":"1662:39:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1721:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:16"},"nodeType":"YulFunctionCall","src":"1717:11:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1738:2:16","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"1742:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1734:3:16"},"nodeType":"YulFunctionCall","src":"1734:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1755:26:16","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1751:3:16"},"nodeType":"YulFunctionCall","src":"1751:31:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1730:3:16"},"nodeType":"YulFunctionCall","src":"1730:53:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1710:6:16"},"nodeType":"YulFunctionCall","src":"1710:74:16"},"nodeType":"YulExpressionStatement","src":"1710:74:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1804:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1809:2:16","type":"","value":"21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1800:3:16"},"nodeType":"YulFunctionCall","src":"1800:12:16"},{"name":"value2","nodeType":"YulIdentifier","src":"1814:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1793:6:16"},"nodeType":"YulFunctionCall","src":"1793:28:16"},"nodeType":"YulExpressionStatement","src":"1793:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1841:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1846:2:16","type":"","value":"53"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1837:3:16"},"nodeType":"YulFunctionCall","src":"1837:12:16"},{"name":"value3","nodeType":"YulIdentifier","src":"1851:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1830:6:16"},"nodeType":"YulFunctionCall","src":"1830:28:16"},"nodeType":"YulExpressionStatement","src":"1830:28:16"},{"nodeType":"YulAssignment","src":"1867:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1878:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1883:2:16","type":"","value":"85"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:16"},"nodeType":"YulFunctionCall","src":"1874:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1867:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1604:3:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1609:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1617:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1625:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1633:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1644:3:16","type":""}],"src":"1451:441:16"},{"body":{"nodeType":"YulBlock","src":"2071:232:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2088:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2099:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2081:6:16"},"nodeType":"YulFunctionCall","src":"2081:21:16"},"nodeType":"YulExpressionStatement","src":"2081:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2122:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:16"},"nodeType":"YulFunctionCall","src":"2118:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"2138:2:16","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2111:6:16"},"nodeType":"YulFunctionCall","src":"2111:30:16"},"nodeType":"YulExpressionStatement","src":"2111:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2161:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2172:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2157:3:16"},"nodeType":"YulFunctionCall","src":"2157:18:16"},{"hexValue":"576f726b657257616c6c6574466163746f72793a2077616c6c657420616c7265","kind":"string","nodeType":"YulLiteral","src":"2177:34:16","type":"","value":"WorkerWalletFactory: wallet alre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2150:6:16"},"nodeType":"YulFunctionCall","src":"2150:62:16"},"nodeType":"YulExpressionStatement","src":"2150:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2232:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2243:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2228:3:16"},"nodeType":"YulFunctionCall","src":"2228:18:16"},{"hexValue":"61647920657869737473","kind":"string","nodeType":"YulLiteral","src":"2248:12:16","type":"","value":"ady exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:16"},"nodeType":"YulFunctionCall","src":"2221:40:16"},"nodeType":"YulExpressionStatement","src":"2221:40:16"},{"nodeType":"YulAssignment","src":"2270:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2282:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2293:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2278:3:16"},"nodeType":"YulFunctionCall","src":"2278:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2270:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_47df72e5deea8fdd3f5a86012c19a19aa8df1f9e3c75af6b7d82410051da9c1e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2048:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2062:4:16","type":""}],"src":"1897:406:16"},{"body":{"nodeType":"YulBlock","src":"2437:175:16","statements":[{"nodeType":"YulAssignment","src":"2447:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2459:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2470:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2455:3:16"},"nodeType":"YulFunctionCall","src":"2455:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2447:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"2482:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2500:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2505:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2496:3:16"},"nodeType":"YulFunctionCall","src":"2496:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"2509:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2492:3:16"},"nodeType":"YulFunctionCall","src":"2492:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2486:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2527:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2542:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2550:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2538:3:16"},"nodeType":"YulFunctionCall","src":"2538:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2520:6:16"},"nodeType":"YulFunctionCall","src":"2520:34:16"},"nodeType":"YulExpressionStatement","src":"2520:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2574:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2585:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2570:3:16"},"nodeType":"YulFunctionCall","src":"2570:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2594:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2602:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2590:3:16"},"nodeType":"YulFunctionCall","src":"2590:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2563:6:16"},"nodeType":"YulFunctionCall","src":"2563:43:16"},"nodeType":"YulExpressionStatement","src":"2563:43:16"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2398:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2409:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2417:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2428:4:16","type":""}],"src":"2308:304:16"},{"body":{"nodeType":"YulBlock","src":"2666:273:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2676:26:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2696:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2690:5:16"},"nodeType":"YulFunctionCall","src":"2690:12:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2680:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2711:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2720:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2715:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2782:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2807:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"2812:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2803:3:16"},"nodeType":"YulFunctionCall","src":"2803:11:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2830:5:16"},{"name":"i","nodeType":"YulIdentifier","src":"2837:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2826:3:16"},"nodeType":"YulFunctionCall","src":"2826:13:16"},{"kind":"number","nodeType":"YulLiteral","src":"2841:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2822:3:16"},"nodeType":"YulFunctionCall","src":"2822:24:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2816:5:16"},"nodeType":"YulFunctionCall","src":"2816:31:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2796:6:16"},"nodeType":"YulFunctionCall","src":"2796:52:16"},"nodeType":"YulExpressionStatement","src":"2796:52:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2741:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"2744:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2738:2:16"},"nodeType":"YulFunctionCall","src":"2738:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2752:21:16","statements":[{"nodeType":"YulAssignment","src":"2754:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2763:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"2766:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2759:3:16"},"nodeType":"YulFunctionCall","src":"2759:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2754:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"2734:3:16","statements":[]},"src":"2730:128:16"},{"nodeType":"YulVariableDeclaration","src":"2867:26:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2881:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2886:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2877:3:16"},"nodeType":"YulFunctionCall","src":"2877:16:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2871:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2909:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"2913:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2902:6:16"},"nodeType":"YulFunctionCall","src":"2902:13:16"},"nodeType":"YulExpressionStatement","src":"2902:13:16"},{"nodeType":"YulAssignment","src":"2924:9:16","value":{"name":"_1","nodeType":"YulIdentifier","src":"2931:2:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2924:3:16"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2643:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2650:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2658:3:16","type":""}],"src":"2617:322:16"},{"body":{"nodeType":"YulBlock","src":"3127:78:16","statements":[{"nodeType":"YulAssignment","src":"3137:62:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3161:6:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3186:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"3194:3:16"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"3169:16:16"},"nodeType":"YulFunctionCall","src":"3169:29:16"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"3144:16:16"},"nodeType":"YulFunctionCall","src":"3144:55:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3137:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3095:3:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3100:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3108:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3119:3:16","type":""}],"src":"2944:261:16"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), value2)\n        end := add(pos, 72)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(value0, shl(248, 255)))\n        mstore(add(pos, 1), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 21), value2)\n        mstore(add(pos, 53), value3)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_stringliteral_47df72e5deea8fdd3f5a86012c19a19aa8df1f9e3c75af6b7d82410051da9c1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"WorkerWalletFactory: wallet alre\")\n        mstore(add(headStart, 96), \"ady exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_bytes(value1, abi_encode_bytes(value0, pos))\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80631ac38190146100515780631f6d2eac14610081578063aa2dead7146100b4578063af295f35146100dd575b600080fd5b61006461005f36600461042b565b6100f0565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a461008f36600461045e565b60016020526000908152604090205460ff1681565b6040519015158152602001610078565b6100646100c236600461045e565b6000602081905290815260409020546001600160a01b031681565b6100646100eb36600461042b565b6101ce565b6040516001600160601b0319606084811b8216602084015283901b16603482015242604882015260009081906001600160f81b0319903090606801604051602081830303815290604052805190602001206040518060200161015190610402565b6020820181038252601f19601f82011660405250805190602001206040516020016101ae94939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051808303601f190181529190528051602090910120949350505050565b6001600160a01b038281166000908152602081905260408120549091161561024f5760405162461bcd60e51b815260206004820152602a60248201527f576f726b657257616c6c6574466163746f72793a2077616c6c657420616c72656044820152696164792065786973747360b01b606482015260840160405180910390fd5b60006040518060200161026190610402565b601f1982820381018352601f9091011660408181526001600160a01b038781166020840152861681830152805180830382018152606083019091529192506000906102b290849084906080016104b0565b60408051601f19818403018152908290526001600160601b0319606089811b8216602085015288901b1660348301524260488301529150600090606801604051602081830303815290604052805190602001209050808251602084016000f59450843b61031e57600080fd5b6001600160a01b0387811660009081526020818152604080832080546001600160a01b0319168a861690811790915580845260019283905292819020805460ff191690921790915551636808d58760e01b8152600481019190915290871690636808d58790602401600060405180830381600087803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b50506040516001600160a01b0388811682528a1692507f2c91a2feb7f5c7e0c5681eb540d51f84de98235a2e0b6104fd4356684bd96f72915060200160405180910390a25050505092915050565b610a59806104ce83390190565b80356001600160a01b038116811461042657600080fd5b919050565b6000806040838503121561043e57600080fd5b6104478361040f565b91506104556020840161040f565b90509250929050565b60006020828403121561047057600080fd5b6104798261040f565b9392505050565b6000815160005b818110156104a15760208185018101518683015201610487565b50600093019283525090919050565b60006104c56104bf8386610480565b84610480565b94935050505056fe608060405234801561001057600080fd5b50604051610a59380380610a5983398101604081905261002f9161014c565b6001600160a01b0382166100965760405162461bcd60e51b815260206004820152602360248201527f576f726b657257616c6c65743a206f776e6572206973207a65726f206164647260448201526265737360e81b60648201526084015b60405180910390fd5b6001600160a01b0381166100ff5760405162461bcd60e51b815260206004820152602a60248201527f576f726b657257616c6c65743a2073776170206d616e61676572206973207a65604482015269726f206164647265737360b01b606482015260840161008d565b600080546001600160a01b039384166001600160a01b0319918216179091556001805492909316911617905561017f565b80516001600160a01b038116811461014757600080fd5b919050565b6000806040838503121561015f57600080fd5b61016883610130565b915061017660208401610130565b90509250929050565b6108cb8061018e6000396000f3fe6080604052600436106100435760003560e01c806369328dec1461004f578063709d039d146100715780638da5cb5b146100ae578063b61d27f6146100ce57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a36600461067a565b6100fc565b005b34801561007d57600080fd5b50600154610091906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ba57600080fd5b50600054610091906001600160a01b031681565b3480156100da57600080fd5b506100ee6100e93660046106b6565b6102bf565b6040516100a592919061078d565b6000546001600160a01b0316331461012f5760405162461bcd60e51b8152600401610126906107a8565b60405180910390fd5b6001600160a01b03811661019b5760405162461bcd60e51b815260206004820152602d60248201527f576f726b657257616c6c65743a2063616e6e6f7420776974686472617720746f60448201526c207a65726f206164647265737360981b6064820152608401610126565b6001600160a01b03831661025c576000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146101f6576040519150601f19603f3d011682016040523d82523d6000602084013e6101fb565b606091505b50509050806102565760405162461bcd60e51b815260206004820152602160248201527f576f726b657257616c6c65743a20455448207472616e73666572206661696c656044820152601960fa1b6064820152608401610126565b50610270565b6102706001600160a01b03841682846103a2565b604080516001600160a01b0385811682526020820185905283168183015290517fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9181900360600190a1505050565b600080546060906001600160a01b031633146102ed5760405162461bcd60e51b8152600401610126906107a8565b856001600160a01b03168585856040516103089291906107ed565b60006040518083038185875af1925050503d8060008114610345576040519150601f19603f3d011682016040523d82523d6000602084013e61034a565b606091505b5060405191935091506001600160a01b038716907f4232d48319210b7bc959a61fd7785051da1497df2a1400e3340f42a8a6efd541906103919088908890889088906107fd565b60405180910390a294509492505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103f49084906103f9565b505050565b600061044e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104ce9092919063ffffffff16565b905080516000148061046f57508080602001905181019061046f919061083d565b6103f45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610126565b60606104dd84846000856104e5565b949350505050565b6060824710156105465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610126565b600080866001600160a01b031685876040516105629190610866565b60006040518083038185875af1925050503d806000811461059f576040519150601f19603f3d011682016040523d82523d6000602084013e6105a4565b606091505b50915091506105b5878383876105c0565b979650505050505050565b6060831561062f578251600003610628576001600160a01b0385163b6106285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610126565b50816104dd565b6104dd83838151156106445781518083602001fd5b8060405162461bcd60e51b81526004016101269190610882565b80356001600160a01b038116811461067557600080fd5b919050565b60008060006060848603121561068f57600080fd5b6106988461065e565b9250602084013591506106ad6040850161065e565b90509250925092565b600080600080606085870312156106cc57600080fd5b6106d58561065e565b935060208501359250604085013567ffffffffffffffff808211156106f957600080fd5b818701915087601f83011261070d57600080fd5b81358181111561071c57600080fd5b88602082850101111561072e57600080fd5b95989497505060200194505050565b60005b83811015610758578181015183820152602001610740565b50506000910152565b6000815180845261077981602086016020860161073d565b601f01601f19169290920160200192915050565b82151581526040602082015260006104dd6040830184610761565b60208082526025908201527f576f726b657257616c6c65743a2063616c6c6572206973206e6f74207468652060408201526437bbb732b960d91b606082015260800190565b8183823760009101908152919050565b848152606060208201528260608201528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b60006020828403121561084f57600080fd5b8151801515811461085f57600080fd5b9392505050565b6000825161087881846020870161073d565b9190910192915050565b60208152600061085f602083018461076156fea2646970667358221220d02057af3360c3d7515f0c51ccbdc569010f38cdfa82f818a2c05e9a5553c30864736f6c63430008140033a26469706673582212208a39c5294af50f77dbed166adc3a8ff885f61ba7947f4078435fe926b43353f764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1AC38190 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x1F6D2EAC EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xAA2DEAD7 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xAF295F35 EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x78 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP4 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x48 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 ADDRESS SWAP1 PUSH1 0x68 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x151 SWAP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C6574466163746F72793A2077616C6C657420616C7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x61647920657869737473 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x261 SWAP1 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP1 PUSH2 0x2B2 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x80 ADD PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP10 DUP2 SHL DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE DUP9 SWAP1 SHL AND PUSH1 0x34 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x48 DUP4 ADD MSTORE SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x68 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP5 POP DUP5 EXTCODESIZE PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP11 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x1 SWAP3 DUP4 SWAP1 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD PUSH4 0x6808D587 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 AND SWAP1 PUSH4 0x6808D587 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE DUP11 AND SWAP3 POP PUSH32 0x2C91A2FEB7F5C7E0C5681EB540D51F84DE98235A2E0B6104FD4356684BD96F72 SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA59 DUP1 PUSH2 0x4CE DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 DUP4 PUSH2 0x40F JUMP JUMPDEST SWAP2 POP PUSH2 0x455 PUSH1 0x20 DUP5 ADD PUSH2 0x40F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x479 DUP3 PUSH2 0x40F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0x487 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C5 PUSH2 0x4BF DUP4 DUP7 PUSH2 0x480 JUMP JUMPDEST DUP5 PUSH2 0x480 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA59 CODESIZE SUB DUP1 PUSH2 0xA59 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x14C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A206F776E6572206973207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2073776170206D616E61676572206973207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x17F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168 DUP4 PUSH2 0x130 JUMP JUMPDEST SWAP2 POP PUSH2 0x176 PUSH1 0x20 DUP5 ADD PUSH2 0x130 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CB DUP1 PUSH2 0x18E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69328DEC EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x709D039D EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616E6E6F7420776974686472617720746F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25C JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A20455448207472616E73666572206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST POP PUSH2 0x270 JUMP JUMPDEST PUSH2 0x270 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xCBCDBDF10631A43CC99C80ACACE8232649421C3F4F73919F16013D47C83A687A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x308 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x34A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x4232D48319210B7BC959A61FD7785051DA1497DF2A1400E3340F42A8A6EFD541 SWAP1 PUSH2 0x391 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3F4 SWAP1 DUP5 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x46F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x83D JUMP JUMPDEST PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4DD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x5C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x62F JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x628 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x126 JUMP JUMPDEST POP DUP2 PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x644 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x65E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x6AD PUSH1 0x40 DUP6 ADD PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D5 DUP6 PUSH2 0x65E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x740 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x779 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x73D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4DD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x576F726B657257616C6C65743A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x878 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x73D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x85F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x761 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 KECCAK256 JUMPI 0xAF CALLER PUSH1 0xC3 0xD7 MLOAD PUSH0 0xC MLOAD 0xCC 0xBD 0xC5 PUSH10 0x10F38CDFA82F818A2C0 0x5E SWAP11 SSTORE MSTORE8 0xC3 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 CODECOPY 0xC5 0x29 0x4A CREATE2 0xF PUSH24 0xDBED166ADC3A8FF885F61BA7947F4078435FE926B43353F7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"128:1952:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1626:452;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;621:32:16;;;603:51;;591:2;576:18;1626:452:10;;;;;;;;294:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1021:14:16;;1014:22;996:41;;984:2;969:18;294:46:10;856:187:16;238:50:10;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;238:50:10;;;351:1265;;;;;;:::i;:::-;;:::i;1626:452::-;1883:55;;-1:-1:-1;;;;;;1303:2:16;1299:15;;;1295:24;;1883:55:10;;;1283:37:16;1354:15;;;1350:24;1336:12;;;1329:46;1922:15:10;1391:12:16;;;1384:28;1721:7:10;;;;-1:-1:-1;;;;;;1812:12:10;1850:4;;1428:12:16;;1883:55:10;;;;;;;;;;;;1873:66;;;;;;1967:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1957:42;;;;;;1778:235;;;;;;;;;;-1:-1:-1;;;;;;1674:26:16;;;;1662:39;;1738:2;1734:15;;;;-1:-1:-1;;;;;;1730:53:16;1726:1;1717:11;;1710:74;1809:2;1800:12;;1793:28;1846:2;1837:12;;1830:28;1883:2;1874:12;;1451:441;1778:235:10;;;;;;;-1:-1:-1;;1778:235:10;;;;;;1755:268;;1778:235;1755:268;;;;;1626:452;-1:-1:-1;;;;1626:452:10:o;351:1265::-;-1:-1:-1;;;;;475:23:10;;;435:20;475:23;;;;;;;;;;;435:20;;475:23;:37;467:92;;;;-1:-1:-1;;;467:92:10;;2099:2:16;467:92:10;;;2081:21:16;2138:2;2118:18;;;2111:30;2177:34;2157:18;;;2150:62;-1:-1:-1;;;2228:18:16;;;2221:40;2278:19;;467:92:10;;;;;;;;627:21;651:31;;;;;;;;:::i;:::-;-1:-1:-1;;651:31:10;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2538:15:16;;;651:31:10;772:32;;2520:34:16;2590:15;;2570:18;;;2563:43;772:32:10;;;;;;;;;2455:18:16;;;772:32:10;;;651:31;;-1:-1:-1;;;906:43:10;;651:31;;772:32;;906:43;;;:::i;:::-;;;;-1:-1:-1;;906:43:10;;;;;;;;;;-1:-1:-1;;;;;;1303:2:16;1299:15;;;1295:24;;906:43:10;993:55;;1283:37:16;1354:15;;;1350:24;1336:12;;;1329:46;1032:15:10;1391:12:16;;;1384:28;906:43:10;-1:-1:-1;968:12:10;;1428::16;;993:55:10;;;;;;;;;;;;983:66;;;;;;968:81;;1156:4;1145:8;1139:15;1132:4;1122:8;1118:19;1115:1;1107:54;1091:70;;1196:12;1184:25;1174:81;;1239:1;1236;1229:12;1174:81;-1:-1:-1;;;;;1321:23:10;;;:15;:23;;;;;;;;;;;:38;;-1:-1:-1;;;;;;1321:38:10;;;;;;;;;;1369:28;;;-1:-1:-1;1369:28:10;;;;;;;;:35;;-1:-1:-1;;1369:35:10;;;;;;;1483:61;-1:-1:-1;;;1483:61:10;;;;;603:51:16;;;;1483:47:10;;;;;;576:18:16;;1483:61:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1568:41:10;;-1:-1:-1;;;;;621:32:16;;;603:51;;1568:41:10;;;-1:-1:-1;1568:41:10;;-1:-1:-1;591:2:16;576:18;1568:41:10;;;;;;;457:1159;;;;351:1265;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:173:16:-;82:20;;-1:-1:-1;;;;;131:31:16;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;665:186::-;724:6;777:2;765:9;756:7;752:23;748:32;745:52;;;793:1;790;783:12;745:52;816:29;835:9;816:29;:::i;:::-;806:39;665:186;-1:-1:-1;;;665:186:16:o;2617:322::-;2658:3;2696:5;2690:12;2720:1;2730:128;2744:6;2741:1;2738:13;2730:128;;;2841:4;2826:13;;;2822:24;;2816:31;2803:11;;;2796:52;2759:12;2730:128;;;-1:-1:-1;2913:1:16;2877:16;;2902:13;;;-1:-1:-1;2877:16:16;;2617:322;-1:-1:-1;2617:322:16:o;2944:261::-;3119:3;3144:55;3169:29;3194:3;3186:6;3169:29;:::i;:::-;3161:6;3144:55;:::i;:::-;3137:62;2944:261;-1:-1:-1;;;;2944:261:16:o"},"gasEstimates":{"creation":{"codeDepositCost":"786400","executionCost":"818","totalCost":"787218"},"external":{"computeWorkerWalletAddress(address,address)":"infinite","createWorkerWallet(address,address)":"infinite","getWorkerWallet(address)":"2572","isWorkerWallet(address)":"2531"}},"methodIdentifiers":{"computeWorkerWalletAddress(address,address)":"1ac38190","createWorkerWallet(address,address)":"af295f35","getWorkerWallet(address)":"aa2dead7","isWorkerWallet(address)":"1f6d2eac"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"WorkerWalletCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"name\":\"computeWorkerWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"name\":\"createWorkerWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"workerWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getWorkerWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWorkerWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WorkerWalletFactory.sol\":\"WorkerWalletFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/WorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./interfaces/IWorkerWallet.sol\\\";\\nimport \\\"./interfaces/ISwapManager.sol\\\";\\n\\ncontract WorkerWallet is IWorkerWallet {\\n    using SafeERC20 for IERC20;\\n\\n    address public override owner;\\n    address public override swapManager;\\n    bool private initialized;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"WorkerWallet: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    modifier onlySwapManager() {\\n        require(msg.sender == swapManager, \\\"WorkerWallet: caller is not the swap manager\\\");\\n        _;\\n    }\\n\\n    constructor(address _owner, address _swapManager) {\\n        require(_owner != address(0), \\\"WorkerWallet: owner is zero address\\\");\\n        require(_swapManager != address(0), \\\"WorkerWallet: swap manager is zero address\\\");\\n        \\n        owner = _owner;\\n        swapManager = _swapManager;\\n    }\\n\\n    receive() external payable {}\\n\\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external override onlyOwner returns (bool success, bytes memory result) {\\n        (success, result) = target.call{value: value}(data);\\n        emit Executed(target, value, data, success);\\n    }\\n\\n    function withdraw(address token, uint256 amount, address to) external override onlyOwner {\\n        require(to != address(0), \\\"WorkerWallet: cannot withdraw to zero address\\\");\\n        \\n        if (token == address(0)) {\\n            (bool success, ) = to.call{value: amount}(\\\"\\\");\\n            require(success, \\\"WorkerWallet: ETH transfer failed\\\");\\n        } else {\\n            IERC20(token).safeTransfer(to, amount);\\n        }\\n        \\n        emit Withdrawn(token, amount, to);\\n    }\\n}\\n\",\"keccak256\":\"0xaf66df7911357536efec01ed1da116c560499107b75b27e5910a116172b675e4\",\"license\":\"MIT\"},\"contracts/WorkerWalletFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./WorkerWallet.sol\\\";\\nimport \\\"./interfaces/ISwapManager.sol\\\";\\n\\ncontract WorkerWalletFactory {\\n    event WorkerWalletCreated(address indexed owner, address wallet);\\n    \\n    mapping(address => address) public getWorkerWallet;\\n    mapping(address => bool) public isWorkerWallet;\\n    \\n    function createWorkerWallet(address _owner, address _swapManager) external returns (address workerWallet) {\\n        require(getWorkerWallet[_owner] == address(0), \\\"WorkerWalletFactory: wallet already exists\\\");\\n        \\n        // Get the creation code of WorkerWallet\\n        bytes memory bytecode = type(WorkerWallet).creationCode;\\n        \\n        // Encode constructor arguments\\n        bytes memory constructorArgs = abi.encode(_owner, _swapManager);\\n        \\n        // Create the init code with constructor arguments\\n        bytes memory initCode = abi.encodePacked(bytecode, constructorArgs);\\n        \\n        bytes32 salt = keccak256(abi.encodePacked(_owner, _swapManager, block.timestamp));\\n        \\n        assembly {\\n            workerWallet := create2(0, add(initCode, 0x20), mload(initCode), salt)\\n            if iszero(extcodesize(workerWallet)) {\\n                revert(0, 0)\\n            }\\n        }\\n        \\n        // Register the worker wallet\\n        getWorkerWallet[_owner] = workerWallet;\\n        isWorkerWallet[workerWallet] = true;\\n        \\n        // Register the worker wallet with the swap manager\\n        ISwapManager(_swapManager).registerWorkerWallet(workerWallet);\\n        \\n        emit WorkerWalletCreated(_owner, workerWallet);\\n    }\\n    \\n    function computeWorkerWalletAddress(address _owner, address _swapManager) public view returns (address) {\\n        bytes32 hash = keccak256(\\n            abi.encodePacked(\\n                bytes1(0xff),\\n                address(this),\\n                keccak256(abi.encodePacked(_owner, _swapManager, block.timestamp)),\\n                keccak256(type(WorkerWallet).creationCode)\\n            )\\n        );\\n        return address(uint160(uint256(hash)));\\n    }\\n}\\n\",\"keccak256\":\"0x296a839af9d3d7dcb04322c0abf18d2755026358c99e03b92f38f8f7feaa6478\",\"license\":\"MIT\"},\"contracts/interfaces/ISwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ISwapManager {\\n    struct SwapOrder {\\n        address initiator;\\n        address resolver;\\n        uint256 amountIn;\\n        uint256 amountOutMin;\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 deadline;\\n        bytes32 secretHash;\\n        bool isFulfilled;\\n        bool isRefunded;\\n    }\\n\\n    event OrderCreated(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n\\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        bytes32 secret\\n    );\\n\\n    event OrderRefunded(bytes32 indexed orderId);\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32);\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable;\\n\\n    function refundOrder(bytes32 orderId) external;\\n\\n    function getOrder(bytes32 orderId) external view returns (SwapOrder memory);\\n    \\n    /**\\n     * @notice Register a worker wallet that can be used to fulfill orders\\n     * @param workerWallet The address of the worker wallet to register\\n     */\\n    function registerWorkerWallet(address workerWallet) external;\\n}\\n\",\"keccak256\":\"0xab77d3bf5618e43532c34e3ba26ee043d7479e42b81d345953d47ac2db8e4bff\",\"license\":\"MIT\"},\"contracts/interfaces/IWorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IWorkerWallet {\\n    event Executed(address indexed target, uint256 value, bytes data, bool success);\\n    event Withdrawn(address token, uint256 amount, address to);\\n    \\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory result);\\n    \\n    function withdraw(address token, uint256 amount, address to) external;\\n    \\n    function owner() external view returns (address);\\n    \\n    function swapManager() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd06ff72662f22d4288875f589eb91c4cb09d28003282dce92e4cd56de351277c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2274,"contract":"contracts/WorkerWalletFactory.sol:WorkerWalletFactory","label":"getWorkerWallet","offset":0,"slot":"0","type":"t_mapping(t_address,t_address)"},{"astId":2278,"contract":"contracts/WorkerWalletFactory.sol:WorkerWalletFactory","label":"isWorkerWallet","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ISwapManager.sol":{"ISwapManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"resolver","type":"address"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"OrderFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"OrderRefunded","type":"event"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"fulfillOrder","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getOrder","outputs":[{"components":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"}],"internalType":"struct ISwapManager.SwapOrder","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"refundOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"workerWallet","type":"address"}],"name":"registerWorkerWallet","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"registerWorkerWallet(address)":{"params":{"workerWallet":"The address of the worker wallet to register"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createOrder(address,address,uint256,uint256,uint256,bytes32)":"7535f2df","fulfillOrder(bytes32,uint256,bytes32)":"f6dccf2e","getOrder(bytes32)":"5778472a","refundOrder(bytes32)":"116a1d9a","registerWorkerWallet(address)":"6808d587"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"OrderFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"OrderRefunded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"fulfillOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"}],\"internalType\":\"struct ISwapManager.SwapOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"refundOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"workerWallet\",\"type\":\"address\"}],\"name\":\"registerWorkerWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"registerWorkerWallet(address)\":{\"params\":{\"workerWallet\":\"The address of the worker wallet to register\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"registerWorkerWallet(address)\":{\"notice\":\"Register a worker wallet that can be used to fulfill orders\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISwapManager.sol\":\"ISwapManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ISwapManager {\\n    struct SwapOrder {\\n        address initiator;\\n        address resolver;\\n        uint256 amountIn;\\n        uint256 amountOutMin;\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 deadline;\\n        bytes32 secretHash;\\n        bool isFulfilled;\\n        bool isRefunded;\\n    }\\n\\n    event OrderCreated(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n\\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        bytes32 secret\\n    );\\n\\n    event OrderRefunded(bytes32 indexed orderId);\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32);\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable;\\n\\n    function refundOrder(bytes32 orderId) external;\\n\\n    function getOrder(bytes32 orderId) external view returns (SwapOrder memory);\\n    \\n    /**\\n     * @notice Register a worker wallet that can be used to fulfill orders\\n     * @param workerWallet The address of the worker wallet to register\\n     */\\n    function registerWorkerWallet(address workerWallet) external;\\n}\\n\",\"keccak256\":\"0xab77d3bf5618e43532c34e3ba26ee043d7479e42b81d345953d47ac2db8e4bff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"registerWorkerWallet(address)":{"notice":"Register a worker wallet that can be used to fulfill orders"}},"version":1}}},"contracts/interfaces/IWorkerWallet.sol":{"IWorkerWallet":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swapManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute(address,uint256,bytes)":"b61d27f6","owner()":"8da5cb5b","swapManager()":"709d039d","withdraw(address,uint256,address)":"69328dec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWorkerWallet.sol\":\"IWorkerWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IWorkerWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IWorkerWallet {\\n    event Executed(address indexed target, uint256 value, bytes data, bool success);\\n    event Withdrawn(address token, uint256 amount, address to);\\n    \\n    function execute(\\n        address target,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bool success, bytes memory result);\\n    \\n    function withdraw(address token, uint256 amount, address to) external;\\n    \\n    function owner() external view returns (address);\\n    \\n    function swapManager() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd06ff72662f22d4288875f589eb91c4cb09d28003282dce92e4cd56de351277c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mock/ERC20Mock.sol":{"ERC20Mock":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_109":{"entryPoint":null,"id":109,"parameterSlots":2,"returnSlots":0},"@_2594":{"entryPoint":null,"id":2594,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_650":{"entryPoint":null,"id":650,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_639":{"entryPoint":324,"id":639,"parameterSlots":3,"returnSlots":0},"@_mint_468":{"entryPoint":126,"id":468,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":351,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory":{"entryPoint":526,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":987,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":701,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":641,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":329,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4974:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:16"},"nodeType":"YulFunctionCall","src":"66:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:16"},"nodeType":"YulFunctionCall","src":"56:31:16"},"nodeType":"YulExpressionStatement","src":"56:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:16"},"nodeType":"YulFunctionCall","src":"96:15:16"},"nodeType":"YulExpressionStatement","src":"96:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:16"},"nodeType":"YulFunctionCall","src":"120:15:16"},"nodeType":"YulExpressionStatement","src":"120:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:16"},{"body":{"nodeType":"YulBlock","src":"210:776:16","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:16"},"nodeType":"YulFunctionCall","src":"261:12:16"},"nodeType":"YulExpressionStatement","src":"261:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:16"},"nodeType":"YulFunctionCall","src":"234:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:16"},"nodeType":"YulFunctionCall","src":"230:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:16"},"nodeType":"YulFunctionCall","src":"223:35:16"},"nodeType":"YulIf","src":"220:55:16"},{"nodeType":"YulVariableDeclaration","src":"284:23:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:16"},"nodeType":"YulFunctionCall","src":"294:13:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:16"},"nodeType":"YulFunctionCall","src":"330:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:16"},"nodeType":"YulFunctionCall","src":"326:18:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:16"},"nodeType":"YulFunctionCall","src":"369:18:16"},"nodeType":"YulExpressionStatement","src":"369:18:16"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:16"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:16"},"nodeType":"YulFunctionCall","src":"356:10:16"},"nodeType":"YulIf","src":"353:36:16"},{"nodeType":"YulVariableDeclaration","src":"398:17:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:16"},"nodeType":"YulFunctionCall","src":"408:7:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:16"},"nodeType":"YulFunctionCall","src":"438:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:16"},"nodeType":"YulFunctionCall","src":"498:13:16"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:16"},"nodeType":"YulFunctionCall","src":"494:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:16"},"nodeType":"YulFunctionCall","src":"490:31:16"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:16"},"nodeType":"YulFunctionCall","src":"486:40:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:16"},"nodeType":"YulFunctionCall","src":"474:53:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:16"},"nodeType":"YulFunctionCall","src":"588:18:16"},"nodeType":"YulExpressionStatement","src":"588:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:16"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:16"},"nodeType":"YulFunctionCall","src":"542:18:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:16"},"nodeType":"YulFunctionCall","src":"562:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:16"},"nodeType":"YulFunctionCall","src":"539:46:16"},"nodeType":"YulIf","src":"536:72:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:16"},"nodeType":"YulFunctionCall","src":"617:22:16"},"nodeType":"YulExpressionStatement","src":"617:22:16"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:16"},"nodeType":"YulFunctionCall","src":"648:18:16"},"nodeType":"YulExpressionStatement","src":"648:18:16"},{"nodeType":"YulVariableDeclaration","src":"675:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:16","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:16"},"nodeType":"YulFunctionCall","src":"737:12:16"},"nodeType":"YulExpressionStatement","src":"737:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:16"},"nodeType":"YulFunctionCall","src":"708:15:16"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:16"},"nodeType":"YulFunctionCall","src":"704:24:16"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:16"},"nodeType":"YulFunctionCall","src":"701:33:16"},"nodeType":"YulIf","src":"698:53:16"},{"nodeType":"YulVariableDeclaration","src":"760:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:16"},"nodeType":"YulFunctionCall","src":"850:14:16"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:16"},"nodeType":"YulFunctionCall","src":"846:23:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:16"},"nodeType":"YulFunctionCall","src":"881:14:16"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:16"},"nodeType":"YulFunctionCall","src":"877:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:16"},"nodeType":"YulFunctionCall","src":"871:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:16"},"nodeType":"YulFunctionCall","src":"839:63:16"},"nodeType":"YulExpressionStatement","src":"839:63:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:16"},"nodeType":"YulFunctionCall","src":"787:9:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:16","statements":[{"nodeType":"YulAssignment","src":"799:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:16"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:16"},"nodeType":"YulFunctionCall","src":"804:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:16","statements":[]},"src":"779:133:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:16"},"nodeType":"YulFunctionCall","src":"932:15:16"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:16"},"nodeType":"YulFunctionCall","src":"928:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:16"},"nodeType":"YulFunctionCall","src":"921:35:16"},"nodeType":"YulExpressionStatement","src":"921:35:16"},{"nodeType":"YulAssignment","src":"965:15:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:16"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:16","type":""}],"src":"146:840:16"},{"body":{"nodeType":"YulBlock","src":"1126:488:16","statements":[{"body":{"nodeType":"YulBlock","src":"1172:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1181:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1184:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1174:6:16"},"nodeType":"YulFunctionCall","src":"1174:12:16"},"nodeType":"YulExpressionStatement","src":"1174:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1147:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1156:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1143:3:16"},"nodeType":"YulFunctionCall","src":"1143:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1168:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1139:3:16"},"nodeType":"YulFunctionCall","src":"1139:32:16"},"nodeType":"YulIf","src":"1136:52:16"},{"nodeType":"YulVariableDeclaration","src":"1197:30:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1217:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1211:5:16"},"nodeType":"YulFunctionCall","src":"1211:16:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1201:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1236:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1254:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1258:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1250:3:16"},"nodeType":"YulFunctionCall","src":"1250:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1262:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1246:3:16"},"nodeType":"YulFunctionCall","src":"1246:18:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1240:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1291:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1300:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1303:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1293:6:16"},"nodeType":"YulFunctionCall","src":"1293:12:16"},"nodeType":"YulExpressionStatement","src":"1293:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1279:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1287:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1276:2:16"},"nodeType":"YulFunctionCall","src":"1276:14:16"},"nodeType":"YulIf","src":"1273:34:16"},{"nodeType":"YulAssignment","src":"1316:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1359:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1370:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1355:3:16"},"nodeType":"YulFunctionCall","src":"1355:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1379:7:16"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1326:28:16"},"nodeType":"YulFunctionCall","src":"1326:61:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1316:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1396:41:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1422:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1433:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1418:3:16"},"nodeType":"YulFunctionCall","src":"1418:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1412:5:16"},"nodeType":"YulFunctionCall","src":"1412:25:16"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1400:8:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1466:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1475:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1478:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1468:6:16"},"nodeType":"YulFunctionCall","src":"1468:12:16"},"nodeType":"YulExpressionStatement","src":"1468:12:16"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1452:8:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1462:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1449:2:16"},"nodeType":"YulFunctionCall","src":"1449:16:16"},"nodeType":"YulIf","src":"1446:36:16"},{"nodeType":"YulAssignment","src":"1491:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1534:9:16"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1545:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1530:3:16"},"nodeType":"YulFunctionCall","src":"1530:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1556:7:16"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1501:28:16"},"nodeType":"YulFunctionCall","src":"1501:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1491:6:16"}]},{"nodeType":"YulAssignment","src":"1573:35:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1593:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1604:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1589:3:16"},"nodeType":"YulFunctionCall","src":"1589:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1583:5:16"},"nodeType":"YulFunctionCall","src":"1583:25:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1573:6:16"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1076:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1087:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1099:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1107:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1115:6:16","type":""}],"src":"991:623:16"},{"body":{"nodeType":"YulBlock","src":"1674:325:16","statements":[{"nodeType":"YulAssignment","src":"1684:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1698:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1701:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1694:3:16"},"nodeType":"YulFunctionCall","src":"1694:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1684:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1715:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1745:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1751:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1741:3:16"},"nodeType":"YulFunctionCall","src":"1741:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1719:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1792:31:16","statements":[{"nodeType":"YulAssignment","src":"1794:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1808:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1816:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1804:3:16"},"nodeType":"YulFunctionCall","src":"1804:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1794:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1772:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1765:6:16"},"nodeType":"YulFunctionCall","src":"1765:26:16"},"nodeType":"YulIf","src":"1762:61:16"},{"body":{"nodeType":"YulBlock","src":"1882:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1903:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1910:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1915:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1906:3:16"},"nodeType":"YulFunctionCall","src":"1906:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1896:6:16"},"nodeType":"YulFunctionCall","src":"1896:31:16"},"nodeType":"YulExpressionStatement","src":"1896:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1947:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1950:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:16"},"nodeType":"YulFunctionCall","src":"1940:15:16"},"nodeType":"YulExpressionStatement","src":"1940:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1975:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1978:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1968:6:16"},"nodeType":"YulFunctionCall","src":"1968:15:16"},"nodeType":"YulExpressionStatement","src":"1968:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1838:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1861:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1869:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1858:2:16"},"nodeType":"YulFunctionCall","src":"1858:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1835:2:16"},"nodeType":"YulFunctionCall","src":"1835:38:16"},"nodeType":"YulIf","src":"1832:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1654:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1663:6:16","type":""}],"src":"1619:380:16"},{"body":{"nodeType":"YulBlock","src":"2060:65:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2077:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2080:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2070:6:16"},"nodeType":"YulFunctionCall","src":"2070:14:16"},"nodeType":"YulExpressionStatement","src":"2070:14:16"},{"nodeType":"YulAssignment","src":"2093:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2111:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2114:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2101:9:16"},"nodeType":"YulFunctionCall","src":"2101:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2093:4:16"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2043:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2051:4:16","type":""}],"src":"2004:121:16"},{"body":{"nodeType":"YulBlock","src":"2211:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"2244:425:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2258:11:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2268:1:16","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2262:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2289:2:16"},{"name":"array","nodeType":"YulIdentifier","src":"2293:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2282:6:16"},"nodeType":"YulFunctionCall","src":"2282:17:16"},"nodeType":"YulExpressionStatement","src":"2282:17:16"},{"nodeType":"YulVariableDeclaration","src":"2312:31:16","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2334:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"2338:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2324:9:16"},"nodeType":"YulFunctionCall","src":"2324:19:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2316:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2356:57:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2379:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2389:1:16","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2396:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2408:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:16"},"nodeType":"YulFunctionCall","src":"2392:19:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2385:3:16"},"nodeType":"YulFunctionCall","src":"2385:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2375:3:16"},"nodeType":"YulFunctionCall","src":"2375:38:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2360:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2450:23:16","statements":[{"nodeType":"YulAssignment","src":"2452:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"2467:4:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2452:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2432:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2444:4:16","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2429:2:16"},"nodeType":"YulFunctionCall","src":"2429:20:16"},"nodeType":"YulIf","src":"2426:47:16"},{"nodeType":"YulVariableDeclaration","src":"2486:41:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2500:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2510:1:16","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2517:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2522:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2513:3:16"},"nodeType":"YulFunctionCall","src":"2513:12:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2506:3:16"},"nodeType":"YulFunctionCall","src":"2506:20:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2496:3:16"},"nodeType":"YulFunctionCall","src":"2496:31:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2490:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2540:24:16","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2553:11:16"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2544:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2638:21:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2647:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2654:2:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2640:6:16"},"nodeType":"YulFunctionCall","src":"2640:17:16"},"nodeType":"YulExpressionStatement","src":"2640:17:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2588:5:16"},{"name":"_2","nodeType":"YulIdentifier","src":"2595:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2585:2:16"},"nodeType":"YulFunctionCall","src":"2585:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2599:26:16","statements":[{"nodeType":"YulAssignment","src":"2601:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2614:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2621:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2610:3:16"},"nodeType":"YulFunctionCall","src":"2610:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2601:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"2581:3:16","statements":[]},"src":"2577:82:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2227:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2232:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2224:2:16"},"nodeType":"YulFunctionCall","src":"2224:11:16"},"nodeType":"YulIf","src":"2221:448:16"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2183:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2190:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2195:10:16","type":""}],"src":"2130:545:16"},{"body":{"nodeType":"YulBlock","src":"2765:81:16","statements":[{"nodeType":"YulAssignment","src":"2775:65:16","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2790:4:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2808:1:16","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2811:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2804:3:16"},"nodeType":"YulFunctionCall","src":"2804:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2821:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2817:3:16"},"nodeType":"YulFunctionCall","src":"2817:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2800:3:16"},"nodeType":"YulFunctionCall","src":"2800:24:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2796:3:16"},"nodeType":"YulFunctionCall","src":"2796:29:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2786:3:16"},"nodeType":"YulFunctionCall","src":"2786:40:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2832:1:16","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2835:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2828:3:16"},"nodeType":"YulFunctionCall","src":"2828:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2783:2:16"},"nodeType":"YulFunctionCall","src":"2783:57:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2775:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2742:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2748:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2756:4:16","type":""}],"src":"2680:166:16"},{"body":{"nodeType":"YulBlock","src":"2947:1256:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2957:24:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2977:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2971:5:16"},"nodeType":"YulFunctionCall","src":"2971:10:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2961:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3024:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3026:16:16"},"nodeType":"YulFunctionCall","src":"3026:18:16"},"nodeType":"YulExpressionStatement","src":"3026:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2996:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3012:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3016:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3008:3:16"},"nodeType":"YulFunctionCall","src":"3008:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"3020:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3004:3:16"},"nodeType":"YulFunctionCall","src":"3004:18:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2993:2:16"},"nodeType":"YulFunctionCall","src":"2993:30:16"},"nodeType":"YulIf","src":"2990:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3099:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3137:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3131:5:16"},"nodeType":"YulFunctionCall","src":"3131:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3105:25:16"},"nodeType":"YulFunctionCall","src":"3105:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"3145:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3055:43:16"},"nodeType":"YulFunctionCall","src":"3055:97:16"},"nodeType":"YulExpressionStatement","src":"3055:97:16"},{"nodeType":"YulVariableDeclaration","src":"3161:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3178:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3165:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3188:23:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3207:4:16","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3192:11:16","type":""}]},{"nodeType":"YulAssignment","src":"3220:24:16","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3233:11:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3220:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3290:656:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3304:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3323:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3335:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3331:3:16"},"nodeType":"YulFunctionCall","src":"3331:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3319:3:16"},"nodeType":"YulFunctionCall","src":"3319:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3308:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3352:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3396:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3366:29:16"},"nodeType":"YulFunctionCall","src":"3366:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3356:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3414:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3423:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3418:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3501:172:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3526:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3544:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3549:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3540:3:16"},"nodeType":"YulFunctionCall","src":"3540:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3534:5:16"},"nodeType":"YulFunctionCall","src":"3534:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3519:6:16"},"nodeType":"YulFunctionCall","src":"3519:42:16"},"nodeType":"YulExpressionStatement","src":"3519:42:16"},{"nodeType":"YulAssignment","src":"3578:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3592:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3600:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3588:3:16"},"nodeType":"YulFunctionCall","src":"3588:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3578:6:16"}]},{"nodeType":"YulAssignment","src":"3619:40:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3636:9:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3647:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3632:3:16"},"nodeType":"YulFunctionCall","src":"3632:27:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3619:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3448:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3451:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3445:2:16"},"nodeType":"YulFunctionCall","src":"3445:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3460:28:16","statements":[{"nodeType":"YulAssignment","src":"3462:24:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3471:1:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3474:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3467:3:16"},"nodeType":"YulFunctionCall","src":"3467:19:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3462:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3441:3:16","statements":[]},"src":"3437:236:16"},{"body":{"nodeType":"YulBlock","src":"3721:166:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3739:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3766:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3771:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3762:3:16"},"nodeType":"YulFunctionCall","src":"3762:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3756:5:16"},"nodeType":"YulFunctionCall","src":"3756:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3743:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3806:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3818:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3845:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3848:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3841:3:16"},"nodeType":"YulFunctionCall","src":"3841:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3857:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3837:3:16"},"nodeType":"YulFunctionCall","src":"3837:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3867:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3863:3:16"},"nodeType":"YulFunctionCall","src":"3863:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3833:3:16"},"nodeType":"YulFunctionCall","src":"3833:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3829:3:16"},"nodeType":"YulFunctionCall","src":"3829:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3814:3:16"},"nodeType":"YulFunctionCall","src":"3814:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3799:6:16"},"nodeType":"YulFunctionCall","src":"3799:74:16"},"nodeType":"YulExpressionStatement","src":"3799:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3692:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"3701:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3689:2:16"},"nodeType":"YulFunctionCall","src":"3689:19:16"},"nodeType":"YulIf","src":"3686:201:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3907:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3921:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3924:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3917:3:16"},"nodeType":"YulFunctionCall","src":"3917:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3933:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3913:3:16"},"nodeType":"YulFunctionCall","src":"3913:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3900:6:16"},"nodeType":"YulFunctionCall","src":"3900:36:16"},"nodeType":"YulExpressionStatement","src":"3900:36:16"}]},"nodeType":"YulCase","src":"3283:663:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3288:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3963:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3977:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3990:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3981:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4026:67:16","statements":[{"nodeType":"YulAssignment","src":"4044:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4063:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4068:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4059:3:16"},"nodeType":"YulFunctionCall","src":"4059:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4053:5:16"},"nodeType":"YulFunctionCall","src":"4053:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4044:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4007:6:16"},"nodeType":"YulIf","src":"4004:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4113:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4172:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"4179:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4119:52:16"},"nodeType":"YulFunctionCall","src":"4119:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4106:6:16"},"nodeType":"YulFunctionCall","src":"4106:81:16"},"nodeType":"YulExpressionStatement","src":"4106:81:16"}]},"nodeType":"YulCase","src":"3955:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3263:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3271:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3260:2:16"},"nodeType":"YulFunctionCall","src":"3260:14:16"},"nodeType":"YulSwitch","src":"3253:944:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2932:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"2938:3:16","type":""}],"src":"2851:1352:16"},{"body":{"nodeType":"YulBlock","src":"4382:181:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4399:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4410:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4392:6:16"},"nodeType":"YulFunctionCall","src":"4392:21:16"},"nodeType":"YulExpressionStatement","src":"4392:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4433:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4444:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4429:3:16"},"nodeType":"YulFunctionCall","src":"4429:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"4449:2:16","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4422:6:16"},"nodeType":"YulFunctionCall","src":"4422:30:16"},"nodeType":"YulExpressionStatement","src":"4422:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4472:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4483:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4468:3:16"},"nodeType":"YulFunctionCall","src":"4468:18:16"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"4488:33:16","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4461:6:16"},"nodeType":"YulFunctionCall","src":"4461:61:16"},"nodeType":"YulExpressionStatement","src":"4461:61:16"},{"nodeType":"YulAssignment","src":"4531:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4543:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4554:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4539:3:16"},"nodeType":"YulFunctionCall","src":"4539:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4531:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4359:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4373:4:16","type":""}],"src":"4208:355:16"},{"body":{"nodeType":"YulBlock","src":"4616:174:16","statements":[{"nodeType":"YulAssignment","src":"4626:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4637:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"4640:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4633:3:16"},"nodeType":"YulFunctionCall","src":"4633:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4626:3:16"}]},{"body":{"nodeType":"YulBlock","src":"4673:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4694:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4701:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4706:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4697:3:16"},"nodeType":"YulFunctionCall","src":"4697:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4687:6:16"},"nodeType":"YulFunctionCall","src":"4687:31:16"},"nodeType":"YulExpressionStatement","src":"4687:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4738:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4741:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4731:6:16"},"nodeType":"YulFunctionCall","src":"4731:15:16"},"nodeType":"YulExpressionStatement","src":"4731:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4766:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4769:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4759:6:16"},"nodeType":"YulFunctionCall","src":"4759:15:16"},"nodeType":"YulExpressionStatement","src":"4759:15:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4657:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"4660:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4654:2:16"},"nodeType":"YulFunctionCall","src":"4654:10:16"},"nodeType":"YulIf","src":"4651:133:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4599:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"4602:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4608:3:16","type":""}],"src":"4568:222:16"},{"body":{"nodeType":"YulBlock","src":"4896:76:16","statements":[{"nodeType":"YulAssignment","src":"4906:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4918:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4929:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4914:3:16"},"nodeType":"YulFunctionCall","src":"4914:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4906:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4948:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"4959:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4941:6:16"},"nodeType":"YulFunctionCall","src":"4941:25:16"},"nodeType":"YulExpressionStatement","src":"4941:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4865:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4876:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4887:4:16","type":""}],"src":"4795:177:16"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000ebb38038062000ebb83398101604081905262000034916200020e565b828260036200004483826200030f565b5060046200005382826200030f565b5050506200006833826200007e60201b60201c565b50506005805460ff191660121790555062000403565b6001600160a01b038216620000d95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000ed9190620003db565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017157600080fd5b81516001600160401b03808211156200018e576200018e62000149565b604051601f8301601f19908116603f01168101908282118183101715620001b957620001b962000149565b81604052838152602092508683858801011115620001d657600080fd5b600091505b83821015620001fa5785820183015181830184015290820190620001db565b600093810190920192909252949350505050565b6000806000606084860312156200022457600080fd5b83516001600160401b03808211156200023c57600080fd5b6200024a878388016200015f565b945060208601519150808211156200026157600080fd5b5062000270868287016200015f565b925050604084015190509250925092565b600181811c908216806200029657607f821691505b602082108103620002b757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014457600081815260208120601f850160051c81016020861015620002e65750805b601f850160051c820191505b818110156200030757828155600101620002f2565b505050505050565b81516001600160401b038111156200032b576200032b62000149565b62000343816200033c845462000281565b84620002bd565b602080601f8311600181146200037b5760008415620003625750858301515b600019600386901b1c1916600185901b17855562000307565b600085815260208120601f198616915b82811015620003ac578886015182559484019460019091019084016200038b565b5085821015620003cb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003fd57634e487b7160e01b600052601160045260246000fd5b92915050565b610aa880620004136000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146101a8578063a457c2d7146101bb578063a9059cbb146101ce578063dd62ed3e146101e157600080fd5b806340c10f191461016257806370a082311461017757806395d89b41146101a057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101f4565b6040516100e991906108f2565b60405180910390f35b61010561010036600461095c565b610286565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610986565b6102a0565b60055460405160ff90911681526020016100e9565b61010561015d36600461095c565b6102c4565b61017561017036600461095c565b6102e6565b005b6101196101853660046109c2565b6001600160a01b031660009081526020819052604090205490565b6100dc6102f4565b6101756101b636600461095c565b610303565b6101056101c936600461095c565b61030d565b6101056101dc36600461095c565b61038d565b6101196101ef3660046109e4565b61039b565b60606003805461020390610a17565b80601f016020809104026020016040519081016040528092919081815260200182805461022f90610a17565b801561027c5780601f106102515761010080835404028352916020019161027c565b820191906000526020600020905b81548152906001019060200180831161025f57829003601f168201915b5050505050905090565b6000336102948185856103c6565b60019150505b92915050565b6000336102ae8582856104eb565b6102b9858585610565565b506001949350505050565b6000336102948185856102d7838361039b565b6102e19190610a51565b6103c6565b6102f08282610709565b5050565b60606004805461020390610a17565b6102f082826107c8565b6000338161031b828661039b565b9050838110156103805760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102b982868684036103c6565b600033610294818585610565565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610377565b6001600160a01b0382166104895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610377565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006104f7848461039b565b9050600019811461055f57818110156105525760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610377565b61055f84848484036103c6565b50505050565b6001600160a01b0383166105c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610377565b6001600160a01b03821661062b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610377565b6001600160a01b038316600090815260208190526040902054818110156106a35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610377565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361055f565b6001600160a01b03821661075f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610377565b80600260008282546107719190610a51565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108285760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610377565b6001600160a01b0382166000908152602081905260409020548181101561089c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610377565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016104de565b600060208083528351808285015260005b8181101561091f57858101830151858201604001528201610903565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461095757600080fd5b919050565b6000806040838503121561096f57600080fd5b61097883610940565b946020939093013593505050565b60008060006060848603121561099b57600080fd5b6109a484610940565b92506109b260208501610940565b9150604084013590509250925092565b6000602082840312156109d457600080fd5b6109dd82610940565b9392505050565b600080604083850312156109f757600080fd5b610a0083610940565b9150610a0e60208401610940565b90509250929050565b600181811c90821680610a2b57607f821691505b602082108103610a4b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561029a57634e487b7160e01b600052601160045260246000fdfea264697066735822122003897211a6f642f384ef92ef52f4dfd14563857713d1f9be439c66110d463ed364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEBB CODESIZE SUB DUP1 PUSH3 0xEBB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x20E JUMP JUMPDEST DUP3 DUP3 PUSH1 0x3 PUSH3 0x44 DUP4 DUP3 PUSH3 0x30F JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x53 DUP3 DUP3 PUSH3 0x30F JUMP JUMPDEST POP POP POP PUSH3 0x68 CALLER DUP3 PUSH3 0x7E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x403 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xED SWAP2 SWAP1 PUSH3 0x3DB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x18E JUMPI PUSH3 0x18E PUSH3 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B9 PUSH3 0x149 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1FA JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1DB JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x24A DUP8 DUP4 DUP9 ADD PUSH3 0x15F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x270 DUP7 DUP3 DUP8 ADD PUSH3 0x15F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x296 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x144 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2E6 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x307 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2F2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32B PUSH3 0x149 JUMP JUMPDEST PUSH3 0x343 DUP2 PUSH3 0x33C DUP5 SLOAD PUSH3 0x281 JUMP JUMPDEST DUP5 PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x37B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x362 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x307 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3AC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x38B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3CB JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x3FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA8 DUP1 PUSH3 0x413 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x986 JUMP JUMPDEST PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH2 0x119 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0xA17 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22F SWAP1 PUSH2 0xA17 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x251 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2AE DUP6 DUP3 DUP6 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x2B9 DUP6 DUP6 DUP6 PUSH2 0x565 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x2D7 DUP4 DUP4 PUSH2 0x39B JUMP JUMPDEST PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH2 0x2F0 DUP3 DUP3 PUSH2 0x709 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x2F0 DUP3 DUP3 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x31B DUP3 DUP7 PUSH2 0x39B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x380 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x489 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP5 DUP5 PUSH2 0x39B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x55F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x377 JUMP JUMPDEST PUSH2 0x55F DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x377 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x91F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x903 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x978 DUP4 PUSH2 0x940 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A4 DUP5 PUSH2 0x940 JUMP JUMPDEST SWAP3 POP PUSH2 0x9B2 PUSH1 0x20 DUP6 ADD PUSH2 0x940 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DD DUP3 PUSH2 0x940 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA00 DUP4 PUSH2 0x940 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0E PUSH1 0x20 DUP5 ADD PUSH2 0x940 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA4B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x29A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB DUP10 PUSH19 0x11A6F642F384EF92EF52F4DFD14563857713D1 0xF9 0xBE NUMBER SWAP13 PUSH7 0x110D463ED36473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"115:544:13:-:0;;;179:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;292:4;298:6;2046:5:1;:13;292:4:13;2046:5:1;:13;:::i;:::-;-1:-1:-1;2069:7:1;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;316:32:13::1;322:10;334:13;316:5;;;:32;;:::i;:::-;-1:-1:-1::0;;358:9:13::1;:14:::0;;-1:-1:-1;;358:14:13::1;370:2;358:14;::::0;;-1:-1:-1;115:544:13;;8520:535:1;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;4410:2:16;8595:65:1;;;4392:21:16;4449:2;4429:18;;;4422:30;4488:33;4468:18;;;4461:61;4539:18;;8595:65:1;;;;;;;;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;4941:25:16;;;8952:37:1;;4914:18:16;8952:37:1;;;;;;;8520:535;;:::o;12073:91::-;;;;:::o;14:127:16:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:16:o;991:623::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1211:16;;-1:-1:-1;;;;;1276:14:16;;;1273:34;;;1303:1;1300;1293:12;1273:34;1326:61;1379:7;1370:6;1359:9;1355:22;1326:61;:::i;:::-;1316:71;;1433:2;1422:9;1418:18;1412:25;1396:41;;1462:2;1452:8;1449:16;1446:36;;;1478:1;1475;1468:12;1446:36;;1501:63;1556:7;1545:8;1534:9;1530:24;1501:63;:::i;:::-;1491:73;;;1604:2;1593:9;1589:18;1583:25;1573:35;;991:623;;;;;:::o;1619:380::-;1698:1;1694:12;;;;1741;;;1762:61;;1816:4;1808:6;1804:17;1794:27;;1762:61;1869:2;1861:6;1858:14;1838:18;1835:38;1832:161;;1915:10;1910:3;1906:20;1903:1;1896:31;1950:4;1947:1;1940:15;1978:4;1975:1;1968:15;1832:161;;1619:380;;;:::o;2130:545::-;2232:2;2227:3;2224:11;2221:448;;;2268:1;2293:5;2289:2;2282:17;2338:4;2334:2;2324:19;2408:2;2396:10;2392:19;2389:1;2385:27;2379:4;2375:38;2444:4;2432:10;2429:20;2426:47;;;-1:-1:-1;2467:4:16;2426:47;2522:2;2517:3;2513:12;2510:1;2506:20;2500:4;2496:31;2486:41;;2577:82;2595:2;2588:5;2585:13;2577:82;;;2640:17;;;2621:1;2610:13;2577:82;;;2581:3;;;2130:545;;;:::o;2851:1352::-;2971:10;;-1:-1:-1;;;;;2993:30:16;;2990:56;;;3026:18;;:::i;:::-;3055:97;3145:6;3105:38;3137:4;3131:11;3105:38;:::i;:::-;3099:4;3055:97;:::i;:::-;3207:4;;3271:2;3260:14;;3288:1;3283:663;;;;3990:1;4007:6;4004:89;;;-1:-1:-1;4059:19:16;;;4053:26;4004:89;-1:-1:-1;;2808:1:16;2804:11;;;2800:24;2796:29;2786:40;2832:1;2828:11;;;2783:57;4106:81;;3253:944;;3283:663;2077:1;2070:14;;;2114:4;2101:18;;-1:-1:-1;;3319:20:16;;;3437:236;3451:7;3448:1;3445:14;3437:236;;;3540:19;;;3534:26;3519:42;;3632:27;;;;3600:1;3588:14;;;;3467:19;;3437:236;;;3441:3;3701:6;3692:7;3689:19;3686:201;;;3762:19;;;3756:26;-1:-1:-1;;3845:1:16;3841:14;;;3857:3;3837:24;3833:37;3829:42;3814:58;3799:74;;3686:201;-1:-1:-1;;;;;3933:1:16;3917:14;;;3913:22;3900:36;;-1:-1:-1;2851:1352:16:o;4568:222::-;4633:9;;;4654:10;;;4651:133;;;4706:10;4701:3;4697:20;4694:1;4687:31;4741:4;4738:1;4731:15;4769:4;4766:1;4759:15;4651:133;4568:222;;;;:::o;4795:177::-;115:544:13;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_650":{"entryPoint":null,"id":650,"parameterSlots":3,"returnSlots":0},"@_approve_585":{"entryPoint":966,"id":585,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_639":{"entryPoint":null,"id":639,"parameterSlots":3,"returnSlots":0},"@_burn_540":{"entryPoint":1992,"id":540,"parameterSlots":2,"returnSlots":0},"@_mint_468":{"entryPoint":1801,"id":468,"parameterSlots":2,"returnSlots":0},"@_msgSender_1508":{"entryPoint":null,"id":1508,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_628":{"entryPoint":1259,"id":628,"parameterSlots":3,"returnSlots":0},"@_transfer_411":{"entryPoint":1381,"id":411,"parameterSlots":3,"returnSlots":0},"@allowance_206":{"entryPoint":923,"id":206,"parameterSlots":2,"returnSlots":1},"@approve_231":{"entryPoint":646,"id":231,"parameterSlots":2,"returnSlots":1},"@balanceOf_163":{"entryPoint":null,"id":163,"parameterSlots":1,"returnSlots":1},"@burn_2620":{"entryPoint":771,"id":2620,"parameterSlots":2,"returnSlots":0},"@decimals_2629":{"entryPoint":null,"id":2629,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_334":{"entryPoint":781,"id":334,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_293":{"entryPoint":708,"id":293,"parameterSlots":2,"returnSlots":1},"@mint_2607":{"entryPoint":742,"id":2607,"parameterSlots":2,"returnSlots":0},"@name_119":{"entryPoint":500,"id":119,"parameterSlots":0,"returnSlots":1},"@symbol_129":{"entryPoint":756,"id":129,"parameterSlots":0,"returnSlots":1},"@totalSupply_149":{"entryPoint":null,"id":149,"parameterSlots":0,"returnSlots":1},"@transferFrom_264":{"entryPoint":672,"id":264,"parameterSlots":3,"returnSlots":1},"@transfer_188":{"entryPoint":909,"id":188,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2368,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2532,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2438,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2396,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2641,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2583,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6919:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:16","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:16"},"nodeType":"YulFunctionCall","src":"166:21:16"},"nodeType":"YulExpressionStatement","src":"166:21:16"},{"nodeType":"YulVariableDeclaration","src":"196:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:16"},"nodeType":"YulFunctionCall","src":"210:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:16"},"nodeType":"YulFunctionCall","src":"239:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:16"},"nodeType":"YulFunctionCall","src":"232:34:16"},"nodeType":"YulExpressionStatement","src":"232:34:16"},{"nodeType":"YulVariableDeclaration","src":"275:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:16"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:16"},"nodeType":"YulFunctionCall","src":"369:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:16"},"nodeType":"YulFunctionCall","src":"365:26:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:16"},"nodeType":"YulFunctionCall","src":"403:14:16"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:16"},"nodeType":"YulFunctionCall","src":"393:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:16"},"nodeType":"YulFunctionCall","src":"358:66:16"},"nodeType":"YulExpressionStatement","src":"358:66:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:16"},"nodeType":"YulFunctionCall","src":"302:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:16","statements":[{"nodeType":"YulAssignment","src":"318:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:16"},"nodeType":"YulFunctionCall","src":"323:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:16","statements":[]},"src":"294:140:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:16"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:16"},"nodeType":"YulFunctionCall","src":"454:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:16"},"nodeType":"YulFunctionCall","src":"450:31:16"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:16"},"nodeType":"YulFunctionCall","src":"443:42:16"},"nodeType":"YulExpressionStatement","src":"443:42:16"},{"nodeType":"YulAssignment","src":"494:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:16"},"nodeType":"YulFunctionCall","src":"525:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:16"},"nodeType":"YulFunctionCall","src":"542:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:16"},"nodeType":"YulFunctionCall","src":"521:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:16"},"nodeType":"YulFunctionCall","src":"506:45:16"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:16"},"nodeType":"YulFunctionCall","src":"502:54:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:16","type":""}],"src":"14:548:16"},{"body":{"nodeType":"YulBlock","src":"616:124:16","statements":[{"nodeType":"YulAssignment","src":"626:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:16"},"nodeType":"YulFunctionCall","src":"635:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:16"}]},{"body":{"nodeType":"YulBlock","src":"718:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:16"},"nodeType":"YulFunctionCall","src":"720:12:16"},"nodeType":"YulExpressionStatement","src":"720:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:16"},"nodeType":"YulFunctionCall","src":"699:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:16"},"nodeType":"YulFunctionCall","src":"695:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:16"},"nodeType":"YulFunctionCall","src":"684:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:16"},"nodeType":"YulFunctionCall","src":"674:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:16"},"nodeType":"YulFunctionCall","src":"667:50:16"},"nodeType":"YulIf","src":"664:70:16"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:16","type":""}],"src":"567:173:16"},{"body":{"nodeType":"YulBlock","src":"832:167:16","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:16"},"nodeType":"YulFunctionCall","src":"880:12:16"},"nodeType":"YulExpressionStatement","src":"880:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:16"},"nodeType":"YulFunctionCall","src":"849:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:16"},"nodeType":"YulFunctionCall","src":"845:32:16"},"nodeType":"YulIf","src":"842:52:16"},{"nodeType":"YulAssignment","src":"903:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:16"},"nodeType":"YulFunctionCall","src":"913:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:16"}]},{"nodeType":"YulAssignment","src":"951:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:16"},"nodeType":"YulFunctionCall","src":"974:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:16"},"nodeType":"YulFunctionCall","src":"961:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:16","type":""}],"src":"745:254:16"},{"body":{"nodeType":"YulBlock","src":"1099:92:16","statements":[{"nodeType":"YulAssignment","src":"1109:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:16"},"nodeType":"YulFunctionCall","src":"1117:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:16"},"nodeType":"YulFunctionCall","src":"1169:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:16"},"nodeType":"YulFunctionCall","src":"1162:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:16"},"nodeType":"YulFunctionCall","src":"1144:41:16"},"nodeType":"YulExpressionStatement","src":"1144:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:16","type":""}],"src":"1004:187:16"},{"body":{"nodeType":"YulBlock","src":"1297:76:16","statements":[{"nodeType":"YulAssignment","src":"1307:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:16"},"nodeType":"YulFunctionCall","src":"1315:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:16"},"nodeType":"YulFunctionCall","src":"1342:25:16"},"nodeType":"YulExpressionStatement","src":"1342:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:16","type":""}],"src":"1196:177:16"},{"body":{"nodeType":"YulBlock","src":"1482:224:16","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:16"},"nodeType":"YulFunctionCall","src":"1530:12:16"},"nodeType":"YulExpressionStatement","src":"1530:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:16"},"nodeType":"YulFunctionCall","src":"1499:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:16"},"nodeType":"YulFunctionCall","src":"1495:32:16"},"nodeType":"YulIf","src":"1492:52:16"},{"nodeType":"YulAssignment","src":"1553:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:16"},"nodeType":"YulFunctionCall","src":"1563:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:16"}]},{"nodeType":"YulAssignment","src":"1601:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:16"},"nodeType":"YulFunctionCall","src":"1630:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:16"},"nodeType":"YulFunctionCall","src":"1611:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:16"}]},{"nodeType":"YulAssignment","src":"1658:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:16"},"nodeType":"YulFunctionCall","src":"1681:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:16"},"nodeType":"YulFunctionCall","src":"1668:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:16","type":""}],"src":"1378:328:16"},{"body":{"nodeType":"YulBlock","src":"1808:87:16","statements":[{"nodeType":"YulAssignment","src":"1818:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:16"},"nodeType":"YulFunctionCall","src":"1826:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:16"},"nodeType":"YulFunctionCall","src":"1871:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:16"},"nodeType":"YulFunctionCall","src":"1853:36:16"},"nodeType":"YulExpressionStatement","src":"1853:36:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:16","type":""}],"src":"1711:184:16"},{"body":{"nodeType":"YulBlock","src":"1970:116:16","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:16"},"nodeType":"YulFunctionCall","src":"2018:12:16"},"nodeType":"YulExpressionStatement","src":"2018:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:16"},"nodeType":"YulFunctionCall","src":"1987:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:16"},"nodeType":"YulFunctionCall","src":"1983:32:16"},"nodeType":"YulIf","src":"1980:52:16"},{"nodeType":"YulAssignment","src":"2041:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:16"},"nodeType":"YulFunctionCall","src":"2051:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:16","type":""}],"src":"1900:186:16"},{"body":{"nodeType":"YulBlock","src":"2178:173:16","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:16"},"nodeType":"YulFunctionCall","src":"2226:12:16"},"nodeType":"YulExpressionStatement","src":"2226:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:16"},"nodeType":"YulFunctionCall","src":"2195:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:16"},"nodeType":"YulFunctionCall","src":"2191:32:16"},"nodeType":"YulIf","src":"2188:52:16"},{"nodeType":"YulAssignment","src":"2249:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:16"},"nodeType":"YulFunctionCall","src":"2259:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:16"}]},{"nodeType":"YulAssignment","src":"2297:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:16"},"nodeType":"YulFunctionCall","src":"2326:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:16"},"nodeType":"YulFunctionCall","src":"2307:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:16","type":""}],"src":"2091:260:16"},{"body":{"nodeType":"YulBlock","src":"2411:325:16","statements":[{"nodeType":"YulAssignment","src":"2421:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:16"},"nodeType":"YulFunctionCall","src":"2431:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:16"},"nodeType":"YulFunctionCall","src":"2478:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:16","statements":[{"nodeType":"YulAssignment","src":"2531:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:16"},"nodeType":"YulFunctionCall","src":"2541:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:16"},"nodeType":"YulFunctionCall","src":"2502:26:16"},"nodeType":"YulIf","src":"2499:61:16"},{"body":{"nodeType":"YulBlock","src":"2619:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:16"},"nodeType":"YulFunctionCall","src":"2643:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:16"},"nodeType":"YulFunctionCall","src":"2633:31:16"},"nodeType":"YulExpressionStatement","src":"2633:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:16"},"nodeType":"YulFunctionCall","src":"2677:15:16"},"nodeType":"YulExpressionStatement","src":"2677:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:16"},"nodeType":"YulFunctionCall","src":"2705:15:16"},"nodeType":"YulExpressionStatement","src":"2705:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:16"},"nodeType":"YulFunctionCall","src":"2595:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:16"},"nodeType":"YulFunctionCall","src":"2572:38:16"},"nodeType":"YulIf","src":"2569:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:16","type":""}],"src":"2356:380:16"},{"body":{"nodeType":"YulBlock","src":"2789:174:16","statements":[{"nodeType":"YulAssignment","src":"2799:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:16"},"nodeType":"YulFunctionCall","src":"2806:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:16"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:16"},"nodeType":"YulFunctionCall","src":"2870:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:16"},"nodeType":"YulFunctionCall","src":"2860:31:16"},"nodeType":"YulExpressionStatement","src":"2860:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:16"},"nodeType":"YulFunctionCall","src":"2904:15:16"},"nodeType":"YulExpressionStatement","src":"2904:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:16"},"nodeType":"YulFunctionCall","src":"2932:15:16"},"nodeType":"YulExpressionStatement","src":"2932:15:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:16"},"nodeType":"YulFunctionCall","src":"2827:10:16"},"nodeType":"YulIf","src":"2824:133:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:16","type":""}],"src":"2741:222:16"},{"body":{"nodeType":"YulBlock","src":"3142:227:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:16"},"nodeType":"YulFunctionCall","src":"3152:21:16"},"nodeType":"YulExpressionStatement","src":"3152:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:16"},"nodeType":"YulFunctionCall","src":"3189:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:16","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:16"},"nodeType":"YulFunctionCall","src":"3182:30:16"},"nodeType":"YulExpressionStatement","src":"3182:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:16"},"nodeType":"YulFunctionCall","src":"3228:18:16"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:16","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:16"},"nodeType":"YulFunctionCall","src":"3221:62:16"},"nodeType":"YulExpressionStatement","src":"3221:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:16"},"nodeType":"YulFunctionCall","src":"3299:18:16"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:16","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:16"},"nodeType":"YulFunctionCall","src":"3292:35:16"},"nodeType":"YulExpressionStatement","src":"3292:35:16"},{"nodeType":"YulAssignment","src":"3336:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:16"},"nodeType":"YulFunctionCall","src":"3344:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:16","type":""}],"src":"2968:401:16"},{"body":{"nodeType":"YulBlock","src":"3548:226:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:16"},"nodeType":"YulFunctionCall","src":"3558:21:16"},"nodeType":"YulExpressionStatement","src":"3558:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:16"},"nodeType":"YulFunctionCall","src":"3595:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:16","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:16"},"nodeType":"YulFunctionCall","src":"3588:30:16"},"nodeType":"YulExpressionStatement","src":"3588:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:16"},"nodeType":"YulFunctionCall","src":"3634:18:16"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:16","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:16"},"nodeType":"YulFunctionCall","src":"3627:62:16"},"nodeType":"YulExpressionStatement","src":"3627:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:16"},"nodeType":"YulFunctionCall","src":"3705:18:16"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:16","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:16"},"nodeType":"YulFunctionCall","src":"3698:34:16"},"nodeType":"YulExpressionStatement","src":"3698:34:16"},{"nodeType":"YulAssignment","src":"3741:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:16"},"nodeType":"YulFunctionCall","src":"3749:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:16","type":""}],"src":"3374:400:16"},{"body":{"nodeType":"YulBlock","src":"3953:224:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:16"},"nodeType":"YulFunctionCall","src":"3963:21:16"},"nodeType":"YulExpressionStatement","src":"3963:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:16"},"nodeType":"YulFunctionCall","src":"4000:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:16","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:16"},"nodeType":"YulFunctionCall","src":"3993:30:16"},"nodeType":"YulExpressionStatement","src":"3993:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:16"},"nodeType":"YulFunctionCall","src":"4039:18:16"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:16","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:16"},"nodeType":"YulFunctionCall","src":"4032:62:16"},"nodeType":"YulExpressionStatement","src":"4032:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:16"},"nodeType":"YulFunctionCall","src":"4110:18:16"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:16","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:16"},"nodeType":"YulFunctionCall","src":"4103:32:16"},"nodeType":"YulExpressionStatement","src":"4103:32:16"},{"nodeType":"YulAssignment","src":"4144:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:16"},"nodeType":"YulFunctionCall","src":"4152:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:16","type":""}],"src":"3779:398:16"},{"body":{"nodeType":"YulBlock","src":"4356:179:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:16"},"nodeType":"YulFunctionCall","src":"4366:21:16"},"nodeType":"YulExpressionStatement","src":"4366:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:16"},"nodeType":"YulFunctionCall","src":"4403:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:16","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:16"},"nodeType":"YulFunctionCall","src":"4396:30:16"},"nodeType":"YulExpressionStatement","src":"4396:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:16"},"nodeType":"YulFunctionCall","src":"4442:18:16"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:16","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:16"},"nodeType":"YulFunctionCall","src":"4435:59:16"},"nodeType":"YulExpressionStatement","src":"4435:59:16"},{"nodeType":"YulAssignment","src":"4503:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:16"},"nodeType":"YulFunctionCall","src":"4511:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:16","type":""}],"src":"4182:353:16"},{"body":{"nodeType":"YulBlock","src":"4714:227:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:16"},"nodeType":"YulFunctionCall","src":"4724:21:16"},"nodeType":"YulExpressionStatement","src":"4724:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:16"},"nodeType":"YulFunctionCall","src":"4761:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:16","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:16"},"nodeType":"YulFunctionCall","src":"4754:30:16"},"nodeType":"YulExpressionStatement","src":"4754:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:16"},"nodeType":"YulFunctionCall","src":"4800:18:16"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:16","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:16"},"nodeType":"YulFunctionCall","src":"4793:62:16"},"nodeType":"YulExpressionStatement","src":"4793:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:16"},"nodeType":"YulFunctionCall","src":"4871:18:16"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:16","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:16"},"nodeType":"YulFunctionCall","src":"4864:35:16"},"nodeType":"YulExpressionStatement","src":"4864:35:16"},{"nodeType":"YulAssignment","src":"4908:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:16"},"nodeType":"YulFunctionCall","src":"4916:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:16","type":""}],"src":"4540:401:16"},{"body":{"nodeType":"YulBlock","src":"5120:225:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:16"},"nodeType":"YulFunctionCall","src":"5130:21:16"},"nodeType":"YulExpressionStatement","src":"5130:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:16"},"nodeType":"YulFunctionCall","src":"5167:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:16","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:16"},"nodeType":"YulFunctionCall","src":"5160:30:16"},"nodeType":"YulExpressionStatement","src":"5160:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:16"},"nodeType":"YulFunctionCall","src":"5206:18:16"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:16","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:16"},"nodeType":"YulFunctionCall","src":"5199:62:16"},"nodeType":"YulExpressionStatement","src":"5199:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:16"},"nodeType":"YulFunctionCall","src":"5277:18:16"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:16","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:16"},"nodeType":"YulFunctionCall","src":"5270:33:16"},"nodeType":"YulExpressionStatement","src":"5270:33:16"},{"nodeType":"YulAssignment","src":"5312:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:16"},"nodeType":"YulFunctionCall","src":"5320:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:16","type":""}],"src":"4946:399:16"},{"body":{"nodeType":"YulBlock","src":"5524:228:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:16"},"nodeType":"YulFunctionCall","src":"5534:21:16"},"nodeType":"YulExpressionStatement","src":"5534:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:16"},"nodeType":"YulFunctionCall","src":"5571:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:16","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:16"},"nodeType":"YulFunctionCall","src":"5564:30:16"},"nodeType":"YulExpressionStatement","src":"5564:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:16"},"nodeType":"YulFunctionCall","src":"5610:18:16"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:16","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:16"},"nodeType":"YulFunctionCall","src":"5603:62:16"},"nodeType":"YulExpressionStatement","src":"5603:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:16"},"nodeType":"YulFunctionCall","src":"5681:18:16"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:16","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:16"},"nodeType":"YulFunctionCall","src":"5674:36:16"},"nodeType":"YulExpressionStatement","src":"5674:36:16"},{"nodeType":"YulAssignment","src":"5719:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:16"},"nodeType":"YulFunctionCall","src":"5727:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:16","type":""}],"src":"5350:402:16"},{"body":{"nodeType":"YulBlock","src":"5931:181:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5948:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5959:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5941:6:16"},"nodeType":"YulFunctionCall","src":"5941:21:16"},"nodeType":"YulExpressionStatement","src":"5941:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5982:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5993:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5978:3:16"},"nodeType":"YulFunctionCall","src":"5978:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"5998:2:16","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5971:6:16"},"nodeType":"YulFunctionCall","src":"5971:30:16"},"nodeType":"YulExpressionStatement","src":"5971:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6021:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6032:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6017:3:16"},"nodeType":"YulFunctionCall","src":"6017:18:16"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"6037:33:16","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6010:6:16"},"nodeType":"YulFunctionCall","src":"6010:61:16"},"nodeType":"YulExpressionStatement","src":"6010:61:16"},{"nodeType":"YulAssignment","src":"6080:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6092:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6103:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6088:3:16"},"nodeType":"YulFunctionCall","src":"6088:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6080:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5908:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5922:4:16","type":""}],"src":"5757:355:16"},{"body":{"nodeType":"YulBlock","src":"6291:223:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6308:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6319:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6301:6:16"},"nodeType":"YulFunctionCall","src":"6301:21:16"},"nodeType":"YulExpressionStatement","src":"6301:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6342:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6353:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6338:3:16"},"nodeType":"YulFunctionCall","src":"6338:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"6358:2:16","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6331:6:16"},"nodeType":"YulFunctionCall","src":"6331:30:16"},"nodeType":"YulExpressionStatement","src":"6331:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6381:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6392:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6377:3:16"},"nodeType":"YulFunctionCall","src":"6377:18:16"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"6397:34:16","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6370:6:16"},"nodeType":"YulFunctionCall","src":"6370:62:16"},"nodeType":"YulExpressionStatement","src":"6370:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6452:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6463:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6448:3:16"},"nodeType":"YulFunctionCall","src":"6448:18:16"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"6468:3:16","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6441:6:16"},"nodeType":"YulFunctionCall","src":"6441:31:16"},"nodeType":"YulExpressionStatement","src":"6441:31:16"},{"nodeType":"YulAssignment","src":"6481:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6493:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6504:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6489:3:16"},"nodeType":"YulFunctionCall","src":"6489:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6481:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6268:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6282:4:16","type":""}],"src":"6117:397:16"},{"body":{"nodeType":"YulBlock","src":"6693:224:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6710:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6721:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6703:6:16"},"nodeType":"YulFunctionCall","src":"6703:21:16"},"nodeType":"YulExpressionStatement","src":"6703:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6744:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6755:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6740:3:16"},"nodeType":"YulFunctionCall","src":"6740:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"6760:2:16","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6733:6:16"},"nodeType":"YulFunctionCall","src":"6733:30:16"},"nodeType":"YulExpressionStatement","src":"6733:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6783:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6794:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6779:3:16"},"nodeType":"YulFunctionCall","src":"6779:18:16"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"6799:34:16","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6772:6:16"},"nodeType":"YulFunctionCall","src":"6772:62:16"},"nodeType":"YulExpressionStatement","src":"6772:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6854:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6865:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6850:3:16"},"nodeType":"YulFunctionCall","src":"6850:18:16"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"6870:4:16","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6843:6:16"},"nodeType":"YulFunctionCall","src":"6843:32:16"},"nodeType":"YulExpressionStatement","src":"6843:32:16"},{"nodeType":"YulAssignment","src":"6884:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6896:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6907:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6892:3:16"},"nodeType":"YulFunctionCall","src":"6892:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6884:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6670:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6684:4:16","type":""}],"src":"6519:398:16"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146101a8578063a457c2d7146101bb578063a9059cbb146101ce578063dd62ed3e146101e157600080fd5b806340c10f191461016257806370a082311461017757806395d89b41146101a057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101f4565b6040516100e991906108f2565b60405180910390f35b61010561010036600461095c565b610286565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610986565b6102a0565b60055460405160ff90911681526020016100e9565b61010561015d36600461095c565b6102c4565b61017561017036600461095c565b6102e6565b005b6101196101853660046109c2565b6001600160a01b031660009081526020819052604090205490565b6100dc6102f4565b6101756101b636600461095c565b610303565b6101056101c936600461095c565b61030d565b6101056101dc36600461095c565b61038d565b6101196101ef3660046109e4565b61039b565b60606003805461020390610a17565b80601f016020809104026020016040519081016040528092919081815260200182805461022f90610a17565b801561027c5780601f106102515761010080835404028352916020019161027c565b820191906000526020600020905b81548152906001019060200180831161025f57829003601f168201915b5050505050905090565b6000336102948185856103c6565b60019150505b92915050565b6000336102ae8582856104eb565b6102b9858585610565565b506001949350505050565b6000336102948185856102d7838361039b565b6102e19190610a51565b6103c6565b6102f08282610709565b5050565b60606004805461020390610a17565b6102f082826107c8565b6000338161031b828661039b565b9050838110156103805760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102b982868684036103c6565b600033610294818585610565565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610377565b6001600160a01b0382166104895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610377565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006104f7848461039b565b9050600019811461055f57818110156105525760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610377565b61055f84848484036103c6565b50505050565b6001600160a01b0383166105c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610377565b6001600160a01b03821661062b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610377565b6001600160a01b038316600090815260208190526040902054818110156106a35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610377565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361055f565b6001600160a01b03821661075f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610377565b80600260008282546107719190610a51565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108285760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610377565b6001600160a01b0382166000908152602081905260409020548181101561089c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610377565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016104de565b600060208083528351808285015260005b8181101561091f57858101830151858201604001528201610903565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461095757600080fd5b919050565b6000806040838503121561096f57600080fd5b61097883610940565b946020939093013593505050565b60008060006060848603121561099b57600080fd5b6109a484610940565b92506109b260208501610940565b9150604084013590509250925092565b6000602082840312156109d457600080fd5b6109dd82610940565b9392505050565b600080604083850312156109f757600080fd5b610a0083610940565b9150610a0e60208401610940565b90509250929050565b600181811c90821680610a2b57607f821691505b602082108103610a4b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561029a57634e487b7160e01b600052601160045260246000fdfea264697066735822122003897211a6f642f384ef92ef52f4dfd14563857713d1f9be439c66110d463ed364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x986 JUMP JUMPDEST PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH2 0x119 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0xA17 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22F SWAP1 PUSH2 0xA17 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x251 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2AE DUP6 DUP3 DUP6 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x2B9 DUP6 DUP6 DUP6 PUSH2 0x565 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x2D7 DUP4 DUP4 PUSH2 0x39B JUMP JUMPDEST PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH2 0x2F0 DUP3 DUP3 PUSH2 0x709 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x2F0 DUP3 DUP3 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x31B DUP3 DUP7 PUSH2 0x39B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x380 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x294 DUP2 DUP6 DUP6 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x489 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP5 DUP5 PUSH2 0x39B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x55F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x377 JUMP JUMPDEST PUSH2 0x55F DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x377 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x377 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x91F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x903 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x978 DUP4 PUSH2 0x940 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A4 DUP5 PUSH2 0x940 JUMP JUMPDEST SWAP3 POP PUSH2 0x9B2 PUSH1 0x20 DUP6 ADD PUSH2 0x940 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9DD DUP3 PUSH2 0x940 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA00 DUP4 PUSH2 0x940 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0E PUSH1 0x20 DUP5 ADD PUSH2 0x940 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA4B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x29A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB DUP10 PUSH19 0x11A6F642F384EF92EF52F4DFD14563857713D1 0xF9 0xBE NUMBER SWAP13 PUSH7 0x110D463ED36473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"115:544:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:16;;1162:22;1144:41;;1132:2;1117:18;4444:197:1;1004:187:16;3255:106:1;3342:12;;3255:106;;;1342:25:16;;;1330:2;1315:18;3255:106:1;1196:177:16;5203:256:1;;;;;;:::i;:::-;;:::i;567:90:13:-;641:9;;567:90;;641:9;;;;1853:36:16;;1841:2;1826:18;567:90:13;1711:184:16;5854:234:1;;;;;;:::i;:::-;;:::i;385:83:13:-;;;;;;:::i;:::-;;:::i;:::-;;3419:125:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:1;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;474:87:13:-;;;;;;:::i;:::-;;:::i;6575:427:1:-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;734:10:7;4581:32:1;734:10:7;4597:7:1;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;734:10:7;5356:38:1;5372:4;734:10:7;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;5854:234::-;5942:4;734:10:7;5996:64:1;734:10:7;6012:7:1;6049:10;6021:25;734:10:7;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;385:83:13:-;444:17;450:2;454:6;444:5;:17::i;:::-;385:83;;:::o;2369:102:1:-;2425:13;2457:7;2450:14;;;;;:::i;474:87:13:-;535:19;541:4;547:6;535:5;:19::i;6575:427:1:-;6668:4;734:10:7;6668:4:1;6749:25;734:10:7;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;3170:2:16;6784:85:1;;;3152:21:16;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:16;;;3292:35;3344:19;;6784:85:1;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;734:10:7;3873:28:1;734:10:7;3890:2:1;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;3576:2:16;10550:68:1;;;3558:21:16;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:16;;;3698:34;3749:19;;10550:68:1;3374:400:16;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;3981:2:16;10628:68:1;;;3963:21:16;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:16;;;4103:32;4152:19;;10628:68:1;3779:398:16;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:16;;;10758:32:1;;1315:18:16;10758:32:1;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;4384:2:16;11297:68:1;;;4366:21:16;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:1;4182:353:16;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;4742:2:16;7544:68:1;;;4724:21:16;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:16;;;4864:35;4916:19;;7544:68:1;4540:401:16;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;5148:2:16;7622:64:1;;;5130:21:16;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:16;;;5270:33;5320:19;;7622:64:1;4946:399:16;7622:64:1;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;5552:2:16;7793:72:1;;;5534:21:16;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:16;;;5674:36;5727:19;;7793:72:1;5350:402:16;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:16;;;8114:13:1;;8163:26;;1315:18:16;8163:26:1;;;;;;;8200:37;9375:659;8520:535;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;5959:2:16;8595:65:1;;;5941:21:16;5998:2;5978:18;;;5971:30;6037:33;6017:18;;;6010:61;6088:18;;8595:65:1;5757:355:16;8595:65:1;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1342:25:16;;;8952:37:1;;1315:18:16;8952:37:1;;;;;;;385:83:13;;:::o;9375:659:1:-;-1:-1:-1;;;;;9458:21:1;;9450:67;;;;-1:-1:-1;;;9450:67:1;;6319:2:16;9450:67:1;;;6301:21:16;6358:2;6338:18;;;6331:30;6397:34;6377:18;;;6370:62;-1:-1:-1;;;6448:18:16;;;6441:31;6489:19;;9450:67:1;6117:397:16;9450:67:1;-1:-1:-1;;;;;9613:18:1;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:1;;6721:2:16;9641:71:1;;;6703:21:16;6760:2;6740:18;;;6733:30;6799:34;6779:18;;;6772:62;-1:-1:-1;;;6850:18:16;;;6843:32;6892:19;;9641:71:1;6519:398:16;9641:71:1;-1:-1:-1;;;;;9746:18:1;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1342:25:16;;;9746:9:1;;:18;9931:37;;1315:18:16;9931:37:1;1196:177:16;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:16;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:16:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:16:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"545600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24629","balanceOf(address)":"2585","burn(address,uint256)":"50887","decimals()":"2378","decreaseAllowance(address,uint256)":"26995","increaseAllowance(address,uint256)":"infinite","mint(address,uint256)":"50828","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51116","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/ERC20Mock.sol\":\"ERC20Mock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/mock/ERC20Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract ERC20Mock is ERC20 {\\n    uint8 private _decimals;\\n\\n    constructor(\\n        string memory name,\\n        string memory symbol,\\n        uint256 initialSupply\\n    ) ERC20(name, symbol) {\\n        _mint(msg.sender, initialSupply);\\n        _decimals = 18;\\n    }\\n\\n    function mint(address to, uint256 amount) public {\\n        _mint(to, amount);\\n    }\\n\\n    function burn(address from, uint256 amount) public {\\n        _burn(from, amount);\\n    }\\n\\n    function decimals() public view override returns (uint8) {\\n        return _decimals;\\n    }\\n}\\n\",\"keccak256\":\"0xaa97507ca2f1a7e5addae03777b06d87d5cfd4fd82a2b404f6e1fd75186e3f2f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":80,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":86,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":88,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":90,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":92,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2570,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mock/MockRelayer.sol":{"MockRelayer":{"abi":[{"inputs":[{"internalType":"address","name":"_swapManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"resolver","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"OrderFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"OrderReceived","type":"event"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"fulfillOrder","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"getOrder","outputs":[{"components":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"}],"internalType":"struct ISwapManager.SwapOrder","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"}],"name":"receiveOrder","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"swapManager","outputs":[{"internalType":"contract ISwapManager","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2674":{"entryPoint":null,"id":2674,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":84,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:16","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:16"},"nodeType":"YulFunctionCall","src":"143:12:16"},"nodeType":"YulExpressionStatement","src":"143:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:16"},"nodeType":"YulFunctionCall","src":"112:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:16"},"nodeType":"YulFunctionCall","src":"108:32:16"},"nodeType":"YulIf","src":"105:52:16"},{"nodeType":"YulVariableDeclaration","src":"166:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:16"},"nodeType":"YulFunctionCall","src":"179:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:16"},"nodeType":"YulFunctionCall","src":"260:12:16"},"nodeType":"YulExpressionStatement","src":"260:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:16"},"nodeType":"YulFunctionCall","src":"239:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:16"},"nodeType":"YulFunctionCall","src":"235:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:16"},"nodeType":"YulFunctionCall","src":"224:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:16"},"nodeType":"YulFunctionCall","src":"214:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:16"},"nodeType":"YulFunctionCall","src":"207:50:16"},"nodeType":"YulIf","src":"204:70:16"},{"nodeType":"YulAssignment","src":"283:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:16"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:16","type":""}],"src":"14:290:16"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161077938038061077983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6106e6806100936000396000f3fe60806040526004361061003f5760003560e01c80635778472a14610044578063709d039d1461007a578063eb9bd099146100b2578063f6dccf2e146100d3575b600080fd5b34801561005057600080fd5b5061006461005f3660046103fc565b6100e8565b6040516100719190610415565b60405180910390f35b34801561008657600080fd5b5060005461009a906001600160a01b031681565b6040516001600160a01b039091168152602001610071565b6100c56100c03660046104df565b6101a9565b604051908152602001610071565b6100e66100e1366004610538565b6102c9565b005b6040805161014081018252600080825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201819052549151632bbc239560e11b81526004810184905290916001600160a01b031690635778472a9060240161014060405180830381865afa15801561017f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a391906105bc565b92915050565b6000805481906001600160a01b0390811690637535f2df908a16156101cf5760006101d1565b875b6040516001600160e01b031960e084901b1681526001600160a01b03808d1660048301528b166024820152604481018a9052606481018990526084810188905260a4810187905260c40160206040518083038185885af1158015610239573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061025e9190610668565b604080516001600160a01b038b811682528a1660208201529081018890526060810187905260808101859052909150339082907f49f29b9cfb3bb0783c26f435fe9808e8b7fd6958ebb9363de51f5b697c712c749060a00160405180910390a3979650505050505050565b600080546040516024810186905260448101859052606481018490526001600160a01b0390911690349060840160408051601f198184030181529181526020820180516001600160e01b0316637b6e679760e11b1790525161032b9190610681565b60006040518083038185875af1925050503d8060008114610368576040519150601f19603f3d011682016040523d82523d6000602084013e61036d565b606091505b50509050806103b95760405162461bcd60e51b8152602060048201526014602482015273119d5b199a5b1b081bdc99195c8819985a5b195960621b604482015260640160405180910390fd5b6040805184815260208101849052339186917fdafd13066d5a7c6b0591d8c19f57c75c45b8fa038153891c78a582507cbd18c7910160405180910390a350505050565b60006020828403121561040e57600080fd5b5035919050565b81516001600160a01b031681526101408101602083015161044160208401826001600160a01b03169052565b506040830151604083015260608301516060830152608083015161047060808401826001600160a01b03169052565b5060a083015161048b60a08401826001600160a01b03169052565b5060c083015160c083015260e083015160e0830152610100808401516104b48285018215159052565b5050610120928301511515919092015290565b6001600160a01b03811681146104dc57600080fd5b50565b60008060008060008060c087890312156104f857600080fd5b8635610503816104c7565b95506020870135610513816104c7565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060006060848603121561054d57600080fd5b505081359360208301359350604090920135919050565b604051610140810167ffffffffffffffff8111828210171561059657634e487b7160e01b600052604160045260246000fd5b60405290565b80516105a7816104c7565b919050565b805180151581146105a757600080fd5b600061014082840312156105cf57600080fd5b6105d7610564565b6105e08361059c565b81526105ee6020840161059c565b602082015260408301516040820152606083015160608201526106136080840161059c565b608082015261062460a0840161059c565b60a082015260c083015160c082015260e083015160e082015261010061064b8185016105ac565b9082015261012061065d8482016105ac565b908201529392505050565b60006020828403121561067a57600080fd5b5051919050565b6000825160005b818110156106a25760208186018101518583015201610688565b50600092019182525091905056fea2646970667358221220489de4d2d13a41d4b37d192003909091fc53b35668a432f37ec41d784baf444064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x779 CODESIZE SUB DUP1 PUSH2 0x779 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6E6 DUP1 PUSH2 0x93 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5778472A EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x709D039D EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xEB9BD099 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xF6DCCF2E EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x9A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x71 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x71 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE SLOAD SWAP2 MLOAD PUSH4 0x2BBC2395 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x5778472A SWAP1 PUSH1 0x24 ADD PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH4 0x7535F2DF SWAP1 DUP11 AND ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 PUSH2 0x1D1 JUMP JUMPDEST DUP8 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x84 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xA4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xC4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x239 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE DUP11 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 DUP3 SWAP1 PUSH32 0x49F29B9CFB3BB0783C26F435FE9808E8B7FD6958EBB9363DE51F5B697C712C74 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x7B6E6797 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x36D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x119D5B199A5B1B081BDC99195C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 DUP7 SWAP2 PUSH32 0xDAFD13066D5A7C6B0591D8C19F57C75C45B8FA038153891C78A582507CBD18C7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH2 0x140 DUP2 ADD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x441 PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x470 PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x48B PUSH1 0xA0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD PUSH2 0x4B4 DUP3 DUP6 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH2 0x120 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x503 DUP2 PUSH2 0x4C7 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x513 DUP2 PUSH2 0x4C7 JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x596 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x5A7 DUP2 PUSH2 0x4C7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D7 PUSH2 0x564 JUMP JUMPDEST PUSH2 0x5E0 DUP4 PUSH2 0x59C JUMP JUMPDEST DUP2 MSTORE PUSH2 0x5EE PUSH1 0x20 DUP5 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x613 PUSH1 0x80 DUP5 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x624 PUSH1 0xA0 DUP5 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x64B DUP2 DUP6 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0x65D DUP5 DUP3 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x688 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE SWAP14 0xE4 0xD2 0xD1 GASPRICE COINBASE 0xD4 0xB3 PUSH30 0x192003909091FC53B35668A432F37EC41D784BAF444064736F6C63430008 EQ STOP CALLER ","sourceMap":"100:2200:14:-:0;;;598:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;642:11;:40;;-1:-1:-1;;;;;;642:40:14;-1:-1:-1;;;;;642:40:14;;;;;;;;;;100:2200;;14:290:16;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:16;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:16:o;:::-;100:2200:14;;;;;;"},"deployedBytecode":{"functionDebugData":{"@fulfillOrder_2769":{"entryPoint":713,"id":2769,"parameterSlots":3,"returnSlots":0},"@getOrder_2783":{"entryPoint":232,"id":2783,"parameterSlots":1,"returnSlots":1},"@receiveOrder_2727":{"entryPoint":425,"id":2727,"parameterSlots":6,"returnSlots":1},"@swapManager_2636":{"entryPoint":null,"id":2636,"parameterSlots":0,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":1436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":1452,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32":{"entryPoint":1247,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes32":{"entryPoint":1020,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":1640,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint256t_bytes32":{"entryPoint":1336,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_struct$_SwapOrder_$2436_memory_ptr_fromMemory":{"entryPoint":1468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1665,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_bytes32__to_t_bytes32_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_contract$_ISwapManager_$2510__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_786164181b1dbf10e7134b576dc7774e946256bcc196a412825e802f7a01134d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_SwapOrder_$2436_memory_ptr__to_t_struct$_SwapOrder_$2436_memory_ptr__fromStack_reversed":{"entryPoint":1045,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes32__to_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":1380,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_address":{"entryPoint":1223,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7387:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:16","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:16"},"nodeType":"YulFunctionCall","src":"132:12:16"},"nodeType":"YulExpressionStatement","src":"132:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:16"},"nodeType":"YulFunctionCall","src":"101:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:16"},"nodeType":"YulFunctionCall","src":"97:32:16"},"nodeType":"YulIf","src":"94:52:16"},{"nodeType":"YulAssignment","src":"155:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:16"},"nodeType":"YulFunctionCall","src":"165:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:16"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:16","type":""}],"src":"14:180:16"},{"body":{"nodeType":"YulBlock","src":"243:60:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"260:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"269:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"284:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"289:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"280:3:16"},"nodeType":"YulFunctionCall","src":"280:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"293:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"276:3:16"},"nodeType":"YulFunctionCall","src":"276:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"265:3:16"},"nodeType":"YulFunctionCall","src":"265:31:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"253:6:16"},"nodeType":"YulFunctionCall","src":"253:44:16"},"nodeType":"YulExpressionStatement","src":"253:44:16"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"227:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"234:3:16","type":""}],"src":"199:104:16"},{"body":{"nodeType":"YulBlock","src":"349:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"366:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"385:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"378:6:16"},"nodeType":"YulFunctionCall","src":"378:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"371:6:16"},"nodeType":"YulFunctionCall","src":"371:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"359:6:16"},"nodeType":"YulFunctionCall","src":"359:34:16"},"nodeType":"YulExpressionStatement","src":"359:34:16"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"333:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"340:3:16","type":""}],"src":"308:91:16"},{"body":{"nodeType":"YulBlock","src":"559:980:16","statements":[{"nodeType":"YulAssignment","src":"569:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"581:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"592:3:16","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"577:3:16"},"nodeType":"YulFunctionCall","src":"577:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"569:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"630:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"624:5:16"},"nodeType":"YulFunctionCall","src":"624:13:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"639:9:16"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"605:18:16"},"nodeType":"YulFunctionCall","src":"605:44:16"},"nodeType":"YulExpressionStatement","src":"605:44:16"},{"nodeType":"YulVariableDeclaration","src":"658:44:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"688:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"696:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"684:3:16"},"nodeType":"YulFunctionCall","src":"684:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"678:5:16"},"nodeType":"YulFunctionCall","src":"678:24:16"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"662:12:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"730:12:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"748:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"759:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"744:3:16"},"nodeType":"YulFunctionCall","src":"744:20:16"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"711:18:16"},"nodeType":"YulFunctionCall","src":"711:54:16"},"nodeType":"YulExpressionStatement","src":"711:54:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"785:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"796:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"781:3:16"},"nodeType":"YulFunctionCall","src":"781:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"813:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"821:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:16"},"nodeType":"YulFunctionCall","src":"809:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"803:5:16"},"nodeType":"YulFunctionCall","src":"803:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"774:6:16"},"nodeType":"YulFunctionCall","src":"774:54:16"},"nodeType":"YulExpressionStatement","src":"774:54:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"848:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"859:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"844:3:16"},"nodeType":"YulFunctionCall","src":"844:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"876:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"884:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"872:3:16"},"nodeType":"YulFunctionCall","src":"872:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"866:5:16"},"nodeType":"YulFunctionCall","src":"866:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"837:6:16"},"nodeType":"YulFunctionCall","src":"837:54:16"},"nodeType":"YulExpressionStatement","src":"837:54:16"},{"nodeType":"YulVariableDeclaration","src":"900:46:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"932:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"940:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:16"},"nodeType":"YulFunctionCall","src":"928:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"922:5:16"},"nodeType":"YulFunctionCall","src":"922:24:16"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"904:14:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"974:14:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"994:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1005:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"990:3:16"},"nodeType":"YulFunctionCall","src":"990:20:16"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"955:18:16"},"nodeType":"YulFunctionCall","src":"955:56:16"},"nodeType":"YulExpressionStatement","src":"955:56:16"},{"nodeType":"YulVariableDeclaration","src":"1020:46:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1052:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1060:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1048:3:16"},"nodeType":"YulFunctionCall","src":"1048:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1042:5:16"},"nodeType":"YulFunctionCall","src":"1042:24:16"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"1024:14:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"1094:14:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1114:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1125:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1110:3:16"},"nodeType":"YulFunctionCall","src":"1110:20:16"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"1075:18:16"},"nodeType":"YulFunctionCall","src":"1075:56:16"},"nodeType":"YulExpressionStatement","src":"1075:56:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1162:4:16","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:16"},"nodeType":"YulFunctionCall","src":"1147:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1179:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1187:4:16","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1175:3:16"},"nodeType":"YulFunctionCall","src":"1175:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1169:5:16"},"nodeType":"YulFunctionCall","src":"1169:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1140:6:16"},"nodeType":"YulFunctionCall","src":"1140:54:16"},"nodeType":"YulExpressionStatement","src":"1140:54:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1214:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1225:4:16","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1210:3:16"},"nodeType":"YulFunctionCall","src":"1210:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1242:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1250:4:16","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1238:3:16"},"nodeType":"YulFunctionCall","src":"1238:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1232:5:16"},"nodeType":"YulFunctionCall","src":"1232:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1203:6:16"},"nodeType":"YulFunctionCall","src":"1203:54:16"},"nodeType":"YulExpressionStatement","src":"1203:54:16"},{"nodeType":"YulVariableDeclaration","src":"1266:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1276:6:16","type":"","value":"0x0100"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1270:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1291:44:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1323:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1331:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1319:3:16"},"nodeType":"YulFunctionCall","src":"1319:15:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1313:5:16"},"nodeType":"YulFunctionCall","src":"1313:22:16"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"1295:14:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"1360:14:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1380:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1391:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1376:3:16"},"nodeType":"YulFunctionCall","src":"1376:18:16"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"1344:15:16"},"nodeType":"YulFunctionCall","src":"1344:51:16"},"nodeType":"YulExpressionStatement","src":"1344:51:16"},{"nodeType":"YulVariableDeclaration","src":"1404:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1414:6:16","type":"","value":"0x0120"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1408:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1429:44:16","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1461:6:16"},{"name":"_2","nodeType":"YulIdentifier","src":"1469:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1457:3:16"},"nodeType":"YulFunctionCall","src":"1457:15:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1451:5:16"},"nodeType":"YulFunctionCall","src":"1451:22:16"},"variables":[{"name":"memberValue0_4","nodeType":"YulTypedName","src":"1433:14:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_4","nodeType":"YulIdentifier","src":"1498:14:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1518:9:16"},{"name":"_2","nodeType":"YulIdentifier","src":"1529:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1514:3:16"},"nodeType":"YulFunctionCall","src":"1514:18:16"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"1482:15:16"},"nodeType":"YulFunctionCall","src":"1482:51:16"},"nodeType":"YulExpressionStatement","src":"1482:51:16"}]},"name":"abi_encode_tuple_t_struct$_SwapOrder_$2436_memory_ptr__to_t_struct$_SwapOrder_$2436_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"528:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"539:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"550:4:16","type":""}],"src":"404:1135:16"},{"body":{"nodeType":"YulBlock","src":"1666:102:16","statements":[{"nodeType":"YulAssignment","src":"1676:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1688:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1699:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1684:3:16"},"nodeType":"YulFunctionCall","src":"1684:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1676:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1718:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1733:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1749:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1754:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1745:3:16"},"nodeType":"YulFunctionCall","src":"1745:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"1758:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1741:3:16"},"nodeType":"YulFunctionCall","src":"1741:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1729:3:16"},"nodeType":"YulFunctionCall","src":"1729:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1711:6:16"},"nodeType":"YulFunctionCall","src":"1711:51:16"},"nodeType":"YulExpressionStatement","src":"1711:51:16"}]},"name":"abi_encode_tuple_t_contract$_ISwapManager_$2510__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1635:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1646:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1657:4:16","type":""}],"src":"1544:224:16"},{"body":{"nodeType":"YulBlock","src":"1818:86:16","statements":[{"body":{"nodeType":"YulBlock","src":"1882:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1891:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1894:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1884:6:16"},"nodeType":"YulFunctionCall","src":"1884:12:16"},"nodeType":"YulExpressionStatement","src":"1884:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1841:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1852:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1867:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1872:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1863:3:16"},"nodeType":"YulFunctionCall","src":"1863:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"1876:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1859:3:16"},"nodeType":"YulFunctionCall","src":"1859:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1848:3:16"},"nodeType":"YulFunctionCall","src":"1848:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1838:2:16"},"nodeType":"YulFunctionCall","src":"1838:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1831:6:16"},"nodeType":"YulFunctionCall","src":"1831:50:16"},"nodeType":"YulIf","src":"1828:70:16"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1807:5:16","type":""}],"src":"1773:131:16"},{"body":{"nodeType":"YulBlock","src":"2064:508:16","statements":[{"body":{"nodeType":"YulBlock","src":"2111:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2120:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2123:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2113:6:16"},"nodeType":"YulFunctionCall","src":"2113:12:16"},"nodeType":"YulExpressionStatement","src":"2113:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2085:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2094:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2081:3:16"},"nodeType":"YulFunctionCall","src":"2081:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2106:3:16","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2077:3:16"},"nodeType":"YulFunctionCall","src":"2077:33:16"},"nodeType":"YulIf","src":"2074:53:16"},{"nodeType":"YulVariableDeclaration","src":"2136:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2162:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2149:12:16"},"nodeType":"YulFunctionCall","src":"2149:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2140:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2206:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2181:24:16"},"nodeType":"YulFunctionCall","src":"2181:31:16"},"nodeType":"YulExpressionStatement","src":"2181:31:16"},{"nodeType":"YulAssignment","src":"2221:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2231:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2221:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2245:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2277:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2288:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2273:3:16"},"nodeType":"YulFunctionCall","src":"2273:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2260:12:16"},"nodeType":"YulFunctionCall","src":"2260:32:16"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2249:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2326:7:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2301:24:16"},"nodeType":"YulFunctionCall","src":"2301:33:16"},"nodeType":"YulExpressionStatement","src":"2301:33:16"},{"nodeType":"YulAssignment","src":"2343:17:16","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2353:7:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2343:6:16"}]},{"nodeType":"YulAssignment","src":"2369:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2396:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2407:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:16"},"nodeType":"YulFunctionCall","src":"2392:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2379:12:16"},"nodeType":"YulFunctionCall","src":"2379:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2369:6:16"}]},{"nodeType":"YulAssignment","src":"2420:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2447:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2458:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2443:3:16"},"nodeType":"YulFunctionCall","src":"2443:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2430:12:16"},"nodeType":"YulFunctionCall","src":"2430:32:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2420:6:16"}]},{"nodeType":"YulAssignment","src":"2471:43:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2498:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2509:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2494:3:16"},"nodeType":"YulFunctionCall","src":"2494:19:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2481:12:16"},"nodeType":"YulFunctionCall","src":"2481:33:16"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2471:6:16"}]},{"nodeType":"YulAssignment","src":"2523:43:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2550:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2561:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2546:3:16"},"nodeType":"YulFunctionCall","src":"2546:19:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2533:12:16"},"nodeType":"YulFunctionCall","src":"2533:33:16"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2523:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1990:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2001:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2013:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2021:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2029:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2037:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2045:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2053:6:16","type":""}],"src":"1909:663:16"},{"body":{"nodeType":"YulBlock","src":"2678:76:16","statements":[{"nodeType":"YulAssignment","src":"2688:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2711:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2696:3:16"},"nodeType":"YulFunctionCall","src":"2696:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2688:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2730:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2741:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2723:6:16"},"nodeType":"YulFunctionCall","src":"2723:25:16"},"nodeType":"YulExpressionStatement","src":"2723:25:16"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2647:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2658:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2669:4:16","type":""}],"src":"2577:177:16"},{"body":{"nodeType":"YulBlock","src":"2863:212:16","statements":[{"body":{"nodeType":"YulBlock","src":"2909:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2918:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2921:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2911:6:16"},"nodeType":"YulFunctionCall","src":"2911:12:16"},"nodeType":"YulExpressionStatement","src":"2911:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2884:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2893:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2880:3:16"},"nodeType":"YulFunctionCall","src":"2880:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2905:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2876:3:16"},"nodeType":"YulFunctionCall","src":"2876:32:16"},"nodeType":"YulIf","src":"2873:52:16"},{"nodeType":"YulAssignment","src":"2934:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2957:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2944:12:16"},"nodeType":"YulFunctionCall","src":"2944:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2934:6:16"}]},{"nodeType":"YulAssignment","src":"2976:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3003:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3014:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2999:3:16"},"nodeType":"YulFunctionCall","src":"2999:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2986:12:16"},"nodeType":"YulFunctionCall","src":"2986:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2976:6:16"}]},{"nodeType":"YulAssignment","src":"3027:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3054:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3065:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3050:3:16"},"nodeType":"YulFunctionCall","src":"3050:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3037:12:16"},"nodeType":"YulFunctionCall","src":"3037:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3027:6:16"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2813:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2824:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2836:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2844:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2852:6:16","type":""}],"src":"2759:316:16"},{"body":{"nodeType":"YulBlock","src":"3121:303:16","statements":[{"nodeType":"YulAssignment","src":"3131:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3147:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3141:5:16"},"nodeType":"YulFunctionCall","src":"3141:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3131:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"3159:34:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3181:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3189:3:16","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3177:3:16"},"nodeType":"YulFunctionCall","src":"3177:16:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3163:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3276:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3297:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3304:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3309:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3300:3:16"},"nodeType":"YulFunctionCall","src":"3300:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3290:6:16"},"nodeType":"YulFunctionCall","src":"3290:31:16"},"nodeType":"YulExpressionStatement","src":"3290:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3341:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3344:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3334:6:16"},"nodeType":"YulFunctionCall","src":"3334:15:16"},"nodeType":"YulExpressionStatement","src":"3334:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3369:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3372:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3362:6:16"},"nodeType":"YulFunctionCall","src":"3362:15:16"},"nodeType":"YulExpressionStatement","src":"3362:15:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3211:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"3223:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3208:2:16"},"nodeType":"YulFunctionCall","src":"3208:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3247:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3259:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3244:2:16"},"nodeType":"YulFunctionCall","src":"3244:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3205:2:16"},"nodeType":"YulFunctionCall","src":"3205:62:16"},"nodeType":"YulIf","src":"3202:185:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3403:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3407:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3396:6:16"},"nodeType":"YulFunctionCall","src":"3396:22:16"},"nodeType":"YulExpressionStatement","src":"3396:22:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3110:6:16","type":""}],"src":"3080:344:16"},{"body":{"nodeType":"YulBlock","src":"3489:78:16","statements":[{"nodeType":"YulAssignment","src":"3499:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3514:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3508:5:16"},"nodeType":"YulFunctionCall","src":"3508:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3499:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3555:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3530:24:16"},"nodeType":"YulFunctionCall","src":"3530:31:16"},"nodeType":"YulExpressionStatement","src":"3530:31:16"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3468:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3479:5:16","type":""}],"src":"3429:138:16"},{"body":{"nodeType":"YulBlock","src":"3629:107:16","statements":[{"nodeType":"YulAssignment","src":"3639:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3654:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3648:5:16"},"nodeType":"YulFunctionCall","src":"3648:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3639:5:16"}]},{"body":{"nodeType":"YulBlock","src":"3714:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3723:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3726:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3716:6:16"},"nodeType":"YulFunctionCall","src":"3716:12:16"},"nodeType":"YulExpressionStatement","src":"3716:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3683:5:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3704:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3697:6:16"},"nodeType":"YulFunctionCall","src":"3697:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3690:6:16"},"nodeType":"YulFunctionCall","src":"3690:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3680:2:16"},"nodeType":"YulFunctionCall","src":"3680:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3673:6:16"},"nodeType":"YulFunctionCall","src":"3673:40:16"},"nodeType":"YulIf","src":"3670:60:16"}]},"name":"abi_decode_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3608:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3619:5:16","type":""}],"src":"3572:164:16"},{"body":{"nodeType":"YulBlock","src":"3849:884:16","statements":[{"body":{"nodeType":"YulBlock","src":"3896:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3905:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3898:6:16"},"nodeType":"YulFunctionCall","src":"3898:12:16"},"nodeType":"YulExpressionStatement","src":"3898:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3870:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3879:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3866:3:16"},"nodeType":"YulFunctionCall","src":"3866:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3891:3:16","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3862:3:16"},"nodeType":"YulFunctionCall","src":"3862:33:16"},"nodeType":"YulIf","src":"3859:53:16"},{"nodeType":"YulVariableDeclaration","src":"3921:30:16","value":{"arguments":[],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3934:15:16"},"nodeType":"YulFunctionCall","src":"3934:17:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3925:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3967:5:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"3974:29:16"},"nodeType":"YulFunctionCall","src":"3974:40:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3960:6:16"},"nodeType":"YulFunctionCall","src":"3960:55:16"},"nodeType":"YulExpressionStatement","src":"3960:55:16"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4035:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4042:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4031:3:16"},"nodeType":"YulFunctionCall","src":"4031:14:16"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4081:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4092:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4077:3:16"},"nodeType":"YulFunctionCall","src":"4077:18:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"4047:29:16"},"nodeType":"YulFunctionCall","src":"4047:49:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4024:6:16"},"nodeType":"YulFunctionCall","src":"4024:73:16"},"nodeType":"YulExpressionStatement","src":"4024:73:16"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4117:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4124:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4113:3:16"},"nodeType":"YulFunctionCall","src":"4113:14:16"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4139:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4150:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4135:3:16"},"nodeType":"YulFunctionCall","src":"4135:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4129:5:16"},"nodeType":"YulFunctionCall","src":"4129:25:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4106:6:16"},"nodeType":"YulFunctionCall","src":"4106:49:16"},"nodeType":"YulExpressionStatement","src":"4106:49:16"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4175:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4182:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4171:3:16"},"nodeType":"YulFunctionCall","src":"4171:14:16"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4197:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4208:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4193:3:16"},"nodeType":"YulFunctionCall","src":"4193:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4187:5:16"},"nodeType":"YulFunctionCall","src":"4187:25:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4164:6:16"},"nodeType":"YulFunctionCall","src":"4164:49:16"},"nodeType":"YulExpressionStatement","src":"4164:49:16"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4233:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4240:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4229:3:16"},"nodeType":"YulFunctionCall","src":"4229:15:16"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4280:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4291:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4276:3:16"},"nodeType":"YulFunctionCall","src":"4276:19:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"4246:29:16"},"nodeType":"YulFunctionCall","src":"4246:50:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4222:6:16"},"nodeType":"YulFunctionCall","src":"4222:75:16"},"nodeType":"YulExpressionStatement","src":"4222:75:16"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4317:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4324:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4313:3:16"},"nodeType":"YulFunctionCall","src":"4313:15:16"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4364:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4375:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4360:3:16"},"nodeType":"YulFunctionCall","src":"4360:19:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"4330:29:16"},"nodeType":"YulFunctionCall","src":"4330:50:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4306:6:16"},"nodeType":"YulFunctionCall","src":"4306:75:16"},"nodeType":"YulExpressionStatement","src":"4306:75:16"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4401:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4408:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4397:3:16"},"nodeType":"YulFunctionCall","src":"4397:15:16"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4424:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4435:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4420:3:16"},"nodeType":"YulFunctionCall","src":"4420:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4414:5:16"},"nodeType":"YulFunctionCall","src":"4414:26:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4390:6:16"},"nodeType":"YulFunctionCall","src":"4390:51:16"},"nodeType":"YulExpressionStatement","src":"4390:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4461:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4468:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4457:3:16"},"nodeType":"YulFunctionCall","src":"4457:15:16"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4484:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4495:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4480:3:16"},"nodeType":"YulFunctionCall","src":"4480:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4474:5:16"},"nodeType":"YulFunctionCall","src":"4474:26:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4450:6:16"},"nodeType":"YulFunctionCall","src":"4450:51:16"},"nodeType":"YulExpressionStatement","src":"4450:51:16"},{"nodeType":"YulVariableDeclaration","src":"4510:13:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4520:3:16","type":"","value":"256"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4514:2:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4543:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4550:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4539:3:16"},"nodeType":"YulFunctionCall","src":"4539:14:16"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4586:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4597:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4582:3:16"},"nodeType":"YulFunctionCall","src":"4582:18:16"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"4555:26:16"},"nodeType":"YulFunctionCall","src":"4555:46:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4532:6:16"},"nodeType":"YulFunctionCall","src":"4532:70:16"},"nodeType":"YulExpressionStatement","src":"4532:70:16"},{"nodeType":"YulVariableDeclaration","src":"4611:13:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4621:3:16","type":"","value":"288"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4615:2:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4644:5:16"},{"name":"_2","nodeType":"YulIdentifier","src":"4651:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4640:3:16"},"nodeType":"YulFunctionCall","src":"4640:14:16"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4687:9:16"},{"name":"_2","nodeType":"YulIdentifier","src":"4698:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4683:3:16"},"nodeType":"YulFunctionCall","src":"4683:18:16"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"4656:26:16"},"nodeType":"YulFunctionCall","src":"4656:46:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4633:6:16"},"nodeType":"YulFunctionCall","src":"4633:70:16"},"nodeType":"YulExpressionStatement","src":"4633:70:16"},{"nodeType":"YulAssignment","src":"4712:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4722:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4712:6:16"}]}]},"name":"abi_decode_tuple_t_struct$_SwapOrder_$2436_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3815:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3826:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3838:6:16","type":""}],"src":"3741:992:16"},{"body":{"nodeType":"YulBlock","src":"4979:350:16","statements":[{"nodeType":"YulAssignment","src":"4989:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5001:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5012:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4997:3:16"},"nodeType":"YulFunctionCall","src":"4997:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4989:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"5025:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5043:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5048:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5039:3:16"},"nodeType":"YulFunctionCall","src":"5039:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"5052:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5035:3:16"},"nodeType":"YulFunctionCall","src":"5035:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5029:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5070:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5085:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5093:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5081:3:16"},"nodeType":"YulFunctionCall","src":"5081:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5063:6:16"},"nodeType":"YulFunctionCall","src":"5063:34:16"},"nodeType":"YulExpressionStatement","src":"5063:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5117:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5128:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5113:3:16"},"nodeType":"YulFunctionCall","src":"5113:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5137:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5145:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5133:3:16"},"nodeType":"YulFunctionCall","src":"5133:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5106:6:16"},"nodeType":"YulFunctionCall","src":"5106:43:16"},"nodeType":"YulExpressionStatement","src":"5106:43:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5169:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5180:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5165:3:16"},"nodeType":"YulFunctionCall","src":"5165:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"5185:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5158:6:16"},"nodeType":"YulFunctionCall","src":"5158:34:16"},"nodeType":"YulExpressionStatement","src":"5158:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5212:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5223:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5208:3:16"},"nodeType":"YulFunctionCall","src":"5208:18:16"},{"name":"value3","nodeType":"YulIdentifier","src":"5228:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5201:6:16"},"nodeType":"YulFunctionCall","src":"5201:34:16"},"nodeType":"YulExpressionStatement","src":"5201:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5255:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5266:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5251:3:16"},"nodeType":"YulFunctionCall","src":"5251:19:16"},{"name":"value4","nodeType":"YulIdentifier","src":"5272:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5244:6:16"},"nodeType":"YulFunctionCall","src":"5244:35:16"},"nodeType":"YulExpressionStatement","src":"5244:35:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5299:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5310:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5295:3:16"},"nodeType":"YulFunctionCall","src":"5295:19:16"},{"name":"value5","nodeType":"YulIdentifier","src":"5316:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5288:6:16"},"nodeType":"YulFunctionCall","src":"5288:35:16"},"nodeType":"YulExpressionStatement","src":"5288:35:16"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4908:9:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4919:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4927:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4935:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4943:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4951:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4959:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4970:4:16","type":""}],"src":"4738:591:16"},{"body":{"nodeType":"YulBlock","src":"5415:103:16","statements":[{"body":{"nodeType":"YulBlock","src":"5461:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5470:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5473:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5463:6:16"},"nodeType":"YulFunctionCall","src":"5463:12:16"},"nodeType":"YulExpressionStatement","src":"5463:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5436:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5445:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5432:3:16"},"nodeType":"YulFunctionCall","src":"5432:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5457:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5428:3:16"},"nodeType":"YulFunctionCall","src":"5428:32:16"},"nodeType":"YulIf","src":"5425:52:16"},{"nodeType":"YulAssignment","src":"5486:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5502:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5496:5:16"},"nodeType":"YulFunctionCall","src":"5496:16:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5486:6:16"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5381:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5392:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5404:6:16","type":""}],"src":"5334:184:16"},{"body":{"nodeType":"YulBlock","src":"5736:306:16","statements":[{"nodeType":"YulAssignment","src":"5746:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5758:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5769:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5754:3:16"},"nodeType":"YulFunctionCall","src":"5754:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5746:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"5782:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5800:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5805:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5796:3:16"},"nodeType":"YulFunctionCall","src":"5796:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"5809:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5792:3:16"},"nodeType":"YulFunctionCall","src":"5792:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5786:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5827:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5842:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5850:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5838:3:16"},"nodeType":"YulFunctionCall","src":"5838:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5820:6:16"},"nodeType":"YulFunctionCall","src":"5820:34:16"},"nodeType":"YulExpressionStatement","src":"5820:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5874:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5885:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5870:3:16"},"nodeType":"YulFunctionCall","src":"5870:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5894:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5902:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5890:3:16"},"nodeType":"YulFunctionCall","src":"5890:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5863:6:16"},"nodeType":"YulFunctionCall","src":"5863:43:16"},"nodeType":"YulExpressionStatement","src":"5863:43:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5926:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5937:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5922:3:16"},"nodeType":"YulFunctionCall","src":"5922:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"5942:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5915:6:16"},"nodeType":"YulFunctionCall","src":"5915:34:16"},"nodeType":"YulExpressionStatement","src":"5915:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5969:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5980:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5965:3:16"},"nodeType":"YulFunctionCall","src":"5965:18:16"},{"name":"value3","nodeType":"YulIdentifier","src":"5985:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5958:6:16"},"nodeType":"YulFunctionCall","src":"5958:34:16"},"nodeType":"YulExpressionStatement","src":"5958:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6012:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6023:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6008:3:16"},"nodeType":"YulFunctionCall","src":"6008:19:16"},{"name":"value4","nodeType":"YulIdentifier","src":"6029:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6001:6:16"},"nodeType":"YulFunctionCall","src":"6001:35:16"},"nodeType":"YulExpressionStatement","src":"6001:35:16"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5673:9:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5684:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5692:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5700:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5708:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5716:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5727:4:16","type":""}],"src":"5523:519:16"},{"body":{"nodeType":"YulBlock","src":"6204:162:16","statements":[{"nodeType":"YulAssignment","src":"6214:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6226:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6237:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6222:3:16"},"nodeType":"YulFunctionCall","src":"6222:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6214:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6256:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"6267:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6249:6:16"},"nodeType":"YulFunctionCall","src":"6249:25:16"},"nodeType":"YulExpressionStatement","src":"6249:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6294:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6305:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6290:3:16"},"nodeType":"YulFunctionCall","src":"6290:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"6310:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6283:6:16"},"nodeType":"YulFunctionCall","src":"6283:34:16"},"nodeType":"YulExpressionStatement","src":"6283:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6337:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6348:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6333:3:16"},"nodeType":"YulFunctionCall","src":"6333:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"6353:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6326:6:16"},"nodeType":"YulFunctionCall","src":"6326:34:16"},"nodeType":"YulExpressionStatement","src":"6326:34:16"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_bytes32__to_t_bytes32_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6157:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6168:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6176:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6184:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6195:4:16","type":""}],"src":"6047:319:16"},{"body":{"nodeType":"YulBlock","src":"6508:275:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6518:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6538:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6532:5:16"},"nodeType":"YulFunctionCall","src":"6532:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6522:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6554:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6563:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6558:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6625:77:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6650:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"6655:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6646:3:16"},"nodeType":"YulFunctionCall","src":"6646:11:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6673:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"6681:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6669:3:16"},"nodeType":"YulFunctionCall","src":"6669:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"6685:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6665:3:16"},"nodeType":"YulFunctionCall","src":"6665:25:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6659:5:16"},"nodeType":"YulFunctionCall","src":"6659:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6639:6:16"},"nodeType":"YulFunctionCall","src":"6639:53:16"},"nodeType":"YulExpressionStatement","src":"6639:53:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6584:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"6587:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6581:2:16"},"nodeType":"YulFunctionCall","src":"6581:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6595:21:16","statements":[{"nodeType":"YulAssignment","src":"6597:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6606:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"6609:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6602:3:16"},"nodeType":"YulFunctionCall","src":"6602:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6597:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"6577:3:16","statements":[]},"src":"6573:129:16"},{"nodeType":"YulVariableDeclaration","src":"6711:26:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6725:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"6730:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6721:3:16"},"nodeType":"YulFunctionCall","src":"6721:16:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6715:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6753:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"6757:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6746:6:16"},"nodeType":"YulFunctionCall","src":"6746:13:16"},"nodeType":"YulExpressionStatement","src":"6746:13:16"},{"nodeType":"YulAssignment","src":"6768:9:16","value":{"name":"_1","nodeType":"YulIdentifier","src":"6775:2:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6768:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6484:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6489:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6500:3:16","type":""}],"src":"6371:412:16"},{"body":{"nodeType":"YulBlock","src":"6962:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6979:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6990:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6972:6:16"},"nodeType":"YulFunctionCall","src":"6972:21:16"},"nodeType":"YulExpressionStatement","src":"6972:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7013:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7024:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7009:3:16"},"nodeType":"YulFunctionCall","src":"7009:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7029:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7002:6:16"},"nodeType":"YulFunctionCall","src":"7002:30:16"},"nodeType":"YulExpressionStatement","src":"7002:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7052:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7063:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7048:3:16"},"nodeType":"YulFunctionCall","src":"7048:18:16"},{"hexValue":"46756c66696c6c206f72646572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"7068:22:16","type":"","value":"Fulfill order failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7041:6:16"},"nodeType":"YulFunctionCall","src":"7041:50:16"},"nodeType":"YulExpressionStatement","src":"7041:50:16"},{"nodeType":"YulAssignment","src":"7100:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7112:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7123:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7108:3:16"},"nodeType":"YulFunctionCall","src":"7108:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7100:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_786164181b1dbf10e7134b576dc7774e946256bcc196a412825e802f7a01134d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6939:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6953:4:16","type":""}],"src":"6788:344:16"},{"body":{"nodeType":"YulBlock","src":"7266:119:16","statements":[{"nodeType":"YulAssignment","src":"7276:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7288:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7299:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7284:3:16"},"nodeType":"YulFunctionCall","src":"7284:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7276:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7318:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"7329:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7311:6:16"},"nodeType":"YulFunctionCall","src":"7311:25:16"},"nodeType":"YulExpressionStatement","src":"7311:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7356:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7352:3:16"},"nodeType":"YulFunctionCall","src":"7352:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"7372:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7345:6:16"},"nodeType":"YulFunctionCall","src":"7345:34:16"},"nodeType":"YulExpressionStatement","src":"7345:34:16"}]},"name":"abi_encode_tuple_t_uint256_t_bytes32__to_t_uint256_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7227:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7238:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7246:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7257:4:16","type":""}],"src":"7137:248:16"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_struct$_SwapOrder_$2436_memory_ptr__to_t_struct$_SwapOrder_$2436_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 320)\n        abi_encode_address(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_address(memberValue0, add(headStart, 0x20))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        let memberValue0_1 := mload(add(value0, 0x80))\n        abi_encode_address(memberValue0_1, add(headStart, 0x80))\n        let memberValue0_2 := mload(add(value0, 0xa0))\n        abi_encode_address(memberValue0_2, add(headStart, 0xa0))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _1 := 0x0100\n        let memberValue0_3 := mload(add(value0, _1))\n        abi_encode_bool(memberValue0_3, add(headStart, _1))\n        let _2 := 0x0120\n        let memberValue0_4 := mload(add(value0, _2))\n        abi_encode_bool(memberValue0_4, add(headStart, _2))\n    }\n    function abi_encode_tuple_t_contract$_ISwapManager_$2510__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 320)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_SwapOrder_$2436_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 320) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, abi_decode_address_fromMemory(headStart))\n        mstore(add(value, 32), abi_decode_address_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), mload(add(headStart, 64)))\n        mstore(add(value, 96), mload(add(headStart, 96)))\n        mstore(add(value, 128), abi_decode_address_fromMemory(add(headStart, 128)))\n        mstore(add(value, 160), abi_decode_address_fromMemory(add(headStart, 160)))\n        mstore(add(value, 192), mload(add(headStart, 192)))\n        mstore(add(value, 224), mload(add(headStart, 224)))\n        let _1 := 256\n        mstore(add(value, _1), abi_decode_bool_fromMemory(add(headStart, _1)))\n        let _2 := 288\n        mstore(add(value, _2), abi_decode_bool_fromMemory(add(headStart, _2)))\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes32__to_t_bytes32_t_uint256_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_786164181b1dbf10e7134b576dc7774e946256bcc196a412825e802f7a01134d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Fulfill order failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_bytes32__to_t_uint256_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061003f5760003560e01c80635778472a14610044578063709d039d1461007a578063eb9bd099146100b2578063f6dccf2e146100d3575b600080fd5b34801561005057600080fd5b5061006461005f3660046103fc565b6100e8565b6040516100719190610415565b60405180910390f35b34801561008657600080fd5b5060005461009a906001600160a01b031681565b6040516001600160a01b039091168152602001610071565b6100c56100c03660046104df565b6101a9565b604051908152602001610071565b6100e66100e1366004610538565b6102c9565b005b6040805161014081018252600080825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018190526101208201819052549151632bbc239560e11b81526004810184905290916001600160a01b031690635778472a9060240161014060405180830381865afa15801561017f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a391906105bc565b92915050565b6000805481906001600160a01b0390811690637535f2df908a16156101cf5760006101d1565b875b6040516001600160e01b031960e084901b1681526001600160a01b03808d1660048301528b166024820152604481018a9052606481018990526084810188905260a4810187905260c40160206040518083038185885af1158015610239573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061025e9190610668565b604080516001600160a01b038b811682528a1660208201529081018890526060810187905260808101859052909150339082907f49f29b9cfb3bb0783c26f435fe9808e8b7fd6958ebb9363de51f5b697c712c749060a00160405180910390a3979650505050505050565b600080546040516024810186905260448101859052606481018490526001600160a01b0390911690349060840160408051601f198184030181529181526020820180516001600160e01b0316637b6e679760e11b1790525161032b9190610681565b60006040518083038185875af1925050503d8060008114610368576040519150601f19603f3d011682016040523d82523d6000602084013e61036d565b606091505b50509050806103b95760405162461bcd60e51b8152602060048201526014602482015273119d5b199a5b1b081bdc99195c8819985a5b195960621b604482015260640160405180910390fd5b6040805184815260208101849052339186917fdafd13066d5a7c6b0591d8c19f57c75c45b8fa038153891c78a582507cbd18c7910160405180910390a350505050565b60006020828403121561040e57600080fd5b5035919050565b81516001600160a01b031681526101408101602083015161044160208401826001600160a01b03169052565b506040830151604083015260608301516060830152608083015161047060808401826001600160a01b03169052565b5060a083015161048b60a08401826001600160a01b03169052565b5060c083015160c083015260e083015160e0830152610100808401516104b48285018215159052565b5050610120928301511515919092015290565b6001600160a01b03811681146104dc57600080fd5b50565b60008060008060008060c087890312156104f857600080fd5b8635610503816104c7565b95506020870135610513816104c7565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060006060848603121561054d57600080fd5b505081359360208301359350604090920135919050565b604051610140810167ffffffffffffffff8111828210171561059657634e487b7160e01b600052604160045260246000fd5b60405290565b80516105a7816104c7565b919050565b805180151581146105a757600080fd5b600061014082840312156105cf57600080fd5b6105d7610564565b6105e08361059c565b81526105ee6020840161059c565b602082015260408301516040820152606083015160608201526106136080840161059c565b608082015261062460a0840161059c565b60a082015260c083015160c082015260e083015160e082015261010061064b8185016105ac565b9082015261012061065d8482016105ac565b908201529392505050565b60006020828403121561067a57600080fd5b5051919050565b6000825160005b818110156106a25760208186018101518583015201610688565b50600092019182525091905056fea2646970667358221220489de4d2d13a41d4b37d192003909091fc53b35668a432f37ec41d784baf444064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5778472A EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x709D039D EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xEB9BD099 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xF6DCCF2E EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x9A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x71 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x71 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE SLOAD SWAP2 MLOAD PUSH4 0x2BBC2395 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x5778472A SWAP1 PUSH1 0x24 ADD PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH4 0x7535F2DF SWAP1 DUP11 AND ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 PUSH2 0x1D1 JUMP JUMPDEST DUP8 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x84 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xA4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xC4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x239 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE DUP11 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 DUP3 SWAP1 PUSH32 0x49F29B9CFB3BB0783C26F435FE9808E8B7FD6958EBB9363DE51F5B697C712C74 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x7B6E6797 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x36D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x119D5B199A5B1B081BDC99195C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 DUP7 SWAP2 PUSH32 0xDAFD13066D5A7C6B0591D8C19F57C75C45B8FA038153891C78A582507CBD18C7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH2 0x140 DUP2 ADD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x441 PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x470 PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x48B PUSH1 0xA0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD PUSH2 0x4B4 DUP3 DUP6 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH2 0x120 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x503 DUP2 PUSH2 0x4C7 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x513 DUP2 PUSH2 0x4C7 JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x596 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x5A7 DUP2 PUSH2 0x4C7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D7 PUSH2 0x564 JUMP JUMPDEST PUSH2 0x5E0 DUP4 PUSH2 0x59C JUMP JUMPDEST DUP2 MSTORE PUSH2 0x5EE PUSH1 0x20 DUP5 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x613 PUSH1 0x80 DUP5 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x624 PUSH1 0xA0 DUP5 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x64B DUP2 DUP6 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0x65D DUP5 DUP3 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x688 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE SWAP14 0xE4 0xD2 0xD1 GASPRICE COINBASE 0xD4 0xB3 PUSH30 0x192003909091FC53B35668A432F37EC41D784BAF444064736F6C63430008 EQ STOP CALLER ","sourceMap":"100:2200:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:142;;;;;;;;;;-1:-1:-1;2156:142:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;127:31;;;;;;;;;;-1:-1:-1;127:31:14;;;;-1:-1:-1;;;;;127:31:14;;;;;;-1:-1:-1;;;;;1729:32:16;;;1711:51;;1699:2;1684:18;127:31:14;1544:224:16;742:736:14;;;;;;:::i;:::-;;:::i;:::-;;;2723:25:16;;;2711:2;2696:18;742:736:14;2577:177:16;1535:586:14;;;;;;:::i;:::-;;:::i;:::-;;2156:142;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2262:11:14;:29;;-1:-1:-1;;;2262:29:14;;;;;2723:25:16;;;-1:-1:-1;;;;;;;2262:11:14;;:20;;2696:18:16;;2262:29:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2255:36;2156:142;-1:-1:-1;;2156:142:14:o;742:736::-;957:7;994:11;;957:7;;-1:-1:-1;;;;;994:11:14;;;;:23;;1038:21;;;:36;;1073:1;1038:36;;;1062:8;1038:36;994:237;;-1:-1:-1;;;;;;994:237:14;;;;;;;-1:-1:-1;;;;;5081:15:16;;;994:237:14;;;5063:34:16;5133:15;;5113:18;;;5106:43;5165:18;;;5158:34;;;5208:18;;;5201:34;;;5251:19;;;5244:35;;;5295:19;;;5288:35;;;4997:19;;994:237:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1255:183;;;-1:-1:-1;;;;;5838:15:16;;;5820:34;;5890:15;;5885:2;5870:18;;5863:43;5922:18;;;5915:34;;;5980:2;5965:18;;5958:34;;;6023:3;6008:19;;6001:35;;;976:255:14;;-1:-1:-1;1303:10:14;;976:255;;1255:183;;5769:3:16;5754:19;1255:183:14;;;;;;;1464:7;742:736;-1:-1:-1;;;;;;;742:736:14:o;1535:586::-;1740:12;1766:11;;1815:170;;;;;6249:25:16;;;6290:18;;;6283:34;;;6333:18;;;6326:34;;;-1:-1:-1;;;;;1766:11:14;;;;1791:9;;6222:18:16;;1815:170:14;;;-1:-1:-1;;1815:170:14;;;;;;;;;;;;;;-1:-1:-1;;;;;1815:170:14;-1:-1:-1;;;1815:170:14;;;1758:237;;;1815:170;1758:237;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1739:256;;;2013:7;2005:40;;;;-1:-1:-1;;;2005:40:14;;6990:2:16;2005:40:14;;;6972:21:16;7029:2;7009:18;;;7002:30;-1:-1:-1;;;7048:18:16;;;7041:50;7108:18;;2005:40:14;;;;;;;;2060:54;;;7311:25:16;;;7367:2;7352:18;;7345:34;;;2084:10:14;;2075:7;;2060:54;;7284:18:16;2060:54:14;;;;;;;1656:465;1535:586;;;:::o;14:180:16:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:16;;14:180;-1:-1:-1;14:180:16:o;404:1135::-;624:13;;-1:-1:-1;;;;;265:31:16;253:44;;592:3;577:19;;696:4;688:6;684:17;678:24;711:54;759:4;748:9;744:20;730:12;-1:-1:-1;;;;;265:31:16;253:44;;199:104;711:54;;821:4;813:6;809:17;803:24;796:4;785:9;781:20;774:54;884:4;876:6;872:17;866:24;859:4;848:9;844:20;837:54;940:4;932:6;928:17;922:24;955:56;1005:4;994:9;990:20;974:14;-1:-1:-1;;;;;265:31:16;253:44;;199:104;955:56;;1060:4;1052:6;1048:17;1042:24;1075:56;1125:4;1114:9;1110:20;1094:14;-1:-1:-1;;;;;265:31:16;253:44;;199:104;1075:56;;1187:4;1179:6;1175:17;1169:24;1162:4;1151:9;1147:20;1140:54;1250:4;1242:6;1238:17;1232:24;1225:4;1214:9;1210:20;1203:54;1276:6;1331:2;1323:6;1319:15;1313:22;1344:51;1391:2;1380:9;1376:18;1360:14;378:13;371:21;359:34;;308:91;1344:51;-1:-1:-1;;1414:6:16;1457:15;;;1451:22;378:13;371:21;1514:18;;;;359:34;404:1135;:::o;1773:131::-;-1:-1:-1;;;;;1848:31:16;;1838:42;;1828:70;;1894:1;1891;1884:12;1828:70;1773:131;:::o;1909:663::-;2013:6;2021;2029;2037;2045;2053;2106:3;2094:9;2085:7;2081:23;2077:33;2074:53;;;2123:1;2120;2113:12;2074:53;2162:9;2149:23;2181:31;2206:5;2181:31;:::i;:::-;2231:5;-1:-1:-1;2288:2:16;2273:18;;2260:32;2301:33;2260:32;2301:33;:::i;:::-;1909:663;;2353:7;;-1:-1:-1;;;;2407:2:16;2392:18;;2379:32;;2458:2;2443:18;;2430:32;;2509:3;2494:19;;2481:33;;-1:-1:-1;2561:3:16;2546:19;;;2533:33;;-1:-1:-1;1909:663:16:o;2759:316::-;2836:6;2844;2852;2905:2;2893:9;2884:7;2880:23;2876:32;2873:52;;;2921:1;2918;2911:12;2873:52;-1:-1:-1;;2944:23:16;;;3014:2;2999:18;;2986:32;;-1:-1:-1;3065:2:16;3050:18;;;3037:32;;2759:316;-1:-1:-1;2759:316:16:o;3080:344::-;3147:2;3141:9;3189:3;3177:16;;3223:18;3208:34;;3244:22;;;3205:62;3202:185;;;3309:10;3304:3;3300:20;3297:1;3290:31;3344:4;3341:1;3334:15;3372:4;3369:1;3362:15;3202:185;3403:2;3396:22;3080:344;:::o;3429:138::-;3508:13;;3530:31;3508:13;3530:31;:::i;:::-;3429:138;;;:::o;3572:164::-;3648:13;;3697;;3690:21;3680:32;;3670:60;;3726:1;3723;3716:12;3741:992;3838:6;3891:3;3879:9;3870:7;3866:23;3862:33;3859:53;;;3908:1;3905;3898:12;3859:53;3934:17;;:::i;:::-;3974:40;4004:9;3974:40;:::i;:::-;3967:5;3960:55;4047:49;4092:2;4081:9;4077:18;4047:49;:::i;:::-;4042:2;4035:5;4031:14;4024:73;4150:2;4139:9;4135:18;4129:25;4124:2;4117:5;4113:14;4106:49;4208:2;4197:9;4193:18;4187:25;4182:2;4175:5;4171:14;4164:49;4246:50;4291:3;4280:9;4276:19;4246:50;:::i;:::-;4240:3;4233:5;4229:15;4222:75;4330:50;4375:3;4364:9;4360:19;4330:50;:::i;:::-;4324:3;4317:5;4313:15;4306:75;4435:3;4424:9;4420:19;4414:26;4408:3;4401:5;4397:15;4390:51;4495:3;4484:9;4480:19;4474:26;4468:3;4461:5;4457:15;4450:51;4520:3;4555:46;4597:2;4586:9;4582:18;4555:46;:::i;:::-;4539:14;;;4532:70;4621:3;4656:46;4683:18;;;4656:46;:::i;:::-;4640:14;;;4633:70;4644:5;3741:992;-1:-1:-1;;;3741:992:16:o;5334:184::-;5404:6;5457:2;5445:9;5436:7;5432:23;5428:32;5425:52;;;5473:1;5470;5463:12;5425:52;-1:-1:-1;5496:16:16;;5334:184;-1:-1:-1;5334:184:16:o;6371:412::-;6500:3;6538:6;6532:13;6563:1;6573:129;6587:6;6584:1;6581:13;6573:129;;;6685:4;6669:14;;;6665:25;;6659:32;6646:11;;;6639:53;6602:12;6573:129;;;-1:-1:-1;6757:1:16;6721:16;;6746:13;;;-1:-1:-1;6721:16:16;6371:412;-1:-1:-1;6371:412:16:o"},"gasEstimates":{"creation":{"codeDepositCost":"353200","executionCost":"infinite","totalCost":"infinite"},"external":{"fulfillOrder(bytes32,uint256,bytes32)":"infinite","getOrder(bytes32)":"infinite","receiveOrder(address,address,uint256,uint256,uint256,bytes32)":"infinite","swapManager()":"2337"}},"methodIdentifiers":{"fulfillOrder(bytes32,uint256,bytes32)":"f6dccf2e","getOrder(bytes32)":"5778472a","receiveOrder(address,address,uint256,uint256,uint256,bytes32)":"eb9bd099","swapManager()":"709d039d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"OrderFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"OrderReceived\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"fulfillOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"}],\"internalType\":\"struct ISwapManager.SwapOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"receiveOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapManager\",\"outputs\":[{\"internalType\":\"contract ISwapManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockRelayer.sol\":\"MockRelayer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISwapManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface ISwapManager {\\n    struct SwapOrder {\\n        address initiator;\\n        address resolver;\\n        uint256 amountIn;\\n        uint256 amountOutMin;\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 deadline;\\n        bytes32 secretHash;\\n        bool isFulfilled;\\n        bool isRefunded;\\n    }\\n\\n    event OrderCreated(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n\\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        bytes32 secret\\n    );\\n\\n    event OrderRefunded(bytes32 indexed orderId);\\n\\n    function createOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32);\\n\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable;\\n\\n    function refundOrder(bytes32 orderId) external;\\n\\n    function getOrder(bytes32 orderId) external view returns (SwapOrder memory);\\n    \\n    /**\\n     * @notice Register a worker wallet that can be used to fulfill orders\\n     * @param workerWallet The address of the worker wallet to register\\n     */\\n    function registerWorkerWallet(address workerWallet) external;\\n}\\n\",\"keccak256\":\"0xab77d3bf5618e43532c34e3ba26ee043d7479e42b81d345953d47ac2db8e4bff\",\"license\":\"MIT\"},\"contracts/mock/MockRelayer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"../interfaces/ISwapManager.sol\\\";\\n\\ncontract MockRelayer {\\n    ISwapManager public swapManager;\\n    \\n    // Events to track relayer actions\\n    event OrderReceived(\\n        bytes32 indexed orderId,\\n        address indexed initiator,\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        bytes32 secretHash\\n    );\\n    \\n    event OrderFulfilled(\\n        bytes32 indexed orderId,\\n        address indexed resolver,\\n        uint256 amountOut,\\n        bytes32 secret\\n    );\\n\\n    constructor(address _swapManager) {\\n        swapManager = ISwapManager(_swapManager);\\n    }\\n\\n    // Simulate receiving an order from a user\\n    function receiveOrder(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        uint256 deadline,\\n        bytes32 secretHash\\n    ) external payable returns (bytes32) {\\n        bytes32 orderId = swapManager.createOrder{\\n            value: tokenIn == address(0) ? amountIn : 0\\n        }(\\n            tokenIn,\\n            tokenOut,\\n            amountIn,\\n            amountOutMin,\\n            deadline,\\n            secretHash\\n        );\\n        \\n        emit OrderReceived(\\n            orderId,\\n            msg.sender,\\n            tokenIn,\\n            tokenOut,\\n            amountIn,\\n            amountOutMin,\\n            secretHash\\n        );\\n        \\n        return orderId;\\n    }\\n    \\n    // Simulate a resolver fulfilling an order\\n    function fulfillOrder(\\n        bytes32 orderId,\\n        uint256 amountOut,\\n        bytes32 secret\\n    ) external payable {\\n        // Forward any ETH sent with the transaction to the swap manager\\n        (bool success, ) = address(swapManager).call{value: msg.value}(\\n            abi.encodeWithSignature(\\n                \\\"fulfillOrder(bytes32,uint256,bytes32)\\\",\\n                orderId,\\n                amountOut,\\n                secret\\n            )\\n        );\\n        require(success, \\\"Fulfill order failed\\\");\\n        emit OrderFulfilled(orderId, msg.sender, amountOut, secret);\\n    }\\n    \\n    // Get order details\\n    function getOrder(bytes32 orderId) external view returns (ISwapManager.SwapOrder memory) {\\n        return swapManager.getOrder(orderId);\\n    }\\n}\\n\",\"keccak256\":\"0x69ee3e027eed969dcd308eb0a15e7fdf8b033a796e608154fb01c310f60b4a64\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2636,"contract":"contracts/mock/MockRelayer.sol:MockRelayer","label":"swapManager","offset":0,"slot":"0","type":"t_contract(ISwapManager)2510"}],"types":{"t_contract(ISwapManager)2510":{"encoding":"inplace","label":"contract ISwapManager","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mock/WETH9.sol":{"WETH9":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":197,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":276,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":139,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":117,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2732:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:16"},"nodeType":"YulFunctionCall","src":"66:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:16"},"nodeType":"YulFunctionCall","src":"56:31:16"},"nodeType":"YulExpressionStatement","src":"56:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:16"},"nodeType":"YulFunctionCall","src":"96:15:16"},"nodeType":"YulExpressionStatement","src":"96:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:16"},"nodeType":"YulFunctionCall","src":"120:15:16"},"nodeType":"YulExpressionStatement","src":"120:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:16"},{"body":{"nodeType":"YulBlock","src":"201:325:16","statements":[{"nodeType":"YulAssignment","src":"211:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:16"},"nodeType":"YulFunctionCall","src":"221:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:16"},"nodeType":"YulFunctionCall","src":"268:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:16","statements":[{"nodeType":"YulAssignment","src":"321:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:16"},"nodeType":"YulFunctionCall","src":"331:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:16"},"nodeType":"YulFunctionCall","src":"292:26:16"},"nodeType":"YulIf","src":"289:61:16"},{"body":{"nodeType":"YulBlock","src":"409:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:16"},"nodeType":"YulFunctionCall","src":"433:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:16"},"nodeType":"YulFunctionCall","src":"423:31:16"},"nodeType":"YulExpressionStatement","src":"423:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:16"},"nodeType":"YulFunctionCall","src":"467:15:16"},"nodeType":"YulExpressionStatement","src":"467:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:16"},"nodeType":"YulFunctionCall","src":"495:15:16"},"nodeType":"YulExpressionStatement","src":"495:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:16"},"nodeType":"YulFunctionCall","src":"385:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:16"},"nodeType":"YulFunctionCall","src":"362:38:16"},"nodeType":"YulIf","src":"359:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:16","type":""}],"src":"146:380:16"},{"body":{"nodeType":"YulBlock","src":"587:65:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:16"},"nodeType":"YulFunctionCall","src":"597:14:16"},"nodeType":"YulExpressionStatement","src":"597:14:16"},{"nodeType":"YulAssignment","src":"620:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:16"},"nodeType":"YulFunctionCall","src":"628:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:16"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:16","type":""}],"src":"531:121:16"},{"body":{"nodeType":"YulBlock","src":"738:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:16","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:16","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:16","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:16"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:16"},"nodeType":"YulFunctionCall","src":"809:17:16"},"nodeType":"YulExpressionStatement","src":"809:17:16"},{"nodeType":"YulVariableDeclaration","src":"839:31:16","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:16"},"nodeType":"YulFunctionCall","src":"851:19:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:16","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:16"},"nodeType":"YulFunctionCall","src":"919:19:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:16"},"nodeType":"YulFunctionCall","src":"912:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:16"},"nodeType":"YulFunctionCall","src":"902:38:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:16","statements":[{"nodeType":"YulAssignment","src":"979:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:16","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:16"},"nodeType":"YulFunctionCall","src":"956:20:16"},"nodeType":"YulIf","src":"953:47:16"},{"nodeType":"YulVariableDeclaration","src":"1013:41:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:16","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:16"},"nodeType":"YulFunctionCall","src":"1040:12:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:16"},"nodeType":"YulFunctionCall","src":"1033:20:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:16"},"nodeType":"YulFunctionCall","src":"1023:31:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:16","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:16"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:16"},"nodeType":"YulFunctionCall","src":"1167:17:16"},"nodeType":"YulExpressionStatement","src":"1167:17:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:16"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:16"},"nodeType":"YulFunctionCall","src":"1112:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:16","statements":[{"nodeType":"YulAssignment","src":"1128:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:16"},"nodeType":"YulFunctionCall","src":"1137:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:16","statements":[]},"src":"1104:82:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:16"},"nodeType":"YulFunctionCall","src":"751:11:16"},"nodeType":"YulIf","src":"748:448:16"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:16","type":""}],"src":"657:545:16"},{"body":{"nodeType":"YulBlock","src":"1292:81:16","statements":[{"nodeType":"YulAssignment","src":"1302:65:16","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:16","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:16"},"nodeType":"YulFunctionCall","src":"1331:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:16"},"nodeType":"YulFunctionCall","src":"1344:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:16"},"nodeType":"YulFunctionCall","src":"1327:24:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:16"},"nodeType":"YulFunctionCall","src":"1323:29:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:16"},"nodeType":"YulFunctionCall","src":"1313:40:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:16","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:16"},"nodeType":"YulFunctionCall","src":"1355:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:16"},"nodeType":"YulFunctionCall","src":"1310:57:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:16","type":""}],"src":"1207:166:16"},{"body":{"nodeType":"YulBlock","src":"1474:1256:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:16"},"nodeType":"YulFunctionCall","src":"1498:10:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:16"},"nodeType":"YulFunctionCall","src":"1553:18:16"},"nodeType":"YulExpressionStatement","src":"1553:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:16"},"nodeType":"YulFunctionCall","src":"1535:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:16"},"nodeType":"YulFunctionCall","src":"1531:18:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:16"},"nodeType":"YulFunctionCall","src":"1520:30:16"},"nodeType":"YulIf","src":"1517:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:16"},"nodeType":"YulFunctionCall","src":"1658:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:16"},"nodeType":"YulFunctionCall","src":"1632:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:16"},"nodeType":"YulFunctionCall","src":"1582:97:16"},"nodeType":"YulExpressionStatement","src":"1582:97:16"},{"nodeType":"YulVariableDeclaration","src":"1688:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:16","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:16","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:16","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:16"},"nodeType":"YulFunctionCall","src":"1858:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:16"},"nodeType":"YulFunctionCall","src":"1846:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:16"},"nodeType":"YulFunctionCall","src":"1893:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:16"},"nodeType":"YulFunctionCall","src":"2067:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:16"},"nodeType":"YulFunctionCall","src":"2061:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:16"},"nodeType":"YulFunctionCall","src":"2046:42:16"},"nodeType":"YulExpressionStatement","src":"2046:42:16"},{"nodeType":"YulAssignment","src":"2105:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:16"},"nodeType":"YulFunctionCall","src":"2115:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:16"}]},{"nodeType":"YulAssignment","src":"2146:40:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:16"},"nodeType":"YulFunctionCall","src":"2159:27:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:16"},"nodeType":"YulFunctionCall","src":"1972:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:16","statements":[{"nodeType":"YulAssignment","src":"1989:24:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:16"},"nodeType":"YulFunctionCall","src":"1994:19:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:16","statements":[]},"src":"1964:236:16"},{"body":{"nodeType":"YulBlock","src":"2248:166:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:16"},"nodeType":"YulFunctionCall","src":"2289:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:16"},"nodeType":"YulFunctionCall","src":"2283:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:16"},"nodeType":"YulFunctionCall","src":"2368:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:16"},"nodeType":"YulFunctionCall","src":"2364:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:16"},"nodeType":"YulFunctionCall","src":"2390:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:16"},"nodeType":"YulFunctionCall","src":"2360:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:16"},"nodeType":"YulFunctionCall","src":"2356:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:16"},"nodeType":"YulFunctionCall","src":"2341:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:16"},"nodeType":"YulFunctionCall","src":"2326:74:16"},"nodeType":"YulExpressionStatement","src":"2326:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:16"},"nodeType":"YulFunctionCall","src":"2216:19:16"},"nodeType":"YulIf","src":"2213:201:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:16"},"nodeType":"YulFunctionCall","src":"2444:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:16"},"nodeType":"YulFunctionCall","src":"2440:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:16"},"nodeType":"YulFunctionCall","src":"2427:36:16"},"nodeType":"YulExpressionStatement","src":"2427:36:16"}]},"nodeType":"YulCase","src":"1810:663:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:16","statements":[{"nodeType":"YulAssignment","src":"2571:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:16"},"nodeType":"YulFunctionCall","src":"2586:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:16"},"nodeType":"YulFunctionCall","src":"2580:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:16"},"nodeType":"YulIf","src":"2531:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:16"},"nodeType":"YulFunctionCall","src":"2646:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:16"},"nodeType":"YulFunctionCall","src":"2633:81:16"},"nodeType":"YulExpressionStatement","src":"2633:81:16"}]},"nodeType":"YulCase","src":"2482:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:16"},"nodeType":"YulFunctionCall","src":"1787:14:16"},"nodeType":"YulSwitch","src":"1780:944:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:16","type":""}],"src":"1378:1352:16"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c0604052600d60809081526c2bb930b83832b21022ba3432b960991b60a05260009061002c9082610114565b506040805180820190915260048152630ae8aa8960e31b60208201526001906100559082610114565b506002805460ff1916601217905534801561006f57600080fd5b506101d3565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009f57607f821691505b6020821081036100bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010f57600081815260208120601f850160051c810160208610156100ec5750805b601f850160051c820191505b8181101561010b578281556001016100f8565b5050505b505050565b81516001600160401b0381111561012d5761012d610075565b6101418161013b845461008b565b846100c5565b602080601f831160018114610176576000841561015e5750858301515b600019600386901b1c1916600185901b17855561010b565b600085815260208120601f198616915b828110156101a557888601518255948401946001909101908401610186565b50858210156101c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6107be806101e26000396000f3fe6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce5671461016c57806370a082311461019857806395d89b41146101c5578063a9059cbb146101da578063d0e30db0146101fa578063dd62ed3e1461020257600080fd5b806306fdde03146100b4578063095ea7b3146100df57806318160ddd1461010f57806323b872dd1461012c5780632e1a7d4d1461014c57600080fd5b366100af576100ad61023a565b005b600080fd5b3480156100c057600080fd5b506100c9610295565b6040516100d691906105db565b60405180910390f35b3480156100eb57600080fd5b506100ff6100fa366004610645565b610323565b60405190151581526020016100d6565b34801561011b57600080fd5b50475b6040519081526020016100d6565b34801561013857600080fd5b506100ff61014736600461066f565b610390565b34801561015857600080fd5b506100ad6101673660046106ab565b610514565b34801561017857600080fd5b506002546101869060ff1681565b60405160ff90911681526020016100d6565b3480156101a457600080fd5b5061011e6101b33660046106c4565b60036020526000908152604090205481565b3480156101d157600080fd5b506100c96105ba565b3480156101e657600080fd5b506100ff6101f5366004610645565b6105c7565b6100ad61023a565b34801561020e57600080fd5b5061011e61021d3660046106df565b600460209081526000928352604080842090915290825290205481565b3360009081526003602052604081208054349290610259908490610728565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546102a29061073b565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce9061073b565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061037e9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600360205260408120548211156103b557600080fd5b6001600160a01b03841633148015906103f357506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b15610461576001600160a01b038416600090815260046020908152604080832033845290915290205482111561042857600080fd5b6001600160a01b03841660009081526004602090815260408083203384529091528120805484929061045b908490610775565b90915550505b6001600160a01b03841660009081526003602052604081208054849290610489908490610775565b90915550506001600160a01b038316600090815260036020526040812080548492906104b6908490610728565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161050291815260200190565b60405180910390a35060019392505050565b3360009081526003602052604090205481111561053057600080fd5b336000908152600360205260408120805483929061054f908490610775565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610581573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b600180546102a29061073b565b60006105d4338484610390565b9392505050565b600060208083528351808285015260005b81811015610608578581018301518582016040015282016105ec565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461064057600080fd5b919050565b6000806040838503121561065857600080fd5b61066183610629565b946020939093013593505050565b60008060006060848603121561068457600080fd5b61068d84610629565b925061069b60208501610629565b9150604084013590509250925092565b6000602082840312156106bd57600080fd5b5035919050565b6000602082840312156106d657600080fd5b6105d482610629565b600080604083850312156106f257600080fd5b6106fb83610629565b915061070960208401610629565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561038a5761038a610712565b600181811c9082168061074f57607f821691505b60208210810361076f57634e487b7160e01b600052602260045260246000fd5b50919050565b8181038181111561038a5761038a61071256fea2646970667358221220ad7400e3320a715068c376d85ef4ea64373b9085040fede77be631e2d7cc787764736f6c63430008140033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0xD PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH13 0x2BB930B83832B21022BA3432B9 PUSH1 0x99 SHL PUSH1 0xA0 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2C SWAP1 DUP3 PUSH2 0x114 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0xAE8AA89 PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SWAP1 PUSH2 0x55 SWAP1 DUP3 PUSH2 0x114 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xEC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x12D JUMPI PUSH2 0x12D PUSH2 0x75 JUMP JUMPDEST PUSH2 0x141 DUP2 PUSH2 0x13B DUP5 SLOAD PUSH2 0x8B JUMP JUMPDEST DUP5 PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x15E JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x10B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x186 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1C3 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x7BE DUP1 PUSH2 0x1E2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xAF JUMPI PUSH2 0xAD PUSH2 0x23A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x186 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x5BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0xAD PUSH2 0x23A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x259 SWAP1 DUP5 SWAP1 PUSH2 0x728 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x2A2 SWAP1 PUSH2 0x73B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CE SWAP1 PUSH2 0x73B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x37E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3F3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT EQ ISZERO JUMPDEST ISZERO PUSH2 0x461 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x45B SWAP1 DUP5 SWAP1 PUSH2 0x775 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x489 SWAP1 DUP5 SWAP1 PUSH2 0x775 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4B6 SWAP1 DUP5 SWAP1 PUSH2 0x728 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x54F SWAP1 DUP5 SWAP1 PUSH2 0x775 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x581 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x2A2 SWAP1 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D4 CALLER DUP5 DUP5 PUSH2 0x390 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5EC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x661 DUP4 PUSH2 0x629 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x68D DUP5 PUSH2 0x629 JUMP JUMPDEST SWAP3 POP PUSH2 0x69B PUSH1 0x20 DUP6 ADD PUSH2 0x629 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D4 DUP3 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FB DUP4 PUSH2 0x629 JUMP JUMPDEST SWAP2 POP PUSH2 0x709 PUSH1 0x20 DUP5 ADD PUSH2 0x629 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x38A JUMPI PUSH2 0x38A PUSH2 0x712 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x74F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x76F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x38A JUMPI PUSH2 0x38A PUSH2 0x712 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH21 0xE3320A715068C376D85EF4EA64373B9085040FED 0xE7 PUSH28 0xE631E2D7CC787764736F6C6343000814003300000000000000000000 ","sourceMap":"79:36:15:-:0;58:1832;79:36;;58:1832;79:36;;;-1:-1:-1;;;79:36:15;;-1:-1:-1;;79:36:15;;-1:-1:-1;79:36:15;:::i;:::-;-1:-1:-1;121:29:15;;;;;;;;;;;;-1:-1:-1;;;121:29:15;;;;;;;;;;:::i;:::-;-1:-1:-1;156:26:15;;;-1:-1:-1;;156:26:15;180:2;156:26;;;58:1832;;;;;;;;;;;;14:127:16;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:16;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:16;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:16;;;2580:26;2531:89;-1:-1:-1;;1335:1:16;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:16;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:16;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:16;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:16:o;:::-;58:1832:15;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_2840":{"entryPoint":null,"id":2840,"parameterSlots":0,"returnSlots":0},"@allowance_2833":{"entryPoint":null,"id":2833,"parameterSlots":0,"returnSlots":0},"@approve_2936":{"entryPoint":803,"id":2936,"parameterSlots":2,"returnSlots":1},"@balanceOf_2827":{"entryPoint":null,"id":2827,"parameterSlots":0,"returnSlots":0},"@decimals_2795":{"entryPoint":null,"id":2795,"parameterSlots":0,"returnSlots":0},"@deposit_2859":{"entryPoint":570,"id":2859,"parameterSlots":0,"returnSlots":0},"@name_2789":{"entryPoint":661,"id":2789,"parameterSlots":0,"returnSlots":0},"@symbol_2792":{"entryPoint":1466,"id":2792,"parameterSlots":0,"returnSlots":0},"@totalSupply_2908":{"entryPoint":null,"id":2908,"parameterSlots":0,"returnSlots":1},"@transferFrom_3032":{"entryPoint":912,"id":3032,"parameterSlots":3,"returnSlots":1},"@transfer_2953":{"entryPoint":1479,"id":2953,"parameterSlots":2,"returnSlots":1},"@withdraw_2896":{"entryPoint":1300,"id":2896,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":1577,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1759,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1647,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1605,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1832,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1909,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1851,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1810,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3318:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:16","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:16"},"nodeType":"YulFunctionCall","src":"166:21:16"},"nodeType":"YulExpressionStatement","src":"166:21:16"},{"nodeType":"YulVariableDeclaration","src":"196:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:16"},"nodeType":"YulFunctionCall","src":"210:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:16"},"nodeType":"YulFunctionCall","src":"239:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:16"},"nodeType":"YulFunctionCall","src":"232:34:16"},"nodeType":"YulExpressionStatement","src":"232:34:16"},{"nodeType":"YulVariableDeclaration","src":"275:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:16"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:16"},"nodeType":"YulFunctionCall","src":"369:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:16"},"nodeType":"YulFunctionCall","src":"365:26:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:16"},"nodeType":"YulFunctionCall","src":"403:14:16"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:16"},"nodeType":"YulFunctionCall","src":"393:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:16"},"nodeType":"YulFunctionCall","src":"358:66:16"},"nodeType":"YulExpressionStatement","src":"358:66:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:16"},"nodeType":"YulFunctionCall","src":"302:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:16","statements":[{"nodeType":"YulAssignment","src":"318:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:16"},"nodeType":"YulFunctionCall","src":"323:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:16","statements":[]},"src":"294:140:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:16"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:16"},"nodeType":"YulFunctionCall","src":"454:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:16"},"nodeType":"YulFunctionCall","src":"450:31:16"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:16"},"nodeType":"YulFunctionCall","src":"443:42:16"},"nodeType":"YulExpressionStatement","src":"443:42:16"},{"nodeType":"YulAssignment","src":"494:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:16"},"nodeType":"YulFunctionCall","src":"525:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:16"},"nodeType":"YulFunctionCall","src":"542:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:16"},"nodeType":"YulFunctionCall","src":"521:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:16"},"nodeType":"YulFunctionCall","src":"506:45:16"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:16"},"nodeType":"YulFunctionCall","src":"502:54:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:16","type":""}],"src":"14:548:16"},{"body":{"nodeType":"YulBlock","src":"616:124:16","statements":[{"nodeType":"YulAssignment","src":"626:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:16"},"nodeType":"YulFunctionCall","src":"635:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:16"}]},{"body":{"nodeType":"YulBlock","src":"718:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:16"},"nodeType":"YulFunctionCall","src":"720:12:16"},"nodeType":"YulExpressionStatement","src":"720:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:16"},"nodeType":"YulFunctionCall","src":"699:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:16"},"nodeType":"YulFunctionCall","src":"695:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:16"},"nodeType":"YulFunctionCall","src":"684:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:16"},"nodeType":"YulFunctionCall","src":"674:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:16"},"nodeType":"YulFunctionCall","src":"667:50:16"},"nodeType":"YulIf","src":"664:70:16"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:16","type":""}],"src":"567:173:16"},{"body":{"nodeType":"YulBlock","src":"832:167:16","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:16"},"nodeType":"YulFunctionCall","src":"880:12:16"},"nodeType":"YulExpressionStatement","src":"880:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:16"},"nodeType":"YulFunctionCall","src":"849:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:16"},"nodeType":"YulFunctionCall","src":"845:32:16"},"nodeType":"YulIf","src":"842:52:16"},{"nodeType":"YulAssignment","src":"903:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:16"},"nodeType":"YulFunctionCall","src":"913:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:16"}]},{"nodeType":"YulAssignment","src":"951:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:16"},"nodeType":"YulFunctionCall","src":"974:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:16"},"nodeType":"YulFunctionCall","src":"961:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:16","type":""}],"src":"745:254:16"},{"body":{"nodeType":"YulBlock","src":"1099:92:16","statements":[{"nodeType":"YulAssignment","src":"1109:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:16"},"nodeType":"YulFunctionCall","src":"1117:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:16"},"nodeType":"YulFunctionCall","src":"1169:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:16"},"nodeType":"YulFunctionCall","src":"1162:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:16"},"nodeType":"YulFunctionCall","src":"1144:41:16"},"nodeType":"YulExpressionStatement","src":"1144:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:16","type":""}],"src":"1004:187:16"},{"body":{"nodeType":"YulBlock","src":"1297:76:16","statements":[{"nodeType":"YulAssignment","src":"1307:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:16"},"nodeType":"YulFunctionCall","src":"1315:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:16"},"nodeType":"YulFunctionCall","src":"1342:25:16"},"nodeType":"YulExpressionStatement","src":"1342:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:16","type":""}],"src":"1196:177:16"},{"body":{"nodeType":"YulBlock","src":"1482:224:16","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:16"},"nodeType":"YulFunctionCall","src":"1530:12:16"},"nodeType":"YulExpressionStatement","src":"1530:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:16"},"nodeType":"YulFunctionCall","src":"1499:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:16"},"nodeType":"YulFunctionCall","src":"1495:32:16"},"nodeType":"YulIf","src":"1492:52:16"},{"nodeType":"YulAssignment","src":"1553:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:16"},"nodeType":"YulFunctionCall","src":"1563:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:16"}]},{"nodeType":"YulAssignment","src":"1601:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:16"},"nodeType":"YulFunctionCall","src":"1630:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:16"},"nodeType":"YulFunctionCall","src":"1611:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:16"}]},{"nodeType":"YulAssignment","src":"1658:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:16"},"nodeType":"YulFunctionCall","src":"1681:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:16"},"nodeType":"YulFunctionCall","src":"1668:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:16","type":""}],"src":"1378:328:16"},{"body":{"nodeType":"YulBlock","src":"1781:110:16","statements":[{"body":{"nodeType":"YulBlock","src":"1827:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1836:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1829:6:16"},"nodeType":"YulFunctionCall","src":"1829:12:16"},"nodeType":"YulExpressionStatement","src":"1829:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1802:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1811:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1798:3:16"},"nodeType":"YulFunctionCall","src":"1798:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1823:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1794:3:16"},"nodeType":"YulFunctionCall","src":"1794:32:16"},"nodeType":"YulIf","src":"1791:52:16"},{"nodeType":"YulAssignment","src":"1852:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1875:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1862:12:16"},"nodeType":"YulFunctionCall","src":"1862:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1852:6:16"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1747:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1758:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1770:6:16","type":""}],"src":"1711:180:16"},{"body":{"nodeType":"YulBlock","src":"1993:87:16","statements":[{"nodeType":"YulAssignment","src":"2003:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2015:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2026:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2011:3:16"},"nodeType":"YulFunctionCall","src":"2011:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2003:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2045:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2060:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2068:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2056:3:16"},"nodeType":"YulFunctionCall","src":"2056:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2038:6:16"},"nodeType":"YulFunctionCall","src":"2038:36:16"},"nodeType":"YulExpressionStatement","src":"2038:36:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1962:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1973:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1984:4:16","type":""}],"src":"1896:184:16"},{"body":{"nodeType":"YulBlock","src":"2155:116:16","statements":[{"body":{"nodeType":"YulBlock","src":"2201:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2210:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2213:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2203:6:16"},"nodeType":"YulFunctionCall","src":"2203:12:16"},"nodeType":"YulExpressionStatement","src":"2203:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2176:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2185:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2172:3:16"},"nodeType":"YulFunctionCall","src":"2172:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2197:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2168:3:16"},"nodeType":"YulFunctionCall","src":"2168:32:16"},"nodeType":"YulIf","src":"2165:52:16"},{"nodeType":"YulAssignment","src":"2226:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2255:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2236:18:16"},"nodeType":"YulFunctionCall","src":"2236:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2226:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2121:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2132:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2144:6:16","type":""}],"src":"2085:186:16"},{"body":{"nodeType":"YulBlock","src":"2363:173:16","statements":[{"body":{"nodeType":"YulBlock","src":"2409:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2418:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2421:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2411:6:16"},"nodeType":"YulFunctionCall","src":"2411:12:16"},"nodeType":"YulExpressionStatement","src":"2411:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2384:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2393:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2380:3:16"},"nodeType":"YulFunctionCall","src":"2380:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2405:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2376:3:16"},"nodeType":"YulFunctionCall","src":"2376:32:16"},"nodeType":"YulIf","src":"2373:52:16"},{"nodeType":"YulAssignment","src":"2434:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2463:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2444:18:16"},"nodeType":"YulFunctionCall","src":"2444:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2434:6:16"}]},{"nodeType":"YulAssignment","src":"2482:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2515:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2526:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2511:3:16"},"nodeType":"YulFunctionCall","src":"2511:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2492:18:16"},"nodeType":"YulFunctionCall","src":"2492:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2482:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2321:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2332:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2344:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2352:6:16","type":""}],"src":"2276:260:16"},{"body":{"nodeType":"YulBlock","src":"2573:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2590:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2597:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2602:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2593:3:16"},"nodeType":"YulFunctionCall","src":"2593:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2583:6:16"},"nodeType":"YulFunctionCall","src":"2583:31:16"},"nodeType":"YulExpressionStatement","src":"2583:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2630:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2633:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2623:6:16"},"nodeType":"YulFunctionCall","src":"2623:15:16"},"nodeType":"YulExpressionStatement","src":"2623:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2654:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2657:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2647:6:16"},"nodeType":"YulFunctionCall","src":"2647:15:16"},"nodeType":"YulExpressionStatement","src":"2647:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"2541:127:16"},{"body":{"nodeType":"YulBlock","src":"2721:77:16","statements":[{"nodeType":"YulAssignment","src":"2731:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2742:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"2745:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2738:3:16"},"nodeType":"YulFunctionCall","src":"2738:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2731:3:16"}]},{"body":{"nodeType":"YulBlock","src":"2770:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2772:16:16"},"nodeType":"YulFunctionCall","src":"2772:18:16"},"nodeType":"YulExpressionStatement","src":"2772:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2762:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"2765:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2759:2:16"},"nodeType":"YulFunctionCall","src":"2759:10:16"},"nodeType":"YulIf","src":"2756:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2704:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"2707:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2713:3:16","type":""}],"src":"2673:125:16"},{"body":{"nodeType":"YulBlock","src":"2858:325:16","statements":[{"nodeType":"YulAssignment","src":"2868:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2882:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2885:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2878:3:16"},"nodeType":"YulFunctionCall","src":"2878:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2868:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2899:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2929:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"2935:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2925:3:16"},"nodeType":"YulFunctionCall","src":"2925:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2903:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2976:31:16","statements":[{"nodeType":"YulAssignment","src":"2978:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2992:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3000:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2988:3:16"},"nodeType":"YulFunctionCall","src":"2988:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2978:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2956:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2949:6:16"},"nodeType":"YulFunctionCall","src":"2949:26:16"},"nodeType":"YulIf","src":"2946:61:16"},{"body":{"nodeType":"YulBlock","src":"3066:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3087:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3094:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3099:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3090:3:16"},"nodeType":"YulFunctionCall","src":"3090:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3080:6:16"},"nodeType":"YulFunctionCall","src":"3080:31:16"},"nodeType":"YulExpressionStatement","src":"3080:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3131:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3134:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3124:6:16"},"nodeType":"YulFunctionCall","src":"3124:15:16"},"nodeType":"YulExpressionStatement","src":"3124:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3159:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3162:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3152:6:16"},"nodeType":"YulFunctionCall","src":"3152:15:16"},"nodeType":"YulExpressionStatement","src":"3152:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3022:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3045:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3053:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3042:2:16"},"nodeType":"YulFunctionCall","src":"3042:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3019:2:16"},"nodeType":"YulFunctionCall","src":"3019:38:16"},"nodeType":"YulIf","src":"3016:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2838:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2847:6:16","type":""}],"src":"2803:380:16"},{"body":{"nodeType":"YulBlock","src":"3237:79:16","statements":[{"nodeType":"YulAssignment","src":"3247:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3259:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"3262:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3255:3:16"},"nodeType":"YulFunctionCall","src":"3255:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"3247:4:16"}]},{"body":{"nodeType":"YulBlock","src":"3288:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3290:16:16"},"nodeType":"YulFunctionCall","src":"3290:18:16"},"nodeType":"YulExpressionStatement","src":"3290:18:16"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"3279:4:16"},{"name":"x","nodeType":"YulIdentifier","src":"3285:1:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3276:2:16"},"nodeType":"YulFunctionCall","src":"3276:11:16"},"nodeType":"YulIf","src":"3273:37:16"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3219:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"3222:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"3228:4:16","type":""}],"src":"3188:128:16"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce5671461016c57806370a082311461019857806395d89b41146101c5578063a9059cbb146101da578063d0e30db0146101fa578063dd62ed3e1461020257600080fd5b806306fdde03146100b4578063095ea7b3146100df57806318160ddd1461010f57806323b872dd1461012c5780632e1a7d4d1461014c57600080fd5b366100af576100ad61023a565b005b600080fd5b3480156100c057600080fd5b506100c9610295565b6040516100d691906105db565b60405180910390f35b3480156100eb57600080fd5b506100ff6100fa366004610645565b610323565b60405190151581526020016100d6565b34801561011b57600080fd5b50475b6040519081526020016100d6565b34801561013857600080fd5b506100ff61014736600461066f565b610390565b34801561015857600080fd5b506100ad6101673660046106ab565b610514565b34801561017857600080fd5b506002546101869060ff1681565b60405160ff90911681526020016100d6565b3480156101a457600080fd5b5061011e6101b33660046106c4565b60036020526000908152604090205481565b3480156101d157600080fd5b506100c96105ba565b3480156101e657600080fd5b506100ff6101f5366004610645565b6105c7565b6100ad61023a565b34801561020e57600080fd5b5061011e61021d3660046106df565b600460209081526000928352604080842090915290825290205481565b3360009081526003602052604081208054349290610259908490610728565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546102a29061073b565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce9061073b565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061037e9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600360205260408120548211156103b557600080fd5b6001600160a01b03841633148015906103f357506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b15610461576001600160a01b038416600090815260046020908152604080832033845290915290205482111561042857600080fd5b6001600160a01b03841660009081526004602090815260408083203384529091528120805484929061045b908490610775565b90915550505b6001600160a01b03841660009081526003602052604081208054849290610489908490610775565b90915550506001600160a01b038316600090815260036020526040812080548492906104b6908490610728565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161050291815260200190565b60405180910390a35060019392505050565b3360009081526003602052604090205481111561053057600080fd5b336000908152600360205260408120805483929061054f908490610775565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610581573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b600180546102a29061073b565b60006105d4338484610390565b9392505050565b600060208083528351808285015260005b81811015610608578581018301518582016040015282016105ec565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461064057600080fd5b919050565b6000806040838503121561065857600080fd5b61066183610629565b946020939093013593505050565b60008060006060848603121561068457600080fd5b61068d84610629565b925061069b60208501610629565b9150604084013590509250925092565b6000602082840312156106bd57600080fd5b5035919050565b6000602082840312156106d657600080fd5b6105d482610629565b600080604083850312156106f257600080fd5b6106fb83610629565b915061070960208401610629565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561038a5761038a610712565b600181811c9082168061074f57607f821691505b60208210810361076f57634e487b7160e01b600052602260045260246000fd5b50919050565b8181038181111561038a5761038a61071256fea2646970667358221220ad7400e3320a715068c376d85ef4ea64373b9085040fede77be631e2d7cc787764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xAF JUMPI PUSH2 0xAD PUSH2 0x23A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x186 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x5BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0xAD PUSH2 0x23A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x259 SWAP1 DUP5 SWAP1 PUSH2 0x728 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x2A2 SWAP1 PUSH2 0x73B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CE SWAP1 PUSH2 0x73B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x37E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3F3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT EQ ISZERO JUMPDEST ISZERO PUSH2 0x461 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x45B SWAP1 DUP5 SWAP1 PUSH2 0x775 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x489 SWAP1 DUP5 SWAP1 PUSH2 0x775 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4B6 SWAP1 DUP5 SWAP1 PUSH2 0x728 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x54F SWAP1 DUP5 SWAP1 PUSH2 0x775 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x581 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x2A2 SWAP1 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D4 CALLER DUP5 DUP5 PUSH2 0x390 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5EC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x661 DUP4 PUSH2 0x629 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x68D DUP5 PUSH2 0x629 JUMP JUMPDEST SWAP3 POP PUSH2 0x69B PUSH1 0x20 DUP6 ADD PUSH2 0x629 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D4 DUP3 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FB DUP4 PUSH2 0x629 JUMP JUMPDEST SWAP2 POP PUSH2 0x709 PUSH1 0x20 DUP5 ADD PUSH2 0x629 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x38A JUMPI PUSH2 0x38A PUSH2 0x712 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x74F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x76F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x38A JUMPI PUSH2 0x38A PUSH2 0x712 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH21 0xE3320A715068C376D85EF4EA64373B9085040FED 0xE7 PUSH28 0xE631E2D7CC787764736F6C6343000814003300000000000000000000 ","sourceMap":"58:1832:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;607:9;:7;:9::i;:::-;58:1832;;;;;79:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1090:180;;;;;;;;;;-1:-1:-1;1090:180:15;;;;;:::i;:::-;;:::i;:::-;;;1169:14:16;;1162:22;1144:41;;1132:2;1117:18;1090:180:15;1004:187:16;986:98:15;;;;;;;;;;-1:-1:-1;1056:21:15;986:98;;;1342:25:16;;;1330:2;1315:18;986:98:15;1196:177:16;1406:482:15;;;;;;;;;;-1:-1:-1;1406:482:15;;;;;:::i;:::-;;:::i;765:215::-;;;;;;;;;;-1:-1:-1;765:215:15;;;;;:::i;:::-;;:::i;156:26::-;;;;;;;;;;-1:-1:-1;156:26:15;;;;;;;;;;;2068:4:16;2056:17;;;2038:36;;2026:2;2011:18;156:26:15;1896:184:16;449:44:15;;;;;;;;;;-1:-1:-1;449:44:15;;;;;:::i;:::-;;;;;;;;;;;;;;121:29;;;;;;;;;;;;;:::i;1276:124::-;;;;;;;;;;-1:-1:-1;1276:124:15;;;;;:::i;:::-;;:::i;629:130::-;;;:::i;499:64::-;;;;;;;;;;-1:-1:-1;499:64:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;629:130;683:10;673:21;;;;:9;:21;;;;;:34;;698:9;;673:21;:34;;698:9;;673:34;:::i;:::-;;;;-1:-1:-1;;722:30:15;;742:9;1342:25:16;;730:10:15;;722:30;;1330:2:16;1315:18;722:30:15;;;;;;;629:130::o;79:36::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1090:180::-;1175:10;1149:4;1165:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;1165:26:15;;;;;;;;;;:32;;;1212:30;1149:4;;1165:26;;1212:30;;;;1194:3;1342:25:16;;1330:2;1315:18;;1196:177;1212:30:15;;;;;;;;-1:-1:-1;1259:4:15;1090:180;;;;;:::o;1406:482::-;-1:-1:-1;;;;;1537:14:15;;1513:4;1537:14;;;:9;:14;;;;;;:21;-1:-1:-1;1537:21:15;1529:30;;;;;;-1:-1:-1;;;;;1574:17:15;;1581:10;1574:17;;;;:68;;-1:-1:-1;;;;;;1595:14:15;;;;;;:9;:14;;;;;;;;1610:10;1595:26;;;;;;;;-1:-1:-1;;1595:47:15;;1574:68;1570:188;;;-1:-1:-1;;;;;1666:14:15;;;;;;:9;:14;;;;;;;;1681:10;1666:26;;;;;;;;:33;-1:-1:-1;1666:33:15;1658:42;;;;;;-1:-1:-1;;;;;1714:14:15;;;;;;:9;:14;;;;;;;;1729:10;1714:26;;;;;;;:33;;1744:3;;1714:14;:33;;1744:3;;1714:33;:::i;:::-;;;;-1:-1:-1;;1570:188:15;-1:-1:-1;;;;;1768:14:15;;;;;;:9;:14;;;;;:21;;1786:3;;1768:14;:21;;1786:3;;1768:21;:::i;:::-;;;;-1:-1:-1;;;;;;;1799:14:15;;;;;;:9;:14;;;;;:21;;1817:3;;1799:14;:21;;1817:3;;1799:21;:::i;:::-;;;;;;;;1850:3;-1:-1:-1;;;;;1836:23:15;1845:3;-1:-1:-1;;;;;1836:23:15;;1855:3;1836:23;;;;1342:25:16;;1330:2;1315:18;;1196:177;1836:23:15;;;;;;;;-1:-1:-1;1877:4:15;1406:482;;;;;:::o;765:215::-;831:10;821:21;;;;:9;:21;;;;;;:28;-1:-1:-1;821:28:15;813:37;;;;;;870:10;860:21;;;;:9;:21;;;;;:28;;885:3;;860:21;:28;;885:3;;860:28;:::i;:::-;;;;-1:-1:-1;;898:33:15;;906:10;;898:33;;;;;927:3;;898:33;;;;927:3;906:10;898:33;;;;;;;;;;;;;;;;;;;;-1:-1:-1;946:27:15;;1342:25:16;;;957:10:15;;946:27;;1330:2:16;1315:18;946:27:15;;;;;;;765:215;:::o;121:29::-;;;;;;;:::i;1276:124::-;1336:4;1359:34;1372:10;1384:3;1389;1359:12;:34::i;:::-;1352:41;1276:124;-1:-1:-1;;;1276:124:15:o;14:548:16:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:16;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:16:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1711:180::-;1770:6;1823:2;1811:9;1802:7;1798:23;1794:32;1791:52;;;1839:1;1836;1829:12;1791:52;-1:-1:-1;1862:23:16;;1711:180;-1:-1:-1;1711:180:16:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;2276:260::-;2344:6;2352;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;2444:29;2463:9;2444:29;:::i;:::-;2434:39;;2492:38;2526:2;2515:9;2511:18;2492:38;:::i;:::-;2482:48;;2276:260;;;;;:::o;2541:127::-;2602:10;2597:3;2593:20;2590:1;2583:31;2633:4;2630:1;2623:15;2657:4;2654:1;2647:15;2673:125;2738:9;;;2759:10;;;2756:36;;;2772:18;;:::i;2803:380::-;2882:1;2878:12;;;;2925;;;2946:61;;3000:4;2992:6;2988:17;2978:27;;2946:61;3053:2;3045:6;3042:14;3022:18;3019:38;3016:161;;3099:10;3094:3;3090:20;3087:1;3080:31;3134:4;3131:1;3124:15;3162:4;3159:1;3152:15;3016:161;;2803:380;;;:::o;3188:128::-;3255:9;;;3276:11;;;3273:37;;;3290:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"396400","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24523","balanceOf(address)":"2541","decimals()":"2313","deposit()":"26014","name()":"infinite","symbol()":"infinite","totalSupply()":"228","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","withdraw(uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","deposit()":"d0e30db0","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/WETH9.sol\":\"WETH9\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mock/WETH9.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ncontract WETH9 {\\n    string public name = \\\"Wrapped Ether\\\";\\n    string public symbol = \\\"WETH\\\";\\n    uint8 public decimals = 18;\\n\\n    event Approval(address indexed src, address indexed guy, uint256 wad);\\n    event Transfer(address indexed src, address indexed dst, uint256 wad);\\n    event Deposit(address indexed dst, uint256 wad);\\n    event Withdrawal(address indexed src, uint256 wad);\\n\\n    mapping(address => uint256) public balanceOf;\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    receive() external payable {\\n        deposit();\\n    }\\n\\n    function deposit() public payable {\\n        balanceOf[msg.sender] += msg.value;\\n        emit Deposit(msg.sender, msg.value);\\n    }\\n\\n    function withdraw(uint256 wad) public {\\n        require(balanceOf[msg.sender] >= wad);\\n        balanceOf[msg.sender] -= wad;\\n        payable(msg.sender).transfer(wad);\\n        emit Withdrawal(msg.sender, wad);\\n    }\\n\\n    function totalSupply() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function approve(address guy, uint256 wad) public returns (bool) {\\n        allowance[msg.sender][guy] = wad;\\n        emit Approval(msg.sender, guy, wad);\\n        return true;\\n    }\\n\\n    function transfer(address dst, uint256 wad) public returns (bool) {\\n        return transferFrom(msg.sender, dst, wad);\\n    }\\n\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 wad\\n    ) public returns (bool) {\\n        require(balanceOf[src] >= wad);\\n\\n        if (src != msg.sender && allowance[src][msg.sender] != type(uint256).max) {\\n            require(allowance[src][msg.sender] >= wad);\\n            allowance[src][msg.sender] -= wad;\\n        }\\n\\n        balanceOf[src] -= wad;\\n        balanceOf[dst] += wad;\\n\\n        emit Transfer(src, dst, wad);\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xa7712ae78b2bd3e8ef977a611e94a97c80cf402cc6cd7ee2a1900626bb50df77\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2789,"contract":"contracts/mock/WETH9.sol:WETH9","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2792,"contract":"contracts/mock/WETH9.sol:WETH9","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2795,"contract":"contracts/mock/WETH9.sol:WETH9","label":"decimals","offset":0,"slot":"2","type":"t_uint8"},{"astId":2827,"contract":"contracts/mock/WETH9.sol:WETH9","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2833,"contract":"contracts/mock/WETH9.sol:WETH9","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}